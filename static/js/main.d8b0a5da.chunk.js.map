{"version":3,"sources":["actions/index.js","sections/texteditor.js","sections/navigation.js","sections/panelcontainer.js","modules/select.js","sections/numberttransform.js","sections/panelmemory.js","sections/panelconsole.js","sections/panellog.js","sections/help.js","developer_list.js","sections/about.js","modules/hotkey.js","sections/settings.js","modules/input.js","../oak/VirtualOS.js","../oak/Enum.js","../oak/Utils.js","../oak/InstructionSet.js","../oak/Assembler.js","../oak/Core.js","../oak/index.js","sections/panelsettings.js","sections/panelconversion.js","sections/panelregisters.js","sections/panelmachinecode.js","../isas/RISCV.js","../isas/MIPS.js","app.js","reducers/tab.js","reducers/selectedtab.js","reducers/globalsettings.js","reducers/projectsettings.js","reducers/setvisibility.js","reducers/index.js","index.js"],"names":["Actions","setSettingsVisible","state","type","setHelpVisible","setAboutVisible","selectTab","id","updateTab","index","tab","setProjectSettings","n","s","i","payload","file_name","memory_size","isa","TextEditor","addTab","props","handleTabChange","tabs","name","core","memorySize","instruction_set","handleTabClose","event","stopPropagation","selected","selectedtab","Math","min","max","length","deleteTab","setEditorValue","val","current_tab","content","this","className","map","onClick","key","mode","theme","onChange","width","height","value","readOnly","is_disabled","editorProps","$blockScrolling","Infinity","Component","connect","dispatch","ownProps","SimulatingStatus","Navigation","assemble_css","runningStatus","console_input_type","handleAddTabRiscv","handleAddTabMips","handleLoadAsm","handleLoadBin","handleDownloadAsm","downloadBin","downloadBinH","downloadRam","showSettings","showHelp","showAbout","assemble","simulate","stepbystep","withLocalize","visible","PanelContainer","renderTabs","React","Children","children","child","display_name","e","handleClickTab","preventDefault","setState","childrenProps","cloneElement","onMouseDown","handleStartDrag","Select","style","backgroundImage","icon","placeholder","padNumber","str","padded","PanelMemory","handleType","register_type","parseInt","target","translateRegister","input","toString","memory","empty","defaultValue","byte","PanelConsole","log","console","running","line","show_input","PanelLog","instruction","Help","handleClose","handleStopClose","options","renderInnerHtml","panel_visibility","help","additional","translators","About","printdev","arr","element","href","link","src","pic","job","affiliation","desc","devs","lang","about","HotkeyInput","handleClick","capturing","window","addEventListener","handleKey","toLowerCase","shift","shiftKey","ctrl","ctrlKey","alt","altKey","key_name","removeEventListener","save","testKey","key_ctrl","key_alt","key_shift","setKey","done","getKey","setKeyStr","upos","indexOf","mods","substr","combo","c","tabIndex","themes","Settings","canhandleinput","cancel","hotkey","comp_new","current","comp_load","comp_save","comp_assemble","comp_step","comp_sim","hotkeyfns","fn_new","fn_load","fn_save","fn_ass","fn_step","fn_sim","setDefaults","setTheme","setDefaultsSave","saveSettings","d","Date","setTime","getTime","exp","toUTCString","document","cookie","continuefn","includes","forEach","getElementById","disabled","handleISA","default_isa","handleTheme","acceptCookies","use_cookies","deleteAllCookies","cookies","split","eqPos","createRef","has_cookies","ca","charAt","substring","eq","display","position","colSpan","ref","settings","Input","VirtualOS","continueInputString","reg","virtualOSArgumentVectorStart","arg","registerFile","read","array","push","charCodeAt","memset","continueInputInt","write","service","virtualOSServiceRegister","start","outputInt","iterator","char","memcpy","outStr","String","fromCharCode","join","outputString","inputInt","inputString","handleHalt","Enum","object","Utils","bits","mutableValue","signExt","bytes","bigEndian","reverse","storage","number","digits","radix","hexadecimal","hexRepresentation","toUpperCase","Parameter","immediate","register","condition","offset","special","fpImmediate","Endianness","little","big","bi","Keyword","directive","comment","label","stringMarker","charMarker","string","numberic","Directive","text","data","cString","_8bit","_16bit","_32bit","_64bit","fixedPoint","floatingPoint","custom","BitRange","field","constant","signed","totalBits","limitStart","limitEnd","parameter","parameterType","parameterDefaultValue","Format","ranges","regex","disassembly","processSpecialParameter","decodeSpecialParameter","Instruction","mnemonic","format","constants","constValues","executor","signatoryOverride","pseudoInstructionFor","computedBits","computedMask","computedTemplate","machineCode","machineCodeMutable","maskBits","mask","bit","count","ceil","range","before","end","addition","pad","after","temp","InstructionSet","formats","instructions","pseudoInstructions","abiNames","keywords","directives","incrementOnFetch","exampleCode","sort","a","b","result","hasPrefix","captures","exec","args","output","replace","prototype","interpretedBytes","hexes","isNaN","needle","Kind","noise","Line","raw","addressThisPass","sensitive","kind","sensitivityList","possibleInstructions","assembler","keywordRegexes","tmp","pieces","processed","RegExp","directiveData","undefined","invalidReason","instructionSet","match","slice","minimum","fill","zeroDelimitedString","elements","generalCharacters","characters","found","character","Assembler","escapedCharacters","isInstruction","lines","address","candidates","testingInstructions","possibleInstruction","template","j","limited","store","process","errorMessage","context","startBit","endBit","smallestPossibleInstruction","filter","pi","stored","assembleText","assembleData","lineByLabel","linesByLabel","sensor","sensorLength","newAssembly","file","endianness","memoryMap","words","numeric","radixList","escapable","escapedCharacterList","instructionLength","registerNo","reference","extraction","radixes","interpretable","rangeCheck","pass","errors","assemblerModeText","initialProcess","asm","list","keyword","Object","keys","'","CoreFactory","ISAs","architecture","virtualOS","generator","Core","insts","decoded","arguments","fetched","bitRanges","limit","pc","disassemble","factory","PanelSettings","handleFileName","project_settings","handleMemorySize","test","handleSubmit","submitChanges","isas","OakJS","getCoreList","onSubmit","PanelConversion","calculateOutput","in_type","out_type","onChangeInput","input_type","output_type","out","has_value","onChangeInputType","onChangeOutputType","PanelRegisters","getChangedRegisterClass","registers","physicalFile","register_changed","register_names","cellSpacing","cellPadding","register_dpy","data-info","PanelMachineCode","machinecode","machine_code","RISCVRegisterFile","modifiedRegisters","registerNumber","modReg","getRegisterCount","RISCVCore","virtualOSArgumentVectorEnd","Array","reset","catBytes","parameterized","rType","iType","ilSubtype","isSubtype","sType","uType","sbType","ujType","allConstSubtype","ecall","mvPseudo","liPseudo","jrPseudo","MIPSRegisterFile","MIPSCore","rjSubtype","rsSubtype","rcSubtype","ibSubtype","iluiSubtype","ilsSubtype","writeAddress","jType","decode_error_msg","MessageType","App","handleKeyPress","console_input","cursor","cursor_pos","continueAfterConsole","which","keyCode","l","keycode","isNum","addConsoleMessage","msg_type","virtual_os","checkUpdatedTabs","mod_reg","getModifiedRegisters","addTabFull","code","mem_size","get_example_code","getCore","new_tab","from","getDefaultISA","addTabDefault","addTabDefaultRISCV","addTabDefaultMIPS","handleUpload","files","component_input","is_upload_bin","blob","size","fr","FileReader","me","Uint8Array","readAsArrayBuffer","res","readAsText","click","el","createElement","Blob","blobLink","URL","createObjectURL","setAttribute","body","appendChild","removeChild","byteArray","finalFile","padStart","resetUI","uiSimulate","uiAssemble","fetch","decode","execute","uiStepByStep","arrayFromFile","passZero","passCounter","reduce","concat","handleSettingsChange","isa_type","diff_isa","diff_mem","new_isa_found","handleStartDragX","handleDragX","handleStopDragX","handleX","x","pageX","w","innerWidth","documentElement","clientWidth","panel_x","handleY","y","pageY","h","innerHeight","clientHeight","panel_y","handleStartDragY","handleDragY","handleStopDragY","alert","initialize","languages","renderToStaticMarkup","addTranslationForLanguage","enTranslations","has_tabs","Fragment","gridTemplateColumns","gridTemplateRows","tabReducer","action","t","assign","selectedTabReducer","globalSettingsReducer","projectSettingsReducer","combineReducers","global_settings","localize","localizeReducer","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"8kLAAaA,G,YACG,cADHA,EAEA,UAFAA,EAGG,aAHHA,EAIG,aAJHA,EAKgB,0BALhBA,EAMS,mBANTA,EAOU,oBAPVA,EAQa,uBAGbC,EAAqB,SAACC,GAAD,MAAY,CAC1CC,KAAMH,EACNE,UAGSE,EAAiB,SAACF,GAAD,MAAY,CACtCC,KAAMH,EACNE,UAGSG,EAAkB,SAACH,GAAD,MAAY,CACvCC,KAAMH,EACNE,UAGSI,EAAY,SAAAC,GAAE,MAAK,CAC5BJ,KAAMH,EACNO,OAQSC,EAAY,SAACC,EAAOC,GAAR,MAAiB,CACtCP,KAAMH,EACNS,QACAC,QAQSC,EAAqB,SAACC,EAAGC,EAAGC,GAAP,MAAc,CAC5CX,KAAMH,EACNe,QAAS,CACLC,UAAWJ,EACXK,YAAaJ,EACbK,IAAKJ,K,OC3CPK,E,4MACLC,OAAS,WACR,EAAKC,MAAMD,U,EAGZE,gBAAkB,SAACf,GAClB,EAAKc,MAAMf,UAAUC,GACrB,IAAIG,EAAM,EAAKW,MAAME,KAAKhB,GAEtBG,GACH,EAAKW,MAAMV,mBAAmBD,EAAIc,KAAMd,EAAIe,KAAKC,WAAYhB,EAAIiB,kB,EAInEC,eAAiB,SAACC,EAAOtB,GACxBsB,EAAMC,kBAEN,IAAIC,EAAW,EAAKV,MAAMW,YACtBD,GAAYxB,IACfwB,GAAY,GAEbA,EAAWE,KAAKC,IAAID,KAAKE,IAAIJ,EAAU,GAAI,EAAKV,MAAME,KAAKa,OAAS,GAEpE,EAAKf,MAAMf,UAAUyB,GAErB,IAAIrB,EAAM,EAAKW,MAAME,KAAKQ,GAEtBrB,GACH,EAAKW,MAAMV,mBAAmBD,EAAIc,KAAMd,EAAIe,KAAKC,WAAYhB,EAAIiB,iBAGlE,EAAKN,MAAMgB,UAAU9B,I,EAGtB+B,eAAiB,SAACC,GACjB,IAAIC,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAC1B9B,EAAI+B,QAAUF,EACd,EAAKlB,MAAMb,UAAUgC,EAAa9B,I,uDAGzB,IAAD,OACJa,EAAOmB,KAAKrB,MAAME,KAEtB,OACC,0BAAMhB,GAAG,cAAcoC,UAAU,eAChC,wBAAIA,UAAU,aACZpB,EAAKqB,KAAI,SAAClC,EAAKH,GACf,OACA,wBAAIsC,QAAS,kBAAM,EAAKvB,gBAAgBf,IAAKuC,IAAKvC,EAAIoC,UAAY,EAAKtB,MAAMW,cAAgBzB,EAAM,WAAa,IAC/G,8BAAOG,EAAIc,MACX,yBAAKqB,QAAS,SAAChB,GAAD,OAAW,EAAKD,eAAeC,EAAOtB,UAGtD,wBAAIoC,UAAU,UAAUE,QAASH,KAAKtB,UAEtC,kBAAC,IAAD,CACA2B,KAAK,OACLC,MAAM,SACNC,SAAUP,KAAKJ,eACfY,MAAM,OACNC,OAAO,GACP3B,KAAK,cACLmB,UAAU,cACVS,MAAO7B,EAAKmB,KAAKrB,MAAMW,aAAaS,QACpCY,SAAUX,KAAKrB,MAAMiC,YACrBC,YAAa,CAACC,gBAAiBC,Y,GAlEXC,aAuFVC,eAdM,SAAAzD,GACpB,MAAO,CACNqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,gBAIG,SAAC4B,EAAUC,GAAX,MAAyB,CAChDvD,UAAW,SAACC,GAAD,OAAQqD,EAAStD,EAAUC,KACtCC,UAAW,SAACC,EAAOC,GAAR,OAAgBkD,EAASpD,EAAUC,EAAOC,KACrD2B,UAAW,SAAC9B,GAAD,OAAQqD,EDlDK,SAAArD,GAAE,MAAK,CAC5BJ,KAAMH,EACNO,MCgDyB8B,CAAU9B,KACtCI,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAa8C,EAASjD,EAAmBC,EAAGC,EAAGC,QAGrD6C,CAGZxC,G,OC9FG2C,EACI,EAOJC,E,uKAEJ,IAAIC,EAAe,GACbtD,EAAOgC,KAAKrB,MAAME,KAAKmB,KAAKrB,MAAMW,aAYxC,OAVItB,IACCA,EAAIuD,gBAAkBH,IACzBE,EAAe,mBATS,IAYrBtD,EAAIwD,qBACPF,GAAgB,4BAKjB,yBAAKzD,GAAG,aAAaoC,UAAU,cAC9B,4BACC,wBAAIA,UAAU,YACb,wBAAIA,UAAU,aACb,wBAAIE,QAASH,KAAKrB,MAAM8C,mBAAmB,kBAAC,IAAD,CAAW5D,GAAG,yBACzD,wBAAIsC,QAASH,KAAKrB,MAAM+C,kBAAkB,kBAAC,IAAD,CAAW7D,GAAG,wBACxD,wBAAIsC,QAASH,KAAKrB,MAAMgD,eAAe,kBAAC,IAAD,CAAW9D,GAAG,yBACrD,wBAAIsC,QAASH,KAAKrB,MAAMiD,eAAe,kBAAC,IAAD,CAAW/D,GAAG,uBACrD,wBAAIsC,QAASH,KAAKrB,MAAMkD,mBAAmB,kBAAC,IAAD,CAAWhE,GAAG,6BACzD,wBAAIsC,QAASH,KAAKrB,MAAMmD,aAAa,kBAAC,IAAD,CAAWjE,GAAG,2BACnD,wBAAIsC,QAASH,KAAKrB,MAAMoD,cAAc,kBAAC,IAAD,CAAWlE,GAAG,6BACpD,wBAAIsC,QAASH,KAAKrB,MAAMqD,aAAa,kBAAC,IAAD,CAAWnE,GAAG,6BAGrD,wBAAIsC,QAASH,KAAKrB,MAAMsD,cAAc,kBAAC,IAAD,CAAWpE,GAAG,oBACpD,wBAAIsC,QAASH,KAAKrB,MAAMuD,UAAU,kBAAC,IAAD,CAAWrE,GAAG,gBAChD,wBAAIsC,QAASH,KAAKrB,MAAMwD,WAAW,kBAAC,IAAD,CAAWtE,GAAG,kBAGlD,yBAAKoC,UAAU,iBACd,4BAAQA,UAAS,WAAcE,QAASH,KAAKrB,MAAMyD,WACnD,4BAAQnC,UAAS,kBAAaqB,GAAgBnB,QAASH,KAAKrB,MAAM0D,WAClE,4BAAQpC,UAAS,uBAAkBqB,GAAgBnB,QAASH,KAAKrB,MAAM2D,mB,GAtCnDtB,aA0DVuB,cACdtB,aAdoB,SAAAzD,GACpB,MAAO,CACNqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,gBAIM,SAAC4B,EAAUC,GAAX,MAAyB,CACnDe,SAAU,SAACM,GAAD,OAAatB,EAASxD,EAAe8E,KAC/CL,UAAW,SAACK,GAAD,OAAatB,EAASvD,EAAgB6E,KACjDP,aAAc,SAACO,GAAD,OAAatB,EAAS3D,EAAmBiF,QAIvDvB,CAICI,IC1EmBoB,E,kDACjB,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IAYV+D,WAAa,WACT,OACI,wBAAIzC,UAAU,cACT0C,IAAMC,SAAS1C,IAAI,EAAKvB,MAAMkE,UAAU,SAACC,EAAO1E,GAAR,OACrC,wBAAI6B,UAAY,EAAKzC,MAAM6B,WAAajB,EAAK,WAAY,GAAIgC,IAAK0C,EAAMrF,KAAKsF,aAAc5C,QAAS,SAAC6C,GAAD,OAAO,EAAKC,eAAeD,EAAG5E,KAC7H0E,EAAMrF,KAAKsF,mBAf5B,EAAKvF,MAAQ,CACT6B,SAAU,GAJC,E,2DAQJ2D,EAAG5C,GACd4C,EAAEE,iBACFlD,KAAKmD,SAAS,CAAC9D,SAAUe,M,+BAenB,IAAD,OACGyC,EAAa7C,KAAKrB,MAAlBkE,SACFO,EAAgBT,IAAMC,SAAS1C,IAAI2C,GAAU,SAACC,EAAOjF,GACvD,OAAQ,EAAKL,MAAM6B,WAAaxB,GAAO8E,IAAMU,aAAaP,MAE9D,OACI,yBAAKjF,GAAG,kBAAkBoC,UAAS,0BAAqBD,KAAKrB,MAAMsB,YAC/D,yBAAKqD,YAAatD,KAAKrB,MAAM4E,gBAAiBtD,UAAU,eACvDD,KAAK0C,aACLU,O,GAnC2BpC,aCAvBwC,E,uKAEb,OACI,yBAAKvD,UAAU,gBACX,4BAAQM,SAAUP,KAAKrB,MAAM4B,SAAUG,MAAOV,KAAKrB,MAAM+B,MAAO+C,MAAO,CAACC,gBAAgB,iDAAD,OAAmD1D,KAAKrB,MAAMgF,KAA9D,OAClF3D,KAAKrB,MAAMkE,UAEhB,2BAAO5C,UAAU,eAAeD,KAAKrB,MAAMiF,kB,GAPvB5C,aCF7B,SAAS6C,EAAUC,EAAKpE,GAE3B,IADA,IAAIqE,EAASD,EACJ1F,EAAI,EAAGA,EAAIsB,EAASoE,EAAIpE,OAAQtB,IAErC2F,EAAS,IAAMA,EAEnB,OAAOA,E,ICDLC,E,kDAGF,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAMVsF,WAAa,SAAC9E,GACV,EAAKgE,SAAS,CAACe,cAAeC,SAAShF,EAAMiF,OAAO1D,MAAO,OAR5C,EAWnB2D,kBAAoB,SAACC,GACjB,OAAO,EAAK9G,MAAM0G,eACd,QACA,KAAK,EACD,OAAOL,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,GAAI,GAChD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,GAAI,KAnBpD,EAAK/G,MAAQ,CACT0G,cAAe,GAHJ,E,qDAyBT,IAAD,OACDrF,EAAOmB,KAAKrB,MAAME,KACtB,GAAoB,IAAhBA,EAAKa,OACL,OAAO,8BAEX,IAAI8E,EAAS3F,EAAKmB,KAAKrB,MAAMW,aAAaP,KAAKyF,OAC3CC,EAA0B,IAAlBD,EAAO9E,OACnB,OACI,yBAAK7B,GAAG,eAAeoC,UAAU,sBAC5BwE,GAAS,0BAAMxE,UAAU,eAAhB,iBACRwE,GAAS,kBAAC,EAAD,CAAQlE,SAAUP,KAAKiE,WAAYN,KAAK,8BAA8BC,YAAY,eAAec,aAAa,KACrH,4BAAQhE,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,YAGF+D,GAASD,EAAOtE,KAAI,SAACyE,EAAMvG,GACzB,IAAIyB,EAAM,EAAKwE,kBAAkBM,GACjC,OAAQ,0BAAMvE,IAAKhC,GAAIyB,EAAf,a,GA/CFmB,aAApBgD,EACKjB,aAAe,SAqD1B,IAOe9B,eAPM,SAAAzD,GACpB,MAAO,CACAqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,eAIZ2B,CAAsB+C,GC/D/B5C,EACI,EAKJwD,E,uKAIE,IAAI5G,EAAMgC,KAAKrB,MAAME,KAAKmB,KAAKrB,MAAMW,aACrC,IAAKtB,EACD,OAAO,8BAEX,IAAI6G,EAAM7G,EAAI8G,QACVL,EAAuB,IAAfI,EAAInF,OAEVqF,EAAU/G,EAAIuD,gBAAkBH,EAEtC,OAAQ,yBAAKvD,GAAG,gBAAgBoC,UAAU,uBACrCwE,GAAS,0BAAMxE,UAAU,eAAhB,kBACRwE,GAASI,EAAI3E,KAAI,SAAC8E,EAAM5G,GACtB,OAAQ,yBAAKgC,IAAKhC,GAAI4G,MAEzBhF,KAAKrB,MAAMsG,YAAc,8BAAM,0BAAMhF,UAAU,WAAW,MAAjC,IAA+CD,KAAKrB,MAAM2F,OACnFS,GAAW,yBAAK9E,UAAU,mBAAf,0C,GAnBGe,aAArB4D,EACK7B,aAAe,UAuB1B,IAOe9B,eAPM,SAAAzD,GACpB,MAAO,CACAqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,eAIZ2B,CAAsB2D,GCrC/BM,E,uKAIE,IAAIT,EAAuC,IAA/BzE,KAAKrB,MAAMI,KAAK8F,IAAInF,OAChC,OAAQ,yBAAK7B,GAAG,YAAYoC,UAAU,mBACjCwE,GAAS,0BAAMxE,UAAU,eAAhB,0BACRwE,GAASzE,KAAKrB,MAAMI,KAAK8F,IAAI3E,KAAI,SAACiF,EAAa/G,GAC7C,OAAQ,yBAAKgC,IAAKhC,GAAI+G,W,GARfnE,aAAjBkE,EACKnC,aAAe,MAa1B,IAMe9B,eANM,SAAAzD,GACpB,MAAO,CACNuB,KAAMvB,EAAMqB,KAAKrB,EAAM8B,gBAIV2B,CAAsBiE,GCjB/BE,E,4MACFC,YAAc,SAACrC,GACXA,EAAEE,iBACF,EAAKvE,MAAMjB,gBAAe,I,EAG9B4H,gBAAkB,SAACnG,GACfA,EAAMC,mB,uDAIN,OACI,yBAAKvB,GAAG,OAAOsC,QAASH,KAAKqF,YAAapF,UAAS,wCAAmCD,KAAKrB,MAAM6D,QAAU,eAAiB,KACxH,yBAAKvC,UAAU,qBAAqBE,QAASH,KAAKsF,iBAC9C,4BAAQrF,UAAU,iBAAiBE,QAASH,KAAKqF,cACjD,4BAAI,kBAAC,IAAD,CAAWxH,GAAG,gBAClB,yBAAKoC,UAAU,oBACX,kBAAC,IAAD,CAAWpC,GAAG,YAAY0H,QAAS,CAAEC,iBAAiB,KACtD,4BAAQvF,UAAU,SAASE,QAASH,KAAKqF,aAAzC,gB,GAlBLrE,aAoCJuB,cACXtB,aAXiB,SAAAzD,GACjB,MAAO,CACHgF,QAAShF,EAAMiI,iBAAiBC,SAIhB,SAACxE,EAAUC,GAAX,MAAyB,CAC7CzD,eAAgB,SAAC8E,GAAD,OAAatB,EAASxD,EAAe8E,QAIrDvB,CAEEmE,IC7CS,GACXrG,KAAM,CACF,CACI,YAAe,mDACf,IAAO,WACP,KAAQ,uBACR,IAAO,kCACP,KAAQ,wBACR,KAAQ,yJAEZ,CACI,YAAe,mDACf,IAAO,cACP,KAAQ,oBACR,IAAO,kCACP,KAAQ,6BACR,KAAQ,+EAGhB4G,WAAY,CACR,CACI,YAAe,mDACf,IAAO,iBACP,KAAQ,aACR,IAAO,kBACP,KAAQ,4BACR,KAAQ,kFAEZ,CACI,YAAe,0CACf,IAAO,aACP,KAAQ,qBACR,IAAO,UACP,KAAQ,4BACR,KAAQ,8DAGhBC,YAAa,IC9BXC,E,4MACFR,YAAc,SAACrC,GACXA,EAAEE,iBACF,EAAKvE,MAAMhB,iBAAgB,I,EAG/B2H,gBAAkB,SAACnG,GACfA,EAAMC,mB,EAGV0G,SAAW,SAACC,GACR,OAAOA,EAAI7F,KAAI,SAAC8F,EAAS5H,GACrB,OAAO,uBAAGgC,IAAKhC,EAAG6H,KAAMD,EAAQE,MAC5B,yBAAKC,IAAG,uBAAkBH,EAAQI,OAClC,4BAAKJ,EAAQlH,MACb,8BAAOkH,EAAQK,KACf,8BAAOL,EAAQM,aACf,2BAAIN,EAAQO,W,uDAMpB,OACI,yBAAK1I,GAAG,QAAQsC,QAASH,KAAKqF,YAAapF,UAAS,wCAAmCD,KAAKrB,MAAM6D,QAAU,eAAiB,KACzH,yBAAKvC,UAAU,qBAAqBE,QAASH,KAAKsF,iBAC9C,4BAAQrF,UAAU,iBAAiBE,QAASH,KAAKqF,cACjD,4BAAI,kBAAC,IAAD,CAAWxH,GAAG,iBAClB,yBAAKoC,UAAU,oBACX,yBAAKA,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAWpC,GAAG,qBAEdmC,KAAK8F,SAASU,EAAKzH,OAG3B,yBAAKkB,UAAU,WACX,4BAAI,kBAAC,IAAD,CAAWpC,GAAG,2BAEdmC,KAAK8F,SAASU,EAAKb,aAG1Ba,EAAKZ,YAAYlG,OAAS,GAAM,yBAAKO,UAAU,kBAC5C,4BAAI,kBAAC,IAAD,CAAWpC,GAAG,uBAEd2I,EAAKZ,YAAY1F,KAAI,SAAC8F,EAAS5H,GAC3B,OAAO,uBAAGgC,IAAKhC,EAAG6H,KAAMD,EAAQE,MAC5B,4BAAKF,EAAQlH,MACb,8BAAOkH,EAAQS,YAMnC,4BAAQxG,UAAU,SAASE,QAASH,KAAKqF,aAAzC,e,GArDArE,aAsELuB,cACXtB,aAXiB,SAAAzD,GACjB,MAAO,CACHgF,QAAShF,EAAMiI,iBAAiBiB,UAIhB,SAACxF,EAAUC,GAAX,MAAyB,CAC7CxD,gBAAiB,SAAC6E,GAAD,OAAatB,EAASvD,EAAgB6E,QAIvDvB,CAEE4E,IC9Eec,E,kDACjB,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAYViI,YAAc,SAACzH,GACX,EAAKgE,SAAS,CAAC0D,WAAW,IAChCC,OAAOC,iBAAiB,UAAW,EAAKC,YAfnB,EAkBnBA,UAAY,SAAC7H,GACT,GAAI,EAAK3B,MAAMqJ,UAAW,CACtB1H,EAAMC,kBACND,EAAM+D,iBAEN,IAAI9C,EAAMjB,EAAMiB,IAAI6G,cACpB,GAAY,YAAR7G,GAA6B,UAARA,GAA2B,QAARA,EACxC,OAAO,EAEX,EAAK+C,SAAS,CACV+D,MAAO/H,EAAMgI,SACbC,KAAMjI,EAAMkI,QACZC,IAAKnI,EAAMoI,OACXC,SAAUpH,EACVyG,WAAW,IAGfC,OAAOW,oBAAoB,UAAW,EAAKT,WAC3C,EAAKrI,MAAM+I,SApCA,EAwCnBC,QAAU,SAACC,EAAUC,EAASC,EAAWN,GACrC,OAAQM,IAAc,EAAKtK,MAAM0J,OAC7BW,IAAW,EAAKrK,MAAM8J,KACtBM,IAAa,EAAKpK,MAAM4J,MACxBI,IAAa,EAAKhK,MAAMgK,UA5Cb,EA+CnBO,OAAS,SAACH,EAAUC,EAASC,EAAWN,GAA+B,IAArBQ,EAAoB,uDAAb,aACrD,EAAK7E,SAAS,CACViE,KAAMQ,EACNN,IAAKO,EACLX,MAAOY,EACPN,SAAUA,GACXQ,IArDY,EAwDnBC,OAAS,WACL,IAAI7H,EAAM,IAAM,EAAK5C,MAAMgK,SAU3B,OATI,EAAKhK,MAAM0J,QACX9G,EAAM,IAAMA,GAEZ,EAAK5C,MAAM8J,MACXlH,EAAM,IAAMA,GAEZ,EAAK5C,MAAM4J,OACXhH,EAAM,IAAMA,GAETA,GAnEQ,EAsEnB8H,UAAY,SAACpE,GACT,IAAIqE,EAAOrE,EAAIsE,QAAQ,KACnBC,EAAOvE,EAAIwE,OAAO,EAAGH,GAE3BjB,GAA8B,IAArBmB,EAAKD,QAAQ,KACtBd,GAA4B,IAArBe,EAAKD,QAAQ,KACpBhB,GAA6B,IAArBiB,EAAKD,QAAQ,KACfhI,EAAM0D,EAAIwE,OAAOH,EAAO,GAE5B,EAAKJ,OAAOX,EAAME,EAAKJ,EAAO9G,IA5E9B,EAAK5C,MAAQ,CACTqJ,WAAW,EACX0B,MAAO,QACPrB,OAAO,EACPI,KAAK,EACLF,MAAM,EACNI,SAAU,KATC,E,qDAmFf,IAAIgB,GAAKxI,KAAKxC,MAAMqJ,UACpB,OAAQ,yBAAK5G,UAAS,iBAAYD,KAAKxC,MAAMqJ,UAAY,aAAe,IAAM1G,QAASH,KAAK4G,YAAa6B,SAAU,IACrGD,GAAK,2CACNA,GAAKxI,KAAKxC,MAAM4J,MAAQ,sCACxBoB,GAAKxI,KAAKxC,MAAM8J,KAAO,qCACvBkB,GAAKxI,KAAKxC,MAAM0J,OAAS,uCACzBsB,GAAK,8BAAOxI,KAAKxC,MAAMgK,e,GA1FHxG,aCMnC0H,EAAS,CACX,cACA,aACA,YACA,gBAGEC,E,kDACF,WAAYhK,GAAQ,IAAD,uBACf,cAAMA,IAoBV0G,YAAc,SAACrC,GACXA,EAAEE,iBACF,EAAKvE,MAAMpB,oBAAmB,IAvBf,EA0BnB+H,gBAAkB,SAACnG,GACfA,EAAMC,mBA3BS,EA8BnB4H,UAAY,SAAC7H,GACT,GAAI,EAAKR,MAAMiK,eAAgB,CAC3B,IAAIpB,EAAWrI,EAAMiB,IAAI6G,cACzB,GAAiB,YAAbO,GAAuC,UAAbA,GAAqC,QAAbA,EAClD,OAAO,EAyBX,IAvBA,IAAII,EAAWzI,EAAMkI,QACjBQ,EAAU1I,EAAMoI,OAChBO,EAAY3I,EAAMgI,SAClB0B,GAAS,EAETC,EAAS,CACT,EAAKC,SAASC,QACd,EAAKC,UAAUD,QACf,EAAKE,UAAUF,QACf,EAAKG,cAAcH,QACnB,EAAKI,UAAUJ,QACf,EAAKK,SAASL,SAGdM,EAAY,CACZ,EAAK3K,MAAM4K,OACX,EAAK5K,MAAM6K,QACX,EAAK7K,MAAM8K,QACX,EAAK9K,MAAM+K,OACX,EAAK/K,MAAMgL,QACX,EAAKhL,MAAMiL,QAGNxL,EAAI,EAAGA,EAAI0K,EAAOpJ,SAAUtB,EAC7B0K,EAAO1K,GAAGuJ,QAAQC,EAAUC,EAASC,EAAWN,KAChD8B,EAAUlL,KACVyK,GAAS,GAIbA,IACA1J,EAAM+D,iBACN/D,EAAMC,qBApEC,EAyEnByK,YAAc,WAAsB,IAArB7B,EAAoB,uDAAb,aAClB,EAAKe,SAASC,QAAQjB,QAAO,GAAO,GAAM,EAAO,KAAK,WAClD,EAAKkB,UAAUD,QAAQjB,QAAO,GAAM,GAAO,EAAO,KAAK,WACnD,EAAKmB,UAAUF,QAAQjB,QAAO,GAAM,GAAO,EAAO,KAAK,WACnD,EAAKoB,cAAcH,QAAQjB,QAAO,GAAO,GAAM,EAAO,MAAM,WACxD,EAAKsB,SAASL,QAAQjB,QAAO,GAAO,GAAM,EAAO,MAAM,WACnD,EAAKqB,UAAUJ,QAAQjB,QAAO,GAAO,GAAM,EAAO,MAAM,WACpD,EAAK+B,SAAS,cAAe9B,sBAhFtC,EAyFnB+B,gBAAkB,WACd,EAAKF,YAAY,EAAKG,eA1FP,EA4GnBA,aAAe,WACX,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAa,QACzB,IACIC,EAAM,aADIJ,EAAEK,cACmB,WAEnCC,SAASC,OAAS,kBAAoB,EAAKzB,SAASC,QAAQf,SAAWoC,EACvEE,SAASC,OAAS,mBAAqB,EAAKvB,UAAUD,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,mBAAqB,EAAKtB,UAAUF,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,kBAAoB,EAAKrB,cAAcH,QAAQf,SAAWoC,EAC5EE,SAASC,OAAS,kBAAoB,EAAKnB,SAASL,QAAQf,SAAWoC,EACvEE,SAASC,OAAS,mBAAqB,EAAKpB,UAAUJ,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,aAAe,EAAKhN,MAAM8C,MAAQ+J,GAxHrC,EA2HnBP,SAAW,SAACjK,GAAgC,IAA3B4K,EAA0B,uDAAb,aACrB/B,EAAOgC,SAAS7K,KACjBA,EAAM6I,EAAO,IAGjBA,EAAOiC,SAAQ,SAAS3E,GACpBuE,SAASK,eAAe5E,GAAS6E,SAAY7E,IAAYnG,KAG7D,EAAKsD,SAAS,CAAC7C,MAAOT,GAAM4K,IApIb,EA0LnBK,UAAY,SAAC3L,GACT,EAAKgE,SAAS,CAAC4H,YAAa5L,EAAMiF,OAAO1D,SA3L1B,EA8LnBsK,YAAc,SAAC7L,GACX,EAAK2K,SAAS3K,EAAMiF,OAAO1D,MAAO,EAAKsJ,eA/LxB,EAkMnBiB,cAAgB,SAACjI,GACbA,EAAEE,iBAEF,EAAKC,SAAS,CAAC+H,aAAa,IAC5B,EAAKnB,mBAtMU,EAyMnBoB,iBAAmB,WAGf,IAFA,IAAIC,EAAUb,SAASC,OAAOa,MAAM,MAE3BjN,EAAI,EAAGA,EAAIgN,EAAQ1L,OAAQtB,IAAK,CACrC,IAAIoM,EAASY,EAAQhN,GACjBkN,EAAQd,EAAOpC,QAAQ,KACvBtJ,EAAOwM,GAAS,EAAId,EAAOlC,OAAO,EAAGgD,GAASd,EAEjC,QADF1L,EAAKwJ,OAAO,EAAG,KAE1BiC,SAASC,OAAS1L,EAAO,2CAIjC,EAAKqE,SAAS,CAAC+H,aAAa,IAC5B,EAAKrB,eArNL,EAAKrM,MAAQ,CACTuN,YAAa,SACbzK,MAAO,cACP4K,aAAa,GAGvBpE,OAAOC,iBAAiB,UAAW,EAAKC,WAElC,IAAK,IAAI5I,EAAI,EAAGA,EAAIsK,EAAOhJ,SAAUtB,EACjCmM,SAASK,eAAelC,EAAOtK,IAAIyM,UAAW,EAXnC,OAarB,EAAK9B,SAAWpG,IAAM4I,YACtB,EAAKtC,UAAYtG,IAAM4I,YACvB,EAAKrC,UAAYvG,IAAM4I,YACvB,EAAKpC,cAAgBxG,IAAM4I,YAC3B,EAAKlC,SAAW1G,IAAM4I,YAChB,EAAKnC,UAAYzG,IAAM4I,YAlBR,E,gEA6If,IALA,IAAIC,GAAc,EAEdC,EAAKlB,SAASC,OAAOa,MAAM,MAE3BjN,EAAI,EACDA,EAAIqN,EAAG/L,OAAQtB,IAAK,CAGvB,IAFA,IAAIoK,EAAIiD,EAAGrN,GAEY,MAAhBoK,EAAEkD,OAAO,IACZlD,EAAIA,EAAEmD,UAAU,GAGpB,IAAIC,EAAKpD,EAAEJ,QAAQ,KACftE,EAAM0E,EAAEF,OAAO,EAAGsD,GAClB/L,EAAM2I,EAAEF,OAAOsD,EAAG,GACV,mBAAR9H,GACA9D,KAAK+I,SAASC,QAAQd,UAAUrI,GAChC2L,GAAc,GAED,oBAAR1H,GACL9D,KAAKiJ,UAAUD,QAAQd,UAAUrI,GACjC2L,GAAc,GAED,oBAAR1H,GACL9D,KAAKkJ,UAAUF,QAAQd,UAAUrI,GACjC2L,GAAc,GAED,mBAAR1H,GACL9D,KAAKmJ,cAAcH,QAAQd,UAAUrI,GACrC2L,GAAc,GAED,mBAAR1H,GACL9D,KAAKqJ,SAASL,QAAQd,UAAUrI,GAChC2L,GAAc,GAED,oBAAR1H,GACL9D,KAAKoJ,UAAUJ,QAAQd,UAAUrI,GACjC2L,GAAc,GAED,cAAR1H,IACL9D,KAAK8J,SAASjK,GACd2L,GAAc,GAIlBA,GACAxL,KAAKmD,SAAS,CAAC+H,aAAa,M,+BAqChC,OACI,yBAAKrN,GAAG,WAAWsC,QAASH,KAAKqF,YAAapF,UAAS,wCAAmCD,KAAKrB,MAAM6D,QAAU,eAAiB,KAC5H,yBAAKvC,UAAU,qBAAqBE,QAASH,KAAKsF,iBAC9C,4BAAQrF,UAAU,iBAAiBE,QAASH,KAAKqF,cACjD,yCACErF,KAAKxC,MAAM0N,aACT,yBAAKjL,UAAU,iBACX,uCACA,kPACA,4BAAQE,QAASH,KAAKiL,cAAehL,UAAU,UAA/C,iCACA,4BAAQE,QAASH,KAAKqF,YAAapF,UAAU,oBAA7C,iBAGR,yBAAKwD,MAAO,CAACoI,QAAU7L,KAAKxC,MAAM0N,YAAc,QAAU,OAASY,SAAU,aACzE,+BACI,+BACI,4BACI,wBAAIC,QAAS,GAAb,sBAGR,+BASI,4BACI,wBAAIA,QAAS,GACT,kBAAC,EAAD,CAAQxL,SAAUP,KAAKgL,YAAarH,KAAK,8BAA8BC,YAAY,QAAQlD,MAAOV,KAAKxC,MAAM8C,OACzG,4BAAQI,MAAM,eAAd,SACA,4BAAQA,MAAM,cAAd,QACA,4BAAQA,MAAM,aAAd,OACA,4BAAQA,MAAM,gBAAd,gBAKhB,+BACI,4BACI,wBAAIqL,QAAS,GAAb,aAGR,+BACI,4BACI,uCACA,4BACI,kBAAC,EAAD,CAAaC,IAAKhM,KAAK+I,SAAUrB,KAAM1H,KAAKgK,iBAGpD,4BACI,wCACA,4BACI,kBAAC,EAAD,CAAagC,IAAKhM,KAAKkJ,UAAWxB,KAAM1H,KAAKgK,iBAGrD,4BACI,oCACA,4BACI,kBAAC,EAAD,CAAagC,IAAKhM,KAAKiJ,UAAWvB,KAAM1H,KAAKgK,iBAGrD,4BACI,wCACA,4BACI,kBAAC,EAAD,CAAagC,IAAKhM,KAAKmJ,cAAezB,KAAM1H,KAAKgK,iBAGzD,4BACI,4CACA,4BACI,kBAAC,EAAD,CAAagC,IAAKhM,KAAKoJ,UAAW1B,KAAM1H,KAAKgK,iBAGrD,4BACI,wCACA,4BACI,kBAAC,EAAD,CAAagC,IAAKhM,KAAKqJ,SAAU3B,KAAM1H,KAAKgK,mBAK5D,4BAAQ/J,UAAU,SAASE,QAASH,KAAKqF,aAAzC,kBACA,4BAAQpF,UAAU,mBAAmBE,QAASH,KAAK+J,iBAAnD,oBACA,4BAAQ9J,UAAU,mBAAmBE,QAASH,KAAKmL,kBAAnD,yB,GAlTDnK,aAoURuB,cACXtB,aAXiB,SAAAzD,GACjB,MAAO,CACHgF,QAAShF,EAAMiI,iBAAiBwG,aAIhB,SAAC/K,EAAUC,GAAX,MAAyB,CAC7C5D,mBAAoB,SAACiF,GAAD,OAAatB,EAAS3D,EAAmBiF,QAI7DvB,CAEE0H,ICpVeuD,G,uKAEb,OACI,yBAAKjM,UAAU,eACX,2BAAOM,SAAUP,KAAKrB,MAAM4B,SAAUG,MAAOV,KAAKrB,MAAM+B,MAAO+C,MAAO,CAACC,gBAAgB,OAAD,OAAS1D,KAAKrB,MAAMgF,KAApB,MAA8BlG,KAAMuC,KAAKrB,MAAMlB,KAAMmG,YAAa5D,KAAKrB,MAAMiF,cACnK,2BAAO3D,UAAU,eAAeD,KAAKrB,MAAMiF,kB,GALxB5C,aCFtBmL,GAAb,WACI,aAAc,oBACVnM,KAAKoM,oBAAsB,SAACrN,EAAMc,GAI9B,IAHA,IAAIwM,EAAMtN,EAAKuN,6BACXC,EAAMxN,EAAKyN,aAAaC,KAAKJ,GAC7BK,EAAQ,GACHtO,EAAI,EAAGA,EAAIyB,EAAIH,SAAUtB,EAC9BsO,EAAMC,KAAK9M,EAAI+M,WAAWxO,IAE9BW,EAAK8N,OAAON,EAAKG,IAErB1M,KAAK8M,iBAAmB,SAAC/N,EAAMc,GAC3B,IAAIwM,EAAMtN,EAAKuN,6BACfvN,EAAKyN,aAAaO,MAAMV,EAAKxM,IAbzC,kDAgBUd,GACF,IAAIiO,EAAUjO,EAAKyN,aAAaC,KAAK1N,EAAKkO,0BACpCC,EAAQnO,EAAKuN,6BACnB,OAAQU,GACJ,KAAK,EACD,IAAInN,EAAMd,EAAKyN,aAAaC,KAAKS,GACjClN,KAAKmN,UAAUtN,GACf,MAEJ,KAAK,EAID,IAHA,IAAIuN,EAAWrO,EAAKyN,aAAaC,KAAKS,GAClCR,EAAQ,GACRW,EAAO,KACqC,KAAxCA,EAAOtO,EAAKuO,OAAOF,EAAU,GAAG,KACpCV,EAAMC,KAAKU,GACXD,GAAY,EAEhB,IAAIG,EAASb,EAAMxM,KAAI,SAAAsI,GAAC,OAAIgF,OAAOC,aAAajF,MAAIkF,KAAK,IAEzD,OADA1N,KAAK2N,aAAaJ,GACX,KAEX,KAAK,EAED,OADAvN,KAAK4N,WACE,OAEX,KAAK,EAED,OADA5N,KAAK6N,cACE,OAEX,KAAK,GAED,OADA7N,KAAK8N,aACE,OACX,QACI,MAAO,YAEf,OAAO,SAnDf,KCAaC,GACT,WAAYC,GACR,IAAK,IAAI5N,KADO,oBACA4N,EACZhO,KAAKI,GAAO4N,EAAO5N,GACnBJ,KAAKgO,EAAO5N,IAAQA,GCHnB6N,GAAb,qGAMmBvN,EAAOwN,GAClB,IAAIC,EAAezN,EAInB,OAH2C,KAAtCyN,EAAgB,GAAMD,EAAO,KAC9BC,GAAiB,IAASD,GAASA,EAAQxN,GAExCyN,IAXf,iCAmBqBzN,EAAOwN,GACpB,GAAIA,GAAQ,GACR,OAAO,KAEX,IACIzO,GAAO,GAAKyO,EAAO,GAAK,EAE5B,QAHY,GAAKA,EAAO,KAExBxN,EAAQV,KAAKoO,QAAQ1N,EAAOwN,KACN,GAASxN,GAAS,GAAMjB,IA1BtD,+BAqCmB4O,GAA0B,IAAnBC,EAAmB,wDACrC,GAAID,EAAM3O,OAAS,EACf,OAAO,KAEP4O,GACAD,EAAME,UAGV,IADA,IAAIC,EAAU,EACLpQ,EAAI,EAAGA,EAAIiQ,EAAM3O,OAAQtB,IAC9BoQ,GAAqBH,EAAMjQ,IAAO,EAAIA,EAE1C,OAAOoQ,IAhDf,0BAwDeC,EAAQC,EAAQC,GAEvB,IADA,IAAI5K,EAAS0K,EAAOlK,SAASoK,GACtBD,EAAS3K,EAAOrE,QACnBqE,EAAS,IAAMA,EAEnB,OAAOA,IA7Df,0BAgEe2I,GAEP,IADA,IAAIkC,EAAc,GACTxQ,EAAI,EAAGA,EAAIsO,EAAMhN,OAAQtB,IAAK,CACnC,IAAIyQ,EAAoBnC,EAAMtO,GAAGmG,SAAS,IAAIuK,cACb,IAA7BD,EAAkBnP,SAClBmP,EAAoB,IAAMA,GAE9BD,GAAeC,EAAoB,IAEvC,OAAOD,MAzEf,KCEaG,GAAY,IAAIhB,GAAK,CAC9BiB,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,OAAQ,EACRC,QAAS,EACTC,YAAa,IAGJC,GAAa,IAAIvB,GAAK,CAC/BwB,OAAQ,EACRC,IAAK,EACLC,GAAI,IAGKC,GAAU,IAAI3B,GAAK,CAC5B4B,UAAW,EACXC,QAAS,EACTC,MAAO,EACPC,aAAc,EACdC,WAAY,EACZd,SAAU,EAEVe,OAAQ,EACR3C,KAAM,EACN4C,SAAU,IAGDC,GAAY,IAAInC,GAAK,CAC9BoC,KAAM,EACNC,KAAM,EACNJ,OAAQ,EACRK,QAAS,EAETC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EAERC,WAAY,EACZC,cAAe,EAEfC,OAAQ,KAGCC,GAAb,WACI,WAAYC,EAAO5D,EAAOgB,GAAuC,IAAjC6C,EAAiC,uDAAtB,KAAMC,EAAgB,4EAC7DhR,KAAK8Q,MAAQA,EACb9Q,KAAKkN,MAAQA,EACblN,KAAKkO,KAAOA,EACZlO,KAAK+Q,SAAWA,EAChB/Q,KAAKgR,OAASA,EANtB,oDAWYC,GAA+C,IAApCC,EAAoC,uDAAvB,KAAMC,EAAiB,uDAAN,KAI7C,OAHAnR,KAAKiR,UAAYA,EACjBjR,KAAKkR,WAAaA,EAClBlR,KAAKmR,SAAWA,EACTnR,OAff,oCAiBkBoR,EAAWC,GAA6C,IAA9BC,EAA8B,uDAAN,KAI5D,OAHAtR,KAAKoR,UAAYA,EACjBpR,KAAKsR,sBAAwBA,EAC7BtR,KAAKqR,cAAgBA,EACdrR,OArBf,0BASQ,OAAOA,KAAKkN,MAAQlN,KAAKkO,KAAO,MATxC,KAyBaqD,GACT,WAAYC,EAAQC,EAAOC,GAA4E,IAA/DC,EAA+D,uDAArC,KAAMC,EAA+B,uDAAN,KAAM,oBACnG5R,KAAKwR,OAASA,EACdxR,KAAKyR,MAAQA,EACbzR,KAAK0R,YAAcA,EACnB1R,KAAK2R,wBAA0BA,EAC/B3R,KAAK4R,uBAAyBA,GAIzBC,GAAb,WACI,WAAYC,EAAUC,EAAQC,EAAWC,EAAaC,GAA+D,IAArDC,EAAqD,uDAAjC,KAAMC,EAA2B,uDAAJ,GAa7G,IAAK,IAAIhU,KAbwG,oBACjH4B,KAAKqS,aAAe,KAOpBrS,KAAKsS,aAAe,KACpBtS,KAAKuS,iBAAmB,KACxBvS,KAAK8R,SAAWA,EAChB9R,KAAK+R,OAASA,EACd/R,KAAKgS,UAAY,GACHA,EACVhS,KAAKgS,UAAUA,EAAU5T,IAAM6T,EAAY7T,GAE/C4B,KAAKkS,SAAWA,EAChBlS,KAAKmS,kBAAoBA,EACzBnS,KAAKoS,qBAAuBA,EAnBpC,gDAqBQtO,EAAKpE,GAEL,IADA,IAAIqE,EAASD,EACJ1F,EAAI,EAAGA,EAAIsB,EAASoE,EAAIpE,OAAQtB,IACrC2F,EAAS,IAAMA,EAEnB,OAAOA,IA1Bf,4BAmEUyO,GAGF,IAFA,IAAIC,EAAqBD,IAAgB,EACrCE,EAAW1S,KAAK2S,KAAKtH,MAAM,IACtBjN,EAAI4B,KAAKkO,KAAO,EAAG9P,GAAK,EAAGA,IAAK,CACrC,IAAIwU,EAA4B,EAArBH,EAEX,GADAA,IAAuB,EACH,MAAhBC,EAAStU,IAGT+F,SAASuO,EAAStU,GAAI,MAAQwU,EAC9B,OAAO,EAGf,OAAO,IAhFf,2BA6BQ,GAA0B,OAAtB5S,KAAKqS,aACL,OAAOrS,KAAKqS,aAEhB,IAAIQ,EAAQ,EACZ,IAAK,IAAIzU,KAAK4B,KAAK+R,OAAOP,OACtBqB,GAAS7S,KAAK+R,OAAOP,OAAOpT,GAAG8P,KAGnC,OADAlO,KAAKqS,aAAeQ,EACb7S,KAAKqS,eArCpB,4BAwCQ,OAAO9S,KAAKuT,KAAK9S,KAAKkO,KAAO,KAxCrC,2BA2CQ,GAA0B,OAAtBlO,KAAKsS,aACL,OAAOtS,KAAKsS,aAGhB,IADA,IAAItC,EAAS,GACJ5R,EAAI,EAAGA,EAAI4B,KAAKkO,KAAM9P,GAAK,EAChC4R,GAAU,IAEd,IAAK,IAAI5R,KAAK4B,KAAK+R,OAAOP,OAAQ,CAC9B,IAAIuB,EAAQ/S,KAAK+R,OAAOP,OAAOpT,GAC3B2S,EAAW/Q,KAAKgS,UAAUe,EAAMjC,OAIpC,GAHiB,OAAbC,IACAA,EAAWgC,EAAMhC,UAEL,MAAZA,EAAkB,CAClB,IAAIiC,EAAShD,EAAO1H,OAAO,EAAGtI,KAAKkO,KAAO6E,EAAME,IAAM,GAClDC,EAAWjF,GAAMkF,IAAIpC,EAAUgC,EAAM7E,KAAM,GAC3CkF,EAAwB,IAAhBL,EAAM7F,MAAc,GAAK8C,EAAO1H,QAAQyK,EAAM7F,OAC1D8C,EAASgD,EAASE,EAAWE,GAIrC,OADApT,KAAKsS,aAAetC,EACbhQ,KAAKsS,eAhEpB,+BAmFQ,GAA6B,MAAzBtS,KAAKuS,iBACL,OAAOvS,KAAKuS,iBAEhB,IAAIc,EAAO,EACX,IAAK,IAAIjV,KAAK4B,KAAK+R,OAAOP,OAAQ,CAC9B,IAAIuB,EAAQ/S,KAAK+R,OAAOP,OAAOpT,GAC3B2S,EAAW/Q,KAAKgS,UAAUe,EAAMjC,OACnB,OAAbC,IACAA,EAAWgC,EAAMhC,UAEL,MAAZA,IACAsC,GAAStC,GAAYgC,EAAM7F,OAInC,OADAlN,KAAKuS,iBAAmBc,EACjBA,MAlGf,KA0GaC,GAAb,WAII,WAAYpF,EAAMqF,EAASC,EAAcC,EAAoBC,EAAUC,EAAUC,EAAYC,EAAkBC,GAAa,oBACxH9T,KAAKkO,KAAOA,EACZlO,KAAKuT,QAAUA,EACfvT,KAAKwT,aAAeA,EACpBA,EAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3F,MAAQ4F,EAAE5F,SACxCrO,KAAKyT,mBAAqBA,EAC1BzT,KAAK0T,SAAWA,EAChB1T,KAAK2T,SAAWA,EAChB3T,KAAK4T,WAAaA,EAClB5T,KAAK6T,iBAAmBA,EACxB7T,KAAK8T,YAAcA,EAd3B,iEAiByBhC,GACjB,OAAQ,IAlBhB,qCAqBmBA,GACX,IAAK,IAAI1T,EAAI,EAAGA,EAAI4B,KAAKwT,aAAa9T,OAAQtB,IAC1C,GAAI4B,KAAKwT,aAAapV,GAAG0T,WAAaA,EAClC,OAAO1T,EAGf,OAAQ,IA3BhB,4CA6B0B4G,GAClB,IAAIkP,EAAS,GACb,IAAK,IAAI9V,KAAK4B,KAAKwT,aAAc,CAC7B,IAAIrO,EAAcnF,KAAKwT,aAAapV,GACpC,GAAI4G,EAAK8J,cAAcqF,UAAUhP,EAAY2M,UAAW,CACpD,IAAIsC,EAAWjP,EAAY4M,OAAON,MAAM4C,KAAKrP,GACzCoP,GAAYA,EAAS,GAAGtF,gBAAkB3J,EAAY2M,UACtDoC,EAAOvH,KAAKxH,IAIxB,OAAO+O,IAxCf,kCA0CgB/O,EAAamP,GACrB,IAAIC,EAASpP,EAAY4M,OAAOL,YAChC6C,EAASA,EAAOC,QAAQ,QAASrP,EAAY2M,UAC7C,IAAK,IAAI1T,EAAI,EAAGA,EAAI+G,EAAY4M,OAAOP,OAAO9R,OAAQtB,IAAK,CACvD,IAAI2U,EAAQ5N,EAAY4M,OAAOP,OAAOpT,GAClCgT,EAAY2B,EAAM3B,UACL,MAAbA,IACAmD,EAASA,EAAOC,QAAQ,OAASzB,EAAM3B,UAAY2B,EAAM1B,gBAAkBtC,GAAUE,SAAYjP,KAAK0T,SAASY,EAAKlD,IAAckD,EAAKlD,GAAW7M,aAG1J,OAAOgQ,MApDf,KCxLA/G,OAAOiH,UAAUC,iBAAmB,WAGhC,IAFA,IAAIC,EAAQ3U,KAAKqL,MAAM,KACnBgD,EAAQ,GACHjQ,EAAI,EAAGA,EAAIuW,EAAMjV,OAAQtB,IAAK,CACnC,IAAIsC,EAAQyD,SAASwQ,EAAMvW,GAAI,IAC1BwW,MAAMlU,IACP2N,EAAM1B,KAAKjM,GAGnB,OAAO2N,GAIXb,OAAOiH,UAAUN,UAAY,SAAUU,GACnC,OAAO7U,KAAKsI,OAAO,EAAGuM,EAAOnV,UAAYmV,GAGtC,IAAMC,GAAO,IAAI/G,GAAK,CACzB5I,YAAa,EACbiL,KAAM,EACNT,UAAW,EACXoF,MAAO,IAGEC,GAAb,WACI,WAAYC,EAAKxG,GAAQ,oBACrBzO,KAAKkV,gBAAkB,KACvBlV,KAAKmV,WAAY,EACjBnV,KAAKwS,YAAc,GACnBxS,KAAKiV,IAAMA,EACXjV,KAAKyO,OAASA,EACdzO,KAAKoV,KAAON,GAAKC,MACjB/U,KAAKqV,gBAAkB,GACvBrV,KAAKsV,qBAAuB,GATpC,2DAcmBC,GAAwB,WAAbpF,IAAa,yDAC/BP,EAAU2F,EAAUC,eAAe9F,GAAQE,SAC3C6F,EAAM7F,EAAQyE,KAAKrU,KAAKiV,KAAK,GAC7BpF,EAAQ0F,EAAUC,eAAe9F,GAAQG,OACzC6F,EAAS7F,EAAMwE,KAAKoB,GAGxB,GAFAzV,KAAK6P,MAAQ6F,EAAO,GACpB1V,KAAK2V,UAAYD,EAAO,IAAM,GACM,OAAhC,OAAOrB,KAAKrU,KAAK2V,WACjB,OAAOxF,EAEX,GAAmD,MAA/CoF,EAAUC,eAAe9F,GAAQC,WAAoB,CACrD,IAAIyE,EAAWwB,OAAOL,EAAUC,eAAe9F,GAAQC,YAAY0E,KAAKrU,KAAK2V,WAC5D,OAAbvB,IACApU,KAAK2P,UAAY4F,EAAU3B,WAAWQ,EAAS,IAC/CpU,KAAK6V,cAAgBzB,EAAS,IAGtC,GAAIjE,EAAM,CACN,QAAuB2F,IAAnB9V,KAAK2P,UAAyB,CAC9B,OAAQ3P,KAAK2P,WACT,KAAKO,GAAUE,KAEX,OADApQ,KAAKoV,KAAON,GAAKnF,WACV,EACX,KAAKO,GAAUC,KACXnQ,KAAKoV,KAAON,GAAKnF,UACjB,MACJ,QACI3P,KAAK+V,cAAgB,4BAE7B,OAAO,EAUX,GARA/V,KAAKoV,KAAON,GAAK3P,YACjBoQ,EAAUS,eAAexC,aAAa7I,SAAQ,SAAAxF,GAC1C,IAAI8Q,EAAQ9Q,EAAY4M,OAAON,MAAM4C,KAAK,EAAKsB,WAI/C,OAHc,OAAVM,GAAkBA,EAAM,GAAGnH,gBAAkB3J,EAAY2M,UACzD,EAAKwD,qBAAqB3I,KAAK,CAACxH,EAAa8Q,EAAMC,MAAM,GAAI,GAAI,OAEpD,OAAVD,KAE8B,IAArCjW,KAAKsV,qBAAqB5V,OAE1B,OADAM,KAAK+V,cAAgB,+BACd,EAEX,IAAII,EAAUnW,KAAKsV,qBAAqB,GAAG,GAAGjH,MAG9C,OAFCrO,KAAKwS,YAAc,IAAI9S,OAASyW,EACjCnW,KAAKwS,YAAY4D,KAAK,IACf,EAGP,IAAIvD,EAAQ,KACRwD,EAAsB,EAC1B,QAAuBP,IAAnB9V,KAAK2P,UAEL,OADA3P,KAAKoV,KAAON,GAAK1E,KACTpQ,KAAK2P,WACT,KAAKO,GAAUE,KACXpQ,KAAKoV,KAAON,GAAKnF,UACjB,MACJ,KAAKO,GAAUC,KAEX,OADAnQ,KAAKoV,KAAON,GAAKnF,WACV,EACX,KAAKO,GAAUM,OACXqC,EAAQA,GAAS,EAErB,KAAK3C,GAAUK,OACXsC,EAAQA,GAAS,EAErB,KAAK3C,GAAUI,MACXuC,EAAQA,GAAS,EACjB,IAAIyD,EAAWtW,KAAK6V,cAAcxK,MAAM,YACvCrL,KAAKwS,YAAc,IAAI9S,OAAU4W,EAAS5W,OAASmT,EACpD7S,KAAKwS,YAAY4D,KAAK,GACtBpW,KAAKoV,KAAON,GAAK1E,KACjB,MACJ,KAAKF,GAAUG,QACXgG,EAAsB,EAE1B,KAAKnG,GAAUF,OACsC,OAA7CuF,EAAUC,eAAe9F,GAAQM,UACjChQ,KAAK+V,cAAgB,4BAEzB,IAAIE,EAAQV,EAAUC,eAAe9F,GAAQM,QAAQqE,KAAKrU,KAAK6V,eAC/D,GAAc,OAAVI,EACAjW,KAAK+V,cAAgB,yBAEpB,CAID,IAHA,IAAItE,EAAQmE,OAAOL,EAAUgB,kBAAmB,KAC5CC,EAAa,GACbC,EAAQ,KACJA,EAAQhF,EAAM4C,KAAK4B,EAAM,KAC7BO,EAAW7J,KAAK8J,GAGpB,IAAK,IAAIjO,KADRxI,KAAKwS,YAAc,IAAI9S,OAAU8W,EAAW9W,OAAS2W,EACxCG,EAAY,CACtB,IAAIE,EAAYlJ,OAAOgJ,EAAWhO,IAC9B9H,EAAQgW,EAAU9J,WAAW,GAC7B8J,EAAUhX,OAAS,IACnBgB,EAAQiW,GAAUC,kBAAkBF,EAAU,KAElD1W,KAAKwS,YAAYhK,GAAK9H,EAEE,IAAxB2V,IACArW,KAAKwS,YAAYxS,KAAKwS,YAAY9S,OAAS,GAAK,GAGxDM,KAAKoV,KAAON,GAAK1E,KACjB,MACJ,QACIpQ,KAAK+V,cAAgB,iCAG5B,CACD,IAAIc,GAAgB,EACpBtB,EAAUS,eAAexC,aAAa7I,SAAQ,SAAAxF,GAC1C,IAAI8Q,EAAQ9Q,EAAY4M,OAAON,MAAM4C,KAAK,EAAKsB,WACjC,OAAVM,GAAkBA,EAAM,GAAGnH,gBAAkB3J,EAAY2M,WACzD+E,GAAgB,MAIpB7W,KAAK+V,cADLc,EACqB,mBAGA,oBAG7B,OAAO,IA3InB,mCA8IiBtB,EAAWuB,EAAOC,GAC3B,IAAIC,GAAa,EACjBC,EAAqB,IAAK,IAAI7Y,KAAK4B,KAAKsV,qBAAsB,CAC1D,IAAI4B,EAAsBlX,KAAKsV,qBAAqBlX,GAChD+G,EAAc+R,EAAoB,GAClC5C,EAAO4C,EAAoB,GAC3B1E,EAAcrN,EAAYgS,SAC9B,IAAK,IAAIC,KAAKjS,EAAY4M,OAAOP,OAAQ,CACrC,IAAIuB,EAAQ5N,EAAY4M,OAAOP,OAAO4F,GACtC,QAAwBtB,IAApB/C,EAAM3B,UAAV,CAGA,IAAIiG,EAAUtE,EAAM9B,UAChB/C,EAAOmJ,GAAWtE,EAAM7E,KACxBoJ,EAAQ,KAOZ,GAA2B,QALvBA,EADAvE,EAAM1B,eAAiBtC,GAAUK,QACzBjK,EAAY4M,OAAOJ,wBAAwB2C,EAAKvB,EAAM3B,WAAYrC,GAAUK,QAASlB,EAAM6I,EAASxB,GAGpGA,EAAUgC,QAAQjD,EAAKvB,EAAM3B,WAAY2B,EAAM1B,cAAenD,EAAM6I,EAAS5R,EAAYkJ,QAE3FmJ,aAAuB,CAC7BN,EAAoB,GAAKI,EAAME,aAC/B,SAASP,EAER,GAAsB,OAAlBK,EAAMG,SAAoC,OAAhBH,EAAM5W,MAAgB,CACrD4W,EAAMG,QAAQpC,gBAAgB1I,KAAK3M,MACnCA,KAAKmV,WAAY,EACjB,MAAM8B,EAGN,IAAIhI,EAAWqI,EAAM5W,MACjBgX,EAAW3E,EAAM7B,WACjByG,EAAS5E,EAAM5B,cACH2E,IAAZuB,QAAsCvB,IAAb4B,QAAqC5B,IAAX6B,IACnD1I,IAAayI,EAEbzI,IAAa,GADD0I,EAASD,EAAW,GACN,GAG9BlF,IADavD,GAAY,GAAKf,GAAQ,IACb6E,EAAM7F,OAGvC,IAAK,IAAI9O,EAAI,EAAGA,EAAI+G,EAAYkJ,MAAOjQ,GAAK,EACxC8Y,EAAoB,GAAGvK,KAAmB,IAAd6F,GAC5BA,KAAiB,EAErBwE,GAAa,EAEjB,GAAIA,EAAY,CAEZ,IAAIY,EAA8B5X,KAAKsV,qBAAqBuC,QAAO,SAAAC,GAAE,OAAc,OAAVA,EAAG,MAAa,GACzF9X,KAAKwS,YAAcoF,EAA4B,GAGnD,IAAIJ,EAAe,KAKnB,QAJsBR,GAAchX,KAAKmV,aAErCqC,EAAexX,KAAKsV,qBAAqBtV,KAAKsV,qBAAqB5V,OAAS,GAAG,IAE5E8X,IA1Mf,mCA4MiBjC,EAAWuB,EAAOC,GAC3B,IAAIS,EAAe,KACf3E,EAAQ,KACZ,OAAQ7S,KAAK2P,WACT,KAAKO,GAAUM,OACXqC,EAAQA,GAAS,EAErB,KAAK3C,GAAUK,OACXsC,EAAQA,GAAS,EAErB,KAAK3C,GAAUI,MACXuC,EAAQA,GAAS,EAEjB,IADA,IAAIyD,EAAWtW,KAAK6V,cAAcxK,MAAM,WAC/BjN,EAAI,EAAGA,EAAIkY,EAAS5W,OAAQtB,GAAK,EAAG,CACzC,IAAI4H,EAAUsQ,EAASlY,GACnB8P,EAAO2E,GAAS,EAChByE,EAAQ/B,EAAUgC,QAAQvR,EAAS+I,GAAUC,UAAWd,EAAM6I,EAAS,GAC3E,GAA2B,OAAvBO,EAAME,aAAuB,CAC7BA,EAAeF,EAAME,aACrB,MAEC,GAAsB,OAAlBF,EAAMG,SAAoC,OAAhBH,EAAM5W,MAAgB,CACrD4W,EAAMG,QAAQpC,gBAAgB1I,KAAK3M,MACnCA,KAAKmV,WAAY,EACjB,MAIA,IADA,IAAI4C,EAAST,EAAM5W,MACV0W,EAAI,EAAGA,EAAIvE,EAAOuE,GAAK,EAAG,CAC/B,IAAIjI,EAAU0D,EAAQzU,EACtB4B,KAAKwS,YAAY4E,EAAIjI,GAAmB,IAAT4I,EAC/BA,KAAY,GAIxB,MACJ,KAAK7H,GAAUG,QACf,KAAKH,GAAUF,OAEX,MACJ,QACIhQ,KAAK+V,cAAgB,6BAE7B,OAAOyB,IAvPf,+BAyPajC,EAAWuB,EAAOC,GACvB/W,KAAKmV,WAAY,EACjB,IAAIjB,EAAS,CAAC,MAAM,GACpB,OAAQlU,KAAKoV,MACT,KAAKN,GAAK3P,YACN+O,EAAO,GAAKlU,KAAKgY,aAAazC,EAAWuB,EAAOC,GAChD,MACJ,KAAKjC,GAAK1E,KACN8D,EAAO,GAAKlU,KAAKiY,aAAa1C,EAAWuB,EAAOC,GAKxD,IAAImB,EAAc3C,EAAU4C,aAAanY,KAAK6P,OAI9C,QAHoBiG,IAAhBoC,IACAA,EAAY,GAAKnB,GAEH,OAAd7C,EAAO,GACP,IAAK,IAAI9V,KAAK4B,KAAKqV,gBAAiB,CAChC,IAAI+C,EAASpY,KAAKqV,gBAAgBjX,GAClC,GAA+B,OAA3Bga,EAAOlD,gBAA0B,CACjC,IAAImD,EAAeD,EAAO5F,YAAY9S,OAClC4Y,EAAcF,EAAOhW,SAASmT,EAAWuB,EAAOsB,EAAOlD,iBAC3D,GAAIkD,EAAOjD,eAGN,CACD,GAAImD,EAAY,GAAI,CAChBpE,EAAO,IAAK,EACZ,MAEJ,GAAIkE,EAAO5F,YAAY9S,SAAW2Y,EAAc,CAC5CnE,EAAO,IAAK,EACZ,cAOhBlU,KAAK+V,cAAgB7B,EAAO,GAEhC,OAAOA,KAnSf,qCAWyBqE,GACjB,OAAOA,EAAKlN,MAAM,MAAMnL,KAAI,SAAC8E,EAAMjH,GAAP,OAAiB,IAAIiX,EAAKhQ,EAAMjH,UAZpE,KAuSa4Y,GAAb,WACI,WAAYX,EAAgBwC,GAA8B,IAAlBC,EAAkB,uDAAN,KAKhD,GALsD,oBACtDzY,KAAKmY,aAAe,GACpBnY,KAAK6T,iBAAmBmC,EAAenC,iBACvC7T,KAAKwV,eAAiB,GACtBxV,KAAKyY,UAAYA,EACbzC,EAAeR,eACfxV,KAAKwV,eAAiBQ,EAAeR,oBAEpC,GAAIQ,EAAerC,SAAU,CAC9B,IAAI+E,EAAQ1C,EAAerC,SAE3B,GADA3T,KAAKwV,eAAiB,GAClBkD,EAAMhJ,GAAQC,WAAY,CAC1B,IAAIpK,EAAUoR,EAAUpR,QAAQyQ,EAAerC,SAASjE,GAAQC,YAC5DpK,IACAvF,KAAKwV,eAAe9F,GAAQC,WAAaiG,OAAOrQ,EAAU,uBAGlE,GAAImT,EAAMhJ,GAAQE,SAAU,CACxB,IAAIrK,EAAUoR,EAAUpR,QAAQmT,EAAMhJ,GAAQE,UAC1CrK,IACAvF,KAAKwV,eAAe9F,GAAQE,SAAWgG,OAAO,UAAYrQ,EAAU,UAG5E,GAAImT,EAAMhJ,GAAQG,OAAQ,CACtB,IAAItK,EAAUoR,EAAUpR,QAAQmT,EAAMhJ,GAAQG,QAC1CtK,IACAvF,KAAKwV,eAAe9F,GAAQG,OAAS+F,OAAO,+BAAiCrQ,EAAU,iBAG/F,GAAImT,EAAMhJ,GAAQT,UAAW,CACzB,IAAI1J,EAAUoR,EAAUpR,QAAQmT,EAAMhJ,GAAQT,WAC1C1J,IACAvF,KAAKwV,eAAe9F,GAAQT,UAAY2G,OAAOrQ,EAAU,aAIjE,GADAvF,KAAKwV,eAAe9F,GAAQiJ,SAAW/C,OAAO,YAAce,EAAUiC,UAAY,kBAC9EF,EAAMhJ,GAAQK,YAAa,CAC3B,IAAIxK,EAAUoR,EAAUpR,QAAQmT,EAAMhJ,GAAQK,aAC9C,GAAIxK,EAAS,CACT,IAAIsT,EAAYtT,EAAQ7F,OAAS,EAAI,GAAK,KAAO6F,EAEjDvF,KAAKuW,kBAAoB,kBAAoBI,EAAUmC,qBAAuBD,EAAY,mCAC1F7Y,KAAKwV,eAAe9F,GAAQrC,MAAQuI,OAAOrQ,EAAU,IAAMvF,KAAKuW,kBAAoB,IAAMhR,SAI9FvF,KAAKuW,kBAAoB,kBAAoBI,EAAUmC,qBAAuB,mCAElF,GAAIJ,EAAMhJ,GAAQI,cAAe,CAC7B,IAAIvK,EAAUoR,EAAUpR,QAAQmT,EAAMhJ,GAAQI,eAC1CvK,IACAvF,KAAKwV,eAAe9F,GAAQM,QAAU4F,OAAOrQ,EAAU,IAAMvF,KAAKuW,kBAAoB,KAAOhR,UAKrGT,QAAQD,IAAI,8EAEhB7E,KAAK4T,WAAaoC,EAAepC,WACjC5T,KAAKwY,WAAcA,GAA2BxC,EAAewC,WAC7DxY,KAAKgW,eAAiBA,EA7D9B,oDAgEY7F,EAAM1S,EAAMyQ,EAAM6I,EAASgC,GAC/B,IAAI7E,EAAS,CACTsD,aAAc,KACd9W,MAAO,KACP+W,QAAS,MAEb,OAAQha,GACJ,KAAKsR,GAAUE,SACX,IAAIlR,EAAQiC,KAAKgW,eAAetC,SAAStL,QAAQ+H,GACjD,IAAe,IAAXpS,EAEA,OADAmW,EAAOxT,MAAQ3C,EACRmW,EAEX,IAAI8E,EAAa,KACjB,GAAIhZ,KAAKwV,eAAe9F,GAAQT,UAAW,CACvC,IAAIgH,EAAQjW,KAAKwV,eAAe9F,GAAQT,UAAUoF,KAAKlE,GACzC,OAAV8F,IACA+C,EAAa/C,EAAM,IAG3B,OAAmB,OAAf+C,GAKgC,MADpCA,EAAa7U,SAAS6U,EAAY,MACf,GAAM9K,IAJrBgG,EAAOsD,aAAP,oCAAmDrH,EAAnD,KACO+D,IAOXA,EAAOxT,MAAQsY,EACR9E,GACX,KAAKnF,GAAUI,OACf,KAAKJ,GAAUC,UAEX,IAAItO,EAAQ,KACRuY,EAAYjZ,KAAKmY,aAAahI,GAClC,QAAkB2F,IAAdmD,EAAyB,CAEzB,GADA/E,EAAOuD,QAAUwB,EAAU,GACN,OAAjBA,EAAU,GACV,OAAO/E,EAEXxT,EAAQuY,EAAU,GAEtB,GAAc,OAAVvY,GAAkBV,KAAKwV,eAAe9F,GAAQrC,MAAO,CACrD,IAAI6L,EAAatD,OAAO5V,KAAKwV,eAAe9F,GAAQrC,OAAOgH,KAAKlE,GAChE,GAAmB,OAAf+I,QAAyCpD,IAAlBoD,EAAW,KAClCxY,EAAQwY,EAAW,GAAGtM,WAAW,IACrB,IAER,OADAsH,EAAOsD,aAAe,uBAAyB0B,EAAW,GAAK,gBACxDhF,EAInB,GAAc,OAAVxT,QAA2DoV,IAAzC9V,KAAKwV,eAAe9F,GAAQiJ,SAAwB,CACtE,IAAIjM,EAAQkJ,OAAO5V,KAAKwV,eAAe9F,GAAQiJ,UAAUtE,KAAKlE,GAC9D,GAAc,OAAVzD,EAAgB,CAChB,IAAIiC,EAAQgI,EAAUwC,QAAQzM,EAAM,KAAO,GACvC0M,EAAgB1M,EAAM,GAC1BhM,EAAQyD,SAASiV,EAAezK,IASxC,OANc,OAAVjO,GAAkBjD,IAASsR,GAAUI,SACrCzO,GAASqW,EACL/W,KAAK6T,mBACLnT,GAASqY,IAGH,OAAVrY,GAAkBkU,MAAMlU,IACxBwT,EAAOsD,aAAP,iCAAgDrH,EAAhD,KACO+D,IAEgC,IAAlCjG,GAAMoL,WAAW3Y,EAAOwN,IAC7BgG,EAAOsD,aAAP,0BAAyCrH,EAAzC,KACO+D,IAEXA,EAAOxT,MAAQA,EACRwT,GACX,QAEI,OADAA,EAAOsD,aAAe,uBACftD,KA/IvB,+BAuKa4C,EAAOwC,GACZxC,EAAM5W,KAAI,SAAA8E,GAAI,OAAIA,EAAKkQ,gBAAkB,QACzC,IAAIqE,EAAS,GACTC,GAAoB,EACpBzC,EAAU,EACd,IAAK,IAAI3Y,KAAK0Y,EAAO,CACjB,IAAI9R,EAAO8R,EAAM1Y,GACjB,OAAQkb,GACJ,KAAK,EACDE,EAAoBxU,EAAKyU,eAAezZ,KAAMwZ,QACnB1D,IAAvB9Q,EAAK+Q,eACLwD,EAAO5M,KAAK3H,QAEG8Q,IAAf9Q,EAAK6K,QACL7P,KAAKmY,aAAanT,EAAK6K,OAAS,CAAC7K,EAAM,OAE3C,MACJ,QACIA,EAAKkQ,gBAAkB6B,EACvB,IAAI2C,EAAM1U,EAAK5C,SAASpC,KAAM8W,EAAOC,GAIrC,GAHe,OAAX2C,EAAI,IACJH,EAAO5M,KAAK3H,GAEZ0U,EAAI,GACJ,OAAO,KAEX3C,GAAW/R,EAAKwN,YAAY9S,QAGxC,OAAO6Z,KApMf,+BAkJmBI,GACX,GAAoB,IAAhBA,EAAKja,OACL,OAAO,KAGX,IADA,IAAI6F,EAAU,GACLnH,EAAI,EAAGA,EAAIub,EAAKja,OAAQtB,IAAK,CAClC,IAAIwb,EAAUD,EAAKvb,GACnB,GAAgB,OAAZwb,EAEA,OADA9U,QAAQD,IAAI,8EACL,KAEK,KAAZU,EACAA,EAAU,MAGVA,GAAW,IAEfA,GAAWqU,EAEf,OAAOrU,EAAU,QArKzB,KAwMAoR,GAAUwC,QAAU,CAChB,EAAK,EACL,EAAK,EACL,EAAK,GACL,EAAK,IAETxC,GAAUiC,UAAYiB,OAAOC,KAAKnD,GAAUwC,SAASzL,KAAK,IAE1DiJ,GAAUC,kBAAoB,CAC1B,EAAK,EACL,EAAK,EACL,EAAK,GACL,EAAK,GACLmD,IAAM,GACN,IAAK,IAGTpD,GAAUmC,qBAAuBe,OAAOC,KAAKnD,GAAUC,mBAAmBlJ,KAAK,IC1hBxE,IAAMsM,GAAb,WACI,aAAc,oBACVha,KAAKia,KAAO,GAFpB,0DAMQ,OAAOJ,OAAOC,KAAK9Z,KAAKia,QANhC,8BASYC,EAAclb,EAAYmb,EAAW5U,GACzC,IAAI/G,EAAMwB,KAAKia,KAAKC,GACpB,QAAYpE,IAARtX,EACA,KAAM,sBAEV,IAAK,IAAI4B,KAAOmF,EACZ,QAAyBuQ,IAArBtX,EAAI+G,QAAQnF,GACZ,KAAM,yBAGd,IAAI4V,EAAiBxX,EAAI4b,UAAU7U,GACnC,OAAO,IAAI/G,EAAIO,KAAKC,EAAYmb,EAAWnE,OApBnD,KAyBaqE,GAAb,+FAEWtD,EAAS1I,GACZ,GAAM0I,EAAU1I,IAAW,EAAKrO,KAAKhB,WACjC,OAAO,KAGX,IADA,IAAIkV,EAAS,GACJ9V,EAAI,EAAGA,EAAIiQ,EAAOjQ,IACvB8V,EAAOvH,KAAK3M,KAAKwE,OAAOuS,EAAU3Y,IAEtC,OAAO8V,IAVf,6BAcW6C,EAAS1I,GACZ,GAAI0I,EAAU,EACV,OAAO,EAEX,GAAIA,EAAU1I,EAAM3O,OAASM,KAAKhB,WAC9B,OAAO,EAEX,IAAK,IAAIZ,EAAI,EAAGA,EAAIiQ,EAAM3O,OAAQtB,IAC9B4B,KAAKwE,OAAOuS,EAAU3Y,GAAKiQ,EAAMjQ,GAErC,OAAO,IAxBf,+BA2BQ,IAAIkc,EAAQta,KAAKgW,eAAexC,aAChCxT,KAAKua,QAAU,KACfva,KAAKwa,UAAY,GACjB,IAAK,IAAIpc,EAAI,EAAGA,EAAIkc,EAAM5a,OAAQtB,IAC9B,GAAIkc,EAAMlc,GAAG6X,MAAMjW,KAAKya,SAAU,CAC9Bza,KAAKua,QAAUD,EAAMlc,GACrB,MAGR,GAAqB,OAAjB4B,KAAKua,QACL,OAAO,KAEX,IAAIG,EAAY1a,KAAKua,QAAQxI,OAAOP,OACpC,IAAK,IAAIpT,KAAKsc,EAAW,CACrB,IAAI3H,EAAQ2H,EAAUtc,GACtB,GAAuB,MAAnB2U,EAAM3B,UAAmB,CACzB,IAAIuJ,EAAQ5H,EAAM7B,WACdxQ,GAAUV,KAAKya,UAAY1H,EAAM7F,OAAW,GAAK6F,EAAM7E,MAAQ,IAAOyM,EACtE5H,EAAM1B,gBAAkBtC,GAAUK,UAClC1O,EAAQV,KAAKua,QAAQxI,OAAOH,uBAAuBlR,EAAOV,KAAK4a,KAEnE5a,KAAKwa,UAAUzH,EAAM3B,WAAapR,KAAKwa,UAAUzH,EAAM3B,YAAc,EACrEpR,KAAKwa,UAAUzH,EAAM3B,WAAapR,KAAKwa,UAAUzH,EAAM3B,WAAa1Q,EAChEV,KAAKua,QAAQxI,OAAOP,OAAOpT,GAAG4S,QAAU+B,EAAM1B,gBAAkBtC,GAAUE,WAC1EjP,KAAKwa,UAAUzH,EAAM3B,WAAanD,GAAMG,QAAQpO,KAAKwa,UAAUzH,EAAM3B,WAAY2B,EAAM9B,UAAY8B,EAAM9B,UAAY8B,EAAM7E,QAIvI,OAAOlO,KAAKgW,eAAe6E,YAAY7a,KAAKua,QAASva,KAAKwa,aAvDlE,gCA2DQ,OAAOxa,KAAKua,QAAQrI,SAASlS,UA3DrC,KA+DAqa,GAAKS,QAAU,IAAId,GCtFJ,QACX7N,UAAWA,GACXmD,WAAYA,GACZqH,UAAWA,GACX3B,KAAMA,GACNqF,KAAMA,ICDJU,G,4MAGFC,eAAiB,SAAC7b,GACd,EAAKR,MAAMV,mBAAmBkB,EAAMiF,OAAO1D,MAAO,EAAK/B,MAAMsc,iBAAiB1c,YAAa,EAAKI,MAAMsc,iBAAiBzc,M,EAG3HsM,UAAY,SAAC3L,GACT,EAAKR,MAAMV,mBAAmB,EAAKU,MAAMsc,iBAAiB3c,UAAW,EAAKK,MAAMsc,iBAAiB1c,YAAaY,EAAMiF,OAAO1D,Q,EAG/Hwa,iBAAmB,SAAC/b,IAGW,KAAvBA,EAAMiF,OAAO1D,OAFN,aAEyBya,KAAKhc,EAAMiF,OAAO1D,SAClD,EAAK/B,MAAMV,mBAAmB,EAAKU,MAAMsc,iBAAiB3c,UAAWa,EAAMiF,OAAO1D,MAAO,EAAK/B,MAAMsc,iBAAiBzc,M,EAI7H4c,aAAe,SAACjc,GACZA,EAAM+D,iBACN,EAAKvE,MAAM0c,iB,uDAIX,IAAIC,EAAOC,GAAMlB,KAAKS,QAAQU,cAE9B,OACI,yBAAK3d,GAAG,iBAAiBoC,UAAU,wBAC/B,0BAAMwb,SAAUzb,KAAKob,cACjB,kBAAC,GAAD,CAAO7a,SAAUP,KAAKgb,eAAgBta,MAAOV,KAAKrB,MAAMsc,iBAAiB3c,UAAWqF,KAAK,8BAA8BC,YAAY,YAAY/F,GAAG,aAClJ,kBAAC,EAAD,CAAQ0C,SAAUP,KAAK8K,UAAWpK,MAAOV,KAAKrB,MAAMsc,iBAAiBzc,IAAKmF,KAAK,8BAA8BC,YAAY,mBACpH0X,EAAKpb,KAAI,SAAC1B,EAAKJ,GACZ,OAAO,4BAAQgC,IAAK5B,EAAKkC,MAAOlC,GAAMA,OAG9C,kBAAC,GAAD,CAAO+B,SAAUP,KAAKkb,iBAAkBxa,MAAOV,KAAKrB,MAAMsc,iBAAiB1c,YAAaoF,KAAK,gCAAgCC,YAAY,sBAAsBnG,KAAK,WAEpK,2BAAOwC,UAAU,SAASS,MAAM,iBAAiBjD,KAAK,iB,GAtC9CuD,aAAtB+Z,GACKhY,aAAe,WA4C1B,IAYeR,eACdtB,aAbuB,SAAAzD,GACvB,MAAO,CACAqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,YACzB2b,iBAAkBzd,EAAMyd,qBAIC,SAAC/Z,EAAUC,GAAX,MAAyB,CACnDlD,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAa8C,EAASjD,EAAmBC,EAAGC,EAAGC,QAInE6C,CAEE8Z,KChEkBW,G,kDAGjB,WAAY/c,GAAQ,IAAD,8BACf,cAAMA,IAUVgd,gBAAkB,SAAC9b,EAAK+b,EAASC,GAC7B,IAqBItH,EArBAjQ,EAAQzE,EACZ,OAAO+b,GACH,KAAK,EACDtX,EAAQH,SAASG,EAAO,IACxB,MACJ,QACA,KAAK,EACL,KAAK,EACDA,EAAQH,SAASG,EAAO,IACxB,MACJ,KAAK,EACDA,EAAQH,SAASG,EAAO,GACxB,MACJ,KAAK,EACDA,EAAoBA,EAI5B,GAAyB,QAArBA,EAAMC,WACN,MAAO,GAGX,OAAOsX,GACH,KAAK,EACDtH,EAAS,KAAK1Q,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACpD,MACJ,KAAK,EACDgQ,GAAUjQ,IAAU,GAAGC,SAAS,IAChC,MACJ,QACA,KAAK,GACDgQ,EAASjQ,EAAMC,SAAS,KACX,aAAcgQ,GAAkB,YAC7C,MACJ,KAAK,EACDA,EAAS,KAAK1Q,GAAWS,IAAU,GAAGC,SAAS,GAAI,IACnD,MACJ,KAAK,EACDgQ,EAAsBjQ,EAI9B,OAAOiQ,GAtDQ,EAyDnBuH,cAAgB,SAAC3c,GACb,IAAIU,EAAMV,EAAMiF,OAAO1D,MACnBkb,EAAU,EAAKpe,MAAMue,WACrBF,EAAW,EAAKre,MAAMwe,YACtBC,EAAM,EAAKN,gBAAgB9b,EAAK+b,EAASC,GAC7C,EAAK1Y,SAAS,CAACmB,MAAOzE,EAAKqc,UAAoB,KAARrc,EAAa0U,OAAQ0H,KA9D7C,EAiEnBE,kBAAoB,SAAChd,GACjB,IAAIU,EAAM,EAAKrC,MAAM8G,MACjBsX,EAAUzX,SAAShF,EAAMiF,OAAO1D,MAAO,IACvCmb,EAAW,EAAKre,MAAMwe,YACtBC,EAAM,EAAKN,gBAAgB9b,EAAK+b,EAASC,GAC7C,EAAK1Y,SAAS,CAACmB,MAAOzE,EAAKkc,WAAYH,EAASM,UAAoB,KAARrc,EAAa0U,OAAQ0H,KAtElE,EAyEnBG,mBAAqB,SAACjd,GAClB,IAAIU,EAAM,EAAKrC,MAAM8G,MACjBsX,EAAU,EAAKpe,MAAMue,WACrBF,EAAW1X,SAAShF,EAAMiF,OAAO1D,MAAO,IACxCub,EAAM,EAAKN,gBAAgB9b,EAAK+b,EAASC,GAC7C,EAAK1Y,SAAS,CAACmB,MAAOzE,EAAKmc,YAAaH,EAAUK,UAAoB,KAARrc,EAAa0U,OAAQ0H,KA5EnF,EAAKze,MAAQ,CACT8G,MAAO,EACPyX,WAAY,EACZC,YAAa,EACbzH,OAAQ,GACR2H,WAAW,GAPA,E,qDAkFf,OACI,yBAAKre,GAAG,mBAAmBoC,UAAU,0BACjC,kBAAC,GAAD,CAAOM,SAAUP,KAAK8b,cAAenY,KAAK,4BAA4BC,YAAY,QAAQnG,KAAK,SAC/F,kBAAC,EAAD,CAAQ8C,SAAUP,KAAKmc,kBAAmBxY,KAAK,8BAA8BC,YAAY,cACrF,4BAAQlD,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WAGJ,6BACA,kBAAC,EAAD,CAAQH,SAAUP,KAAKoc,mBAAoBzY,KAAK,8BAA8BC,YAAY,eACtF,4BAAQlD,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,WAGJ,0BAAMT,UAAU,qBACU,KAArBD,KAAKxC,MAAM+W,OAAevU,KAAKxC,MAAM+W,OAAS,iB,GAvGtBvT,aAAxB0a,GACV3Y,aAAe,aCD1B,IAIMsZ,G,kDAGF,WAAY1d,GAAQ,IAAD,8BACf,cAAMA,IAMVsF,WAAa,SAAC9E,GACV,EAAKgE,SAAS,CAACe,cAAeC,SAAShF,EAAMiF,OAAO1D,MAAO,OAR5C,EAWnB2D,kBAAoB,SAACC,GACjB,OAAO,EAAK9G,MAAM0G,eACd,KAAK,EACD,MAAO,KAAKL,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACtD,KAAK,EACD,OAAQD,IAAU,GAAGC,SAAS,IAClC,QACA,KAAK,EACD,IAAIgQ,EAASjQ,EAAMC,SAAS,IAE5B,OADIgQ,EAAS,aAAcA,GAAkB,YACtCA,EACX,KAAK,EACD,MAAO,KAAK1Q,GAAWS,IAAU,GAAGC,SAAS,GAAI,IACrD,KAAK,EACD,OAA6BD,IAzBtB,EA6BnBgY,wBAA0B,SAACzc,GACvB,OAAOA,GACH,QACA,KAvCgB,EAwCZ,MAAO,aACX,KAxCc,EAyCV,MAAO,eACX,KAzCiB,EA0Cb,MAAO,YAnCf,EAAKrC,MAAQ,CACT0G,cAAe,GAHJ,E,qDAyCT,IAAD,OACDlG,EAAMgC,KAAKrB,MAAME,KAAKmB,KAAKrB,MAAMW,aACrC,IAAMtB,IAAOA,EAAIe,KACb,OAAO,8BAEX,IAAIA,EAAOf,EAAIe,KACXwd,EAAYxd,EAAKyN,aAAagQ,aAC9BC,EAAmBze,EAAIye,iBACvBC,EAAiB3d,EAAKyN,aAAakH,SAEvC,OACI,yBAAK7V,GAAG,kBAAkBoC,UAAU,yBAChC,kBAAC,EAAD,CAAQM,SAAUP,KAAKiE,WAAYN,KAAK,8BAA8BC,YAAY,eAAec,aAAa,KAC1G,4BAAQhE,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,UAEJ,2BAAOic,YAAY,IAAIC,YAAY,KAC/B,+BACI,4BAAI,mCAAY,uCAEpB,+BAEQL,EAAUrc,KAAI,SAAC+O,EAAU7Q,GACrB,IAAIye,EAAe,EAAKxY,kBAAkB4K,GAC1C,OAAQ,wBAAI7O,IAAKhC,EAAG6B,UAAW,EAAKqc,wBAAwBG,EAAiBre,KACzE,4BACKse,EAAete,IAEpB,wBAAI0e,YAAW7N,GACV4N,c,GA5EZ7b,aAAvBqb,GACKtZ,aAAe,YAuF1B,IAOe9B,gBAPM,SAAAzD,GACpB,MAAO,CACAqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,eAIZ2B,CAAsBob,IClG/BU,G,kDAGF,WAAYpe,GAAQ,IAAD,8BACf,cAAMA,IAMVsF,WAAa,SAAC9E,GACV,EAAKgE,SAAS,CAACe,cAAeC,SAAShF,EAAMiF,OAAO1D,MAAO,OAR5C,EAWnB2D,kBAAoB,SAACC,GACjB,OAAO,EAAK9G,MAAM0G,eACd,QACA,KAAK,EACD,OAAOL,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,GAAI,GAChD,KAAK,EACD,OAAOV,GAAWS,IAAU,GAAGC,SAAS,GAAI,KAnBpD,EAAK/G,MAAQ,CACT0G,cAAe,GAHJ,E,qDAyBT,IAAD,OACDrF,EAAOmB,KAAKrB,MAAME,KACtB,GAAoB,IAAhBA,EAAKa,OACL,OAAO,8BAEX,IAAIsd,EAAcne,EAAKmB,KAAKrB,MAAMW,aAAa2d,aAC3CxY,EAA+B,IAAvBuY,EAAYtd,OACxB,OACI,yBAAK7B,GAAG,qBAAqBoC,UAAU,4BAClCwE,GAAS,0BAAMxE,UAAU,eAAhB,uBACRwE,GAAS,kBAAC,EAAD,CAAQlE,SAAUP,KAAKiE,WAAYN,KAAK,8BAA8BC,YAAY,eAAec,aAAa,KACrH,4BAAQhE,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,YAGF+D,GAASuY,EAAY9c,KAAI,SAACyE,EAAMvG,GAC9B,IAAIyB,EAAM,EAAKwE,kBAAkBM,GACjC,OAAO,0BAAMvE,IAAKhC,GAAIyB,EAAf,a,GA/CImB,aAAzB+b,GACKha,aAAe,eAqD1B,IAOe9B,gBAPM,SAAAzD,GACpB,MAAO,CACAqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,eAIZ2B,CAAsB8b,I,ICsW/BG,G,WACF,WAAYle,EAAY0U,GAAU,oBAC9B1T,KAAKwc,aAAe,GACpBxc,KAAKmd,kBAAoB,GACzB,IAAK,IAAI/e,EAAI,EAAGA,EAAI,GAAIA,IACpB4B,KAAKwc,aAAa7P,KAAK,GACvB3M,KAAKmd,kBAAkBxQ,MAAK,GAEhC3M,KAAKhB,WAAaA,EAClBgB,KAAKwc,aAAa,GAAKxd,EACvBgB,KAAK0T,SAAWA,E,oDAGhB5O,QAAQD,IAAI,qBACZ,IAAK,IAAIzG,EAAI,EAAGA,EAAI,GAAIA,IACpB0G,QAAQD,IAAI,IAAMzG,EAAEmG,WAAYvE,KAAK0T,SAAStV,GAAI4B,KAAKwc,aAAape,GAAGmG,YAAavE,KAAKwc,aAAape,KAAO,GAAGmG,SAAS,IAAIuK,eAEjIhK,QAAQD,IAAI,Y,2BAEXuY,GACD,OAAuB,IAAnBA,EACO,EAGApd,KAAKwc,aAAaY,K,4BAG3BA,EAAgB1c,GAClBV,KAAKwc,aAAaY,GAAkB1c,EACpCV,KAAKmd,kBAAkBC,IAAkB,I,yCAGzC,OAAO,K,6CAIP,IADA,IAAIC,EAASrd,KAAKmd,kBAAkBjH,QAC3B9X,EAAI,EAAGA,EAAI4B,KAAKsd,mBAAoBlf,IACzC4B,KAAKmd,kBAAkB/e,IAAK,EAEhC,OAAOif,I,8BAGP,IAAK,IAAIjf,EAAI,EAAGA,EAAI,GAAIA,IACpB4B,KAAKwc,aAAape,GAAK,EACvB4B,KAAKmd,kBAAkB/e,IAAK,EAEhC4B,KAAKwc,aAAa,GAAKxc,KAAKhB,e,KAI9Bue,G,kDAoBF,WAAYve,EAAYmb,EAAWnE,GAAgB,2BAC/C,gBACK/I,yBAA2B,GAChC,EAAKX,6BAA+B,GACpC,EAAKkR,2BAA6B,GAClC,EAAK5C,GAAK,EACV,EAAK5b,WAAaA,EAClB,EAAKmb,UAAYA,EACjB,EAAKnE,eAAiBA,EACtB,EAAKxJ,aAAe,IAAI0Q,GAAkBle,EAAYgX,EAAetC,UACrE,EAAKlP,OAAS,IAAIiZ,MAAMze,GACxB,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAYZ,IAC5B,EAAKoG,OAAOpG,GAAK,EAZ0B,S,oDAlB/C4B,KAAK4a,GAAK,EACV5a,KAAKwE,OAAS,GACd,IAAK,IAAIpG,EAAI,EAAGA,EAAI4B,KAAKhB,WAAYZ,IACjC4B,KAAKwE,OAAOpG,GAAK,EAErB4B,KAAKwM,aAAakR,U,8BAGlB,GAAI1d,KAAK4a,GAAK,EACV,MAAO,mBAEX,IAAI7U,EAAM/F,KAAKsN,OAAOtN,KAAK4a,GAAI,GAC/B,OAAY,OAAR7U,EACO,6BAEX/F,KAAKya,QAAUxM,GAAM0P,SAAS5X,GACvB,U,GAlBSsU,IAoCxBA,GAAKS,QAAQb,KAAb,MAA6B,CACzBG,UA1fJ,SAAe7U,GAEX,IAAIgO,EAAU,GACVC,EAAe,GAGnBD,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,iFAAkF,8BACrF,IAAIgN,EAAQtK,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,KAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC9Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAO,EAAI,GACzIzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGtH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAM,EAAI,GACzJzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAIrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC/Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,KAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC9Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGpH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Hzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAU9e,GAGrH,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Hzb,EAAK6b,IAAM,EACJ,SAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WACnE,IAAI6B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,iFAAkF,8BACrF,IAAIiN,EAAQvK,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,SAAU,UAAW,CAAC,IAAW,IAAQ,SAAU/e,GAGjG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAK6b,GAAK,GACrD7b,EAAK6b,GAAM7b,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMvM,GAAMG,QAAQrP,EAAKyb,UAAU,GAAI,IACjF,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGjG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,IACtGzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGjG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAM,EAAI,GACjHzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,QAASiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGlG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAMzb,EAAKyb,UAAU,KAAO,EAAK,EAAI,GAChIzb,EAAK6b,IAAM,EACJ,QACR,IACHpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGjG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IAC9Gzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGhG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IAC9Gzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAU/e,GAGjG,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IAC/Gzb,EAAK6b,IAAM,EACJ,SAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WACnE,IAAI6B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,+FAAgG,8BACnG,IAAIkN,EAAYxK,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAMkM,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,IAAQ,SAAUhf,GACnG,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAMG,QAAQC,EAAM,GAAI,IACnEtP,EAAK6b,IAAM,EACJ,UAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMkM,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,IAAQ,SAAUhf,GACnG,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAMG,QAAQH,GAAM0P,SAAStP,GAAQ,KAChFtP,EAAK6b,IAAM,EACJ,UAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMkM,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,IAAQ,SAAUhf,GACnG,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAM0P,SAAStP,IAC1DtP,EAAK6b,IAAM,EACJ,UAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOkM,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,IAAQ,SAAUhf,GACpG,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAInM,EAAM,IACjDtP,EAAK6b,IAAM,EACJ,UAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOkM,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,IAAQ,SAAUhf,GACpG,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAM0P,SAAStP,IAC1DtP,EAAK6b,IAAM,EACJ,UAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,QAAS,GAAI,GAAG+M,cAAc,EAAG7O,GAAUC,WACxD,IAAI6B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,sFAAuF,8BAC1F,IAAImN,EAAYzK,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,OAAQmM,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAUjf,GAG1H,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyb,UAAU,IACvGzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQmM,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAUjf,GAG1H,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyb,UAAU,IACxGzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQmM,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,KAAY,SAAUjf,GAG1H,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyb,UAAU,IACvGzb,EAAK6b,IAAM,EACJ,SAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WAAWqI,QAAQ,GAAI,EAAG,IAC5F,IAAIxG,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WAAWqI,QAAQ,GAAI,EAAG,GAC3F,IAAIxG,GAAS,SAAU,EAAG,IAC3B,4FAA6F,8BAChG,IAAIoN,EAAQ1K,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUlf,GAC/F,IAAIsP,EAAQ,GAEZ,OADAA,EAAM1B,KAAiD,IAA5C5N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAC7Czb,EAAK8N,OAAO9N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAInM,IAC3EtP,EAAK6b,IAAM,EACJ,MAEJ,6BAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUlf,GAC/F,IAAIsP,EAAQ,GACR3N,EAAQ3B,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAIlD,OAHAnM,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACP3B,EAAK8N,OAAO9N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAInM,IAC3EtP,EAAK6b,IAAM,EACJ,MAEJ,6BAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoM,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUlf,GAC/F,IAAIsP,EAAQ,GACR3N,EAAQ3B,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAQlD,OAPAnM,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACP3B,EAAK8N,OAAO9N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAInM,IAC3EtP,EAAK6b,IAAM,EACJ,MAEJ,6BAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WACnE,IAAI6B,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUI,QACpD,IAAI0B,GAAS,SAAU,EAAG,IAC3B,6DAA8D,uBACjE,IAAIqN,EAAQ3K,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOqM,EAAO,CAAC,UAAW,CAAC,KAAY,SAAUnf,GAG/E,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyb,UAAU,IAAM,IACjEzb,EAAK6b,IAAM,EACJ,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,QAASqM,EAAO,CAAC,UAAW,CAAC,KAAY,SAAUnf,GAGjF,OAFAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,IAAKzb,EAAKyb,UAAU,IAAM,IAAMzb,EAAK6b,IAC5E7b,EAAK6b,IAAM,EACJ,SAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,GAAI,IAC1F,IAAIxG,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,EAAG,IACzF,IAAIxG,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,EAAG,GACxF,IAAIxG,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,GAAI,IACzF,IAAIxG,GAAS,SAAU,EAAG,IAC3B,kFAAmF,8BACtF,IAAIsN,EAAS5K,EAAQA,EAAQ7T,OAAS,GACtC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOjG,OANIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IACpFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOjG,OANIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IACpFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOjG,OANIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAClFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOjG,OANIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IACnFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOlG,OANKA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EACnGzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAEXpH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQsM,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,IAAQ,SAAUpf,GAOlG,OANKA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,GAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EACpGzb,EAAK6b,IAAM7b,EAAKyb,UAAU,GAG1Bzb,EAAK6b,IAAM,EAER,SAGXrH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,GAAI,IAC1F,IAAIxG,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,EAAG,IAC1F,IAAIxG,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,GAAI,IAC1F,IAAIxG,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,GAAI,IAC1F,IAAIxG,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,6DAA8D,uBACjE,IAAIuN,EAAS7K,EAAQA,EAAQ7T,OAAS,GACtC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOuM,EAAQ,CAAC,UAAW,CAAC,MAAY,SAAUrf,GAKhF,OAJAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAK6b,GAAK,GAErD7b,EAAK6b,IAAM3M,GAAMG,QAAQrP,EAAKyb,UAAU,GAAI,IAErC,SAIXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,QAAS,EAAG,KAC1B,sBAAuB,UAC1B,IAAIwN,EAAkB9K,EAAQA,EAAQ7T,OAAS,GAC/C8T,EAAa7G,KAAK,IAAIkF,GAAY,QAASwM,EAAiB,CAAC,SAAU,CAAC,MAAqC,SAACtf,GAC1G,IAAImV,EAASnV,EAAKob,UAAUmE,MAAMvf,GAElC,OADAA,EAAK6b,IAAM,EACJ1G,MAKXX,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,MAAO,GAAI,GACxB,IAAIA,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,4DAA6D,uBAChE,IAAI0N,EAAWhL,EAAQA,EAAQ7T,OAAS,GACxC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM0M,EAAU,CAAC,SAAU,SAAU,MAAO,UAAW,CAAC,GAAW,EAAO,EAAS,IAAY,SAAUxf,GACvI,OAAO,QACR,EAAO,CAAC,SAEXwU,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,WACnE,IAAI6B,GAAS,MAAO,GAAI,GACxB,IAAIA,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG+M,cAAc,EAAG7O,GAAUE,UACpD,IAAI4B,GAAS,SAAU,EAAG,IAC3B,+DAAgE,uBACnE,IAAI2N,EAAWjL,EAAQA,EAAQ7T,OAAS,GACxC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM2M,EAAU,CAAC,SAAU,SAAU,OAAQ,CAAC,GAAW,EAAO,IAAU,SAAUzf,GAClH,OAAO,QACR,EAAO,CAAC,UACXyU,EAAa7G,KAAK,IAAIkF,GAAY,KAAM2M,EAAU,CAAC,SAAU,SAAU,OAAQ,CAAC,GAAW,EAAO,IAAU,SAAUzf,GAClH,OAAO,QACR,EAAO,CAAC,UAEXwU,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,MAAO,GAAI,GAAI,MAAM,GAClC,IAAIA,GAAS,MAAO,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACtD,IAAI4B,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GACtB,IAAIA,GAAS,SAAU,EAAG,IAC3B,uCAAwC,gBAC3C,IAAI4N,EAAWlL,EAAQA,EAAQ7T,OAAS,GACxC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM4M,EAAU,CAAC,SAAU,KAAM,SAAU,OAAQ,CAAC,IAAW,EAAS,EAAO,IAAiB,SAAU1f,GACxI,OAAO,QACR,EAAO,CAAC,UAEXyU,EAAa7G,KAAK,IAAIkF,GAAY,QAASwM,EAAiB,CAAC,SAAU,CAAC,MAAqC,SAAUtf,GACnH,OAAO,QACR,EAAO,CAAC,WACXyU,EAAa7G,KAAK,IAAIkF,GAAY,UAAWwM,EAAiB,CAAC,SAAU,CAAC,MAAqC,SAAUtf,GACrH,OAAO,QACR,EAAO,CAAC,WACX,IACI4U,EAAW,GACfA,EAASjE,GAAQC,WAAa,CAAC,OAC/BgE,EAASjE,GAAQE,SAAW,CAAC,KAC7B+D,EAASjE,GAAQG,OAAS,CAAC,OAC3B8D,EAASjE,GAAQI,cAAgB,CAAC,OAClC6D,EAASjE,GAAQK,YAAc,CAAC,OAChC4D,EAASjE,GAAQT,UAAY,CAAC,KAC9B,IAAI2E,EAAa,GAOjB,OANAA,EAAU,KAAW1D,GAAUC,KAC/ByD,EAAU,KAAW1D,GAAUE,KAC/BwD,EAAU,OAAa1D,GAAUG,QACjCuD,EAAU,KAAW1D,GAAUI,MAC/BsD,EAAU,KAAW1D,GAAUK,OAC/BqD,EAAU,KAAW1D,GAAUM,OACxB,IAAI8C,GAAe,GAAIC,EAASC,EAvZd,GAwYV,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,MAe3HG,EAAUC,GAAY,EAAlG,6MAgGP7U,KAAMwe,GACNhY,QAAS,I,IC5HPmZ,G,WACF,WAAY1f,EAAY0U,GAAU,oBAC9B1T,KAAKwc,aAAe,GACpBxc,KAAKmd,kBAAoB,GACzB,IAAK,IAAI/e,EAAI,EAAGA,EAAI,GAAIA,IACpB4B,KAAKwc,aAAa7P,KAAK,GACvB3M,KAAKmd,kBAAkBxQ,MAAK,GAEhC3M,KAAKhB,WAAaA,EAClBgB,KAAKwc,aAAa,IAAMxd,EACxBgB,KAAK0T,SAAWA,E,oDAGhB5O,QAAQD,IAAI,qBACZ,IAAK,IAAIzG,EAAI,EAAGA,EAAI,GAAIA,IACpB0G,QAAQD,IAAI,IAAMzG,EAAEmG,WAAYvE,KAAK0T,SAAStV,GAAI4B,KAAKwc,aAAape,GAAGmG,YAAavE,KAAKwc,aAAape,KAAO,GAAGmG,SAAS,IAAIuK,eAEjIhK,QAAQD,IAAI,Y,2BAEXuY,GACD,OAAuB,IAAnBA,EACO,EAGApd,KAAKwc,aAAaY,K,4BAG3BA,EAAgB1c,GAClBV,KAAKwc,aAAaY,GAAkB1c,EACpCV,KAAKmd,kBAAkBC,IAAkB,I,yCAGzC,OAAO,K,6CAIP,IADA,IAAIC,EAASrd,KAAKmd,kBAAkBjH,QAC3B9X,EAAI,EAAGA,EAAI4B,KAAKsd,mBAAoBlf,IACzC4B,KAAKmd,kBAAkB/e,IAAK,EAEhC,OAAOif,I,8BAGP,IAAK,IAAIjf,EAAI,EAAGA,EAAI,GAAIA,IACpB4B,KAAKwc,aAAape,GAAK,EACvB4B,KAAKmd,kBAAkB/e,IAAK,EAEhC4B,KAAKwc,aAAa,IAAMxc,KAAKhB,e,KAI/B2f,G,kDAkBF,WAAY3f,EAAYmb,EAAWnE,GAAgB,2BAC/C,gBACK/I,yBAA2B,EAChC,EAAKX,6BAA+B,EACpC,EAAKkR,2BAA6B,EAClC,EAAKxH,eAAiBA,EACtB,EAAK4E,GAAK,EACV,EAAK5b,WAAaA,EAClB,EAAKmb,UAAYA,EACjB,EAAK3N,aAAe,IAAIkS,GAAiB1f,EAAYgX,EAAetC,UACpE,EAAKlP,OAAS,IAAIiZ,MAAMze,GACxB,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAYZ,IAC5B,EAAKoG,OAAOpG,GAAK,EAZ0B,S,oDAhB/C4B,KAAK4a,GAAK,EACV5a,KAAKwE,OAAS,GACd,IAAK,IAAIpG,EAAI,EAAGA,EAAI4B,KAAKhB,WAAYZ,IACjC4B,KAAKwE,OAAOpG,GAAK,EAErB4B,KAAKwM,aAAakR,U,8BAGlB,IAAI3X,EAAM/F,KAAKsN,OAAOtN,KAAK4a,GAAI,GAC/B,OAAY,OAAR7U,EACO,8BAEX/F,KAAK4a,IAAM,EACX5a,KAAKya,QAAUxM,GAAM0P,SAAS5X,GACvB,U,GAhBQsU,IAkCvBA,GAAKS,QAAQb,KAAb,KAA4B,CACxBG,UArdJ,SAAc7U,GAEV,IAAIgO,EAAU,GACVC,EAAe,GAGnBD,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,uFAAwF,8BAC3F,IAAIgN,EAAQtK,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAEzF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAEzF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,KAAMgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAEvF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,KAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MACxH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACtH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAU9e,GAExF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAO,EAAI,GAClI,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9e,GAEzF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACvH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9e,GAEzF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACxH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQgM,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9e,GAEzF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACvH,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,yCAA0C,gBAC7C,IAAI+N,EAAYrL,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM+M,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU7f,GAE3F,OADAA,EAAK6b,GAAK7b,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IACzC,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,QAAS,EAAG,GAAG+M,cAAc,EAAG7O,GAAUC,WACvD,IAAI6B,GAAS,QAAS,EAAG,IAC1B,+EAAgF,8BACnF,IAAIgO,EAAYtL,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgN,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9f,GAE5F,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyb,UAAU,IAChG,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgN,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9f,GAE5F,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyb,UAAU,IACjG,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOgN,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9f,GAE5F,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KAAOzb,EAAKyb,UAAU,IAChG,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,QAAS,EAAG,KAC1B,sBAAuB,UAC1B,IAAIiO,EAAYvL,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,UAAWiN,EAAW,CAAC,SAAU,CAAC,KAAM,SAAU/f,GAChF,OAAOA,EAAKob,UAAUmE,MAAMvf,OAGhCwU,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,YACnE,wFAAyF,8BAC5F,IAAI8O,EAAQvK,EAAQA,EAAQ7T,OAAS,GAErC8T,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,UAAW,CAAC,IAAM,SAAU/e,GAE1E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,IAC/F,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,QAASiM,EAAO,CAAC,UAAW,CAAC,IAAM,SAAU/e,GAE3E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,IAC/F,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,UAAW,CAAC,KAAO,SAAU/e,GAE3E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAM,EAAI,GAC1G,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,QAASiM,EAAO,CAAC,UAAW,CAAC,KAAO,SAAU/e,GAE5E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAMzb,EAAKyb,UAAU,KAAO,EAAK,EAAI,GACzH,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,UAAW,CAAC,KAAO,SAAU/e,GAE3E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAMzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IACxG,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOiM,EAAO,CAAC,UAAW,CAAC,KAAO,SAAU/e,GAE1E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IACvG,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,OAAQiM,EAAO,CAAC,UAAW,CAAC,KAAO,SAAU/e,GAE3E,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQ,EAAKzb,EAAKyb,UAAU,IACvG,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUI,QAAQkI,QAAQ,GAAI,EAAG,KAC1F,wFAAyF,8BAC5F,IAAI0H,EAAYxL,EAAQA,EAAQ7T,OAAS,GACzC8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOkN,EAAW,CAAC,UAAW,CAAC,IAAO,SAAUhgB,GAI9E,OAHIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MACpFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,IAEvB,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOkN,EAAW,CAAC,UAAW,CAAC,IAAO,SAAUhgB,GAI9E,OAHIA,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MAAQzb,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,MACpFzb,EAAK6b,IAAM7b,EAAKyb,UAAU,IAEvB,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUE,WACnE,iEAAkE,uBACrE,IAAI+P,EAAczL,EAAQA,EAAQ7T,OAAS,GAC3C8T,EAAa7G,KAAK,IAAIkF,GAAY,MAAOmN,EAAa,CAAC,UAAW,CAAC,KAAO,SAAUjgB,GAEhF,OADAA,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAKzb,EAAKyb,UAAU,IAAM,IAC1D,SAGXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,YACnE,gGAAiG,8BACpG,IAAIiQ,EAAa1L,EAAQA,EAAQ7T,OAAS,GAE1C8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAMG,QAAQC,EAAM,GAAI,IAC5D,UAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAMG,QAAQH,GAAM0P,SAAStP,GAAQ,KACzE,UAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAM0P,SAAStP,IACnD,UAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,MAAOoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC/E,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAInM,EAAM,IAC1C,UAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,MAAOoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC/E,IAAIsP,EAAQtP,EAAKuO,OAAOvO,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAI,GACvF,OAAc,OAAVnM,EACO,0BAEXtP,EAAKyN,aAAaO,MAAMhO,EAAKyb,UAAU,GAAIvM,GAAM0P,SAAStP,IACnD,UAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQ,GACZA,EAAM1B,KAAiD,IAA5C5N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,KACjD,IAAI0E,EAAengB,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAC9E,OAAIzb,EAAK8N,OAAOqS,EAAc7Q,GAInB,KAEJ,6BAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQ,GACR3N,EAAQ3B,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAIlD,OAHAnM,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACP3B,EAAK8N,OAAO9N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAInM,GACpE,KAEJ,6BAEXmF,EAAa7G,KAAK,IAAIkF,GAAY,KAAMoN,EAAY,CAAC,UAAW,CAAC,KAAO,SAAUlgB,GAC9E,IAAIsP,EAAQ,GACR3N,EAAQ3B,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAQlD,OAPAnM,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACXA,KAAkB,EAClB2N,EAAM1B,KAAa,IAARjM,GACP3B,EAAK8N,OAAO9N,EAAKyN,aAAaC,KAAK1N,EAAKyb,UAAU,IAAMzb,EAAKyb,UAAU,GAAInM,GACpE,KAEJ,6BAGXkF,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,IAAI+M,cAAc,EAAG7O,GAAUK,UACvD,wCAAyC,eAAe,SAAUe,EAAM1S,EAAMyQ,EAAM6I,EAASxB,GAC5F,IAAIrB,EAAS,CACTsD,aAAc,KACdC,QAAS,KACT/W,MAAO,MAGPA,EAAQ,KACRuY,EAAY1D,EAAU4C,aAAahI,GACvC,QAAkB2F,IAAdmD,EAAyB,CAEzB,GADA/E,EAAOuD,QAAUwB,EAAU,GACN,OAAjBA,EAAU,GACV,OAAO/E,EAEXxT,EAAQuY,EAAU,GAEtB,GAAc,OAAVvY,GAAkB6U,EAAUC,eAAe9F,GAAQrC,MAAO,CAC1D,IAAI6L,EAAa3D,EAAUC,eAAe9F,GAAQrC,MAAMgH,KAAKlE,GAC7D,GAAmB,OAAf+I,QAAyCpD,IAAlBoD,EAAW,KAClCxY,EAAQwY,EAAW,GAAGtM,WAAW,IACrB,IAER,OADAsH,EAAOsD,aAAe,uBAAyB0B,EAAW,GAAK,gBACxDhF,EAInB,GAAc,OAAVxT,QAAgEoV,IAA9CP,EAAUC,eAAe9F,GAAQiJ,SAAwB,CAC3E,IAAIjM,EAAQ6I,EAAUC,eAAe9F,GAAQiJ,SAAStE,KAAKlE,GAC3D,GAAc,OAAVzD,EAAgB,CAChB,IAAIiC,EAAQgI,UAAUwC,QAAQzM,EAAM,KAAO,GACvC0M,EAAgB1M,EAAM,GAC1BhM,EAAQyD,SAASiV,EAAezK,IAGxC,OAAc,OAAVjO,GAAkBkU,MAAMlU,IACxBwT,EAAOsD,aAAP,iCAAgDrH,EAAhD,KACO+D,IAENxT,IAAU,KAASqW,IAAY,GACZ,KAAP,EAARrW,GACDwT,EAAOxT,OAAiB,UAARA,KAAwB,EAGxCwT,EAAOsD,aAAP,gCAA+CrH,EAA/C,KAIJ+D,EAAOsD,aAAP,0BAAyCrH,EAAzC,KAEG+D,MACR,SAAUxT,EAAOqW,GAChB,OAAQrW,GAAS,EAAgB,WAAVqW,MAE3B,IAAIoI,EAAQ5L,EAAQA,EAAQ7T,OAAS,GACrC8T,EAAa7G,KAAK,IAAIkF,GAAY,IAAKsN,EAAO,CAAC,UAAW,CAAC,IAAM,SAAUpgB,GAEvE,OADAA,EAAK6b,GAAK7b,EAAKyb,UAAU,GAClB,SAEXhH,EAAa7G,KAAK,IAAIkF,GAAY,MAAOsN,EAAO,CAAC,UAAW,CAAC,IAAM,SAAUpgB,GAGzE,OAFAA,EAAKyN,aAAaO,MAAM,GAAIhO,EAAK6b,IACjC7b,EAAK6b,GAAK7b,EAAKyb,UAAU,GAClB,SAIXjH,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,gEAAiE,uBACpE,IAAI0N,EAAWhL,EAAQA,EAAQ7T,OAAS,GACxC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM0M,EAAU,CAAC,SAAU,SAAU,CAAC,EAAK,KAAO,SAAUxf,GAE1F,OAAO,SAGXwU,EAAQ5G,KAAK,IAAI4E,GAAO,CACpB,IAAIV,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG+M,cAAc,EAAG7O,GAAUE,UACrD,IAAI4B,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM+M,cAAc,EAAG7O,GAAUC,YACnE,iEAAkE,uBACrE,IAAIwP,EAAWjL,EAAQA,EAAQ7T,OAAS,GACxC8T,EAAa7G,KAAK,IAAIkF,GAAY,KAAM2M,EAAU,CAAC,UAAW,CAAC,IAAM,SAAUzf,GAE3E,OAAO,SAEXyU,EAAa7G,KAAK,IAAIkF,GAAY,KAAM2M,EAAU,CAAC,UAAW,CAAC,IAAM,SAAUzf,GAE3E,OAAO,SAEX,IAAI4U,EAAW,GACfA,EAASjE,GAAQC,WAAa,CAAC,OAC/BgE,EAASjE,GAAQE,SAAW,CAAC,KAC7B+D,EAASjE,GAAQG,OAAS,CAAC,OAC3B8D,EAASjE,GAAQI,cAAgB,CAAC,OAClC6D,EAASjE,GAAQK,YAAc,CAAC,OAChC4D,EAASjE,GAAQT,UAAY,CAAC,KAC9B,IAAI2E,EAAa,GAQjB,OAPAA,EAAU,KAAW1D,GAAUC,KAC/ByD,EAAU,KAAW1D,GAAUE,KAC/BwD,EAAU,OAAa1D,GAAUG,QACjCuD,EAAU,KAAW1D,GAAUI,MAC/BsD,EAAU,KAAW1D,GAAUK,OAC/BqD,EAAU,KAAW1D,GAAUM,OAExB,IAAI8C,GAAe,GAAIC,EAASC,EApXd,GAmXV,CAAC,QAAS,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxJG,EAAUC,GAAY,EAAlG,oNA8FP7U,KAAM4f,GACNpZ,QAAS,I,sBChcPnE,GACI,EADJA,GAEE,EAFFA,GAGE,EAWFge,GAAmB,8BAAM,sCAAN,iKAEnBC,GACA,EADAA,GAEE,EAFFA,GAGG,EAHHA,GAII,EAJJA,GAKI,EALJA,GAME,EAGFC,G,kDAGL,WAAY3gB,GAAQ,IAAD,8BAClB,cAAMA,IAoGP4gB,eAAiB,SAACpgB,GACjB,IAAIW,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAE1B,GAAI9B,GA3HoB,IA2HbA,EAAIwD,mBAA2C,CACzDrC,EAAM+D,iBAEN,IAAIoB,EAAQtG,EAAIwhB,cACZC,EAASzhB,EAAI0hB,WAEjB,GAAkB,UAAdvgB,EAAMiB,IACT,EAAKuf,qBAAqBrb,GAC1BtG,EAAIwhB,cAAgB,QAEhB,GAAoB,IAAhBrgB,EAAMygB,OACd,GAAIH,EAAS,EAAG,CACf,IAAI5f,EAAMyE,EAAM4R,MAAM,EAAGuJ,EAAS,GAAKnb,EAAM4R,MAAMuJ,GAEnDzhB,EAAI0hB,WAAaD,EAAS,EAC1BzhB,EAAIwhB,cAAgB3f,QAGjB,GAAsB,KAAlBV,EAAM0gB,SACd,GAAIJ,EAASnb,EAAM5E,OAAQ,CAC1B,IAAIG,EAAMyE,EAAM4R,MAAM,EAAGuJ,GAAUnb,EAAM4R,MAAMuJ,EAAS,GAExDzhB,EAAI0hB,WAAaD,EAAS,EAC1BzhB,EAAIwhB,cAAgB3f,QAGjB,GAAsB,KAAlBV,EAAM0gB,QACdJ,EAAUA,GAAU,EAAK,EAAIA,EAAS,EACtCzhB,EAAI0hB,WAAaD,OAEb,GAAsB,KAAlBtgB,EAAM0gB,QAAgB,CAC9B,IAAIC,EAAI9hB,EAAIwhB,cAAc9f,OAC1B+f,EAAUA,GAAUK,EAAKA,EAAIL,EAAS,EACtCzhB,EAAI0hB,WAAaI,MAEb,CACJ,IAAI7D,EAAM9c,EAAMiB,IAEV2f,EAAU5gB,EAAM0gB,QAChBG,EAjKgB,IAiKRhiB,EAAIwD,oBAGjBue,EAAU,IAAMA,EAAU,KACzBC,IAAsB,KAAZD,GAA8B,KAAZA,GAC7BA,EAAU,IAAMA,EAAU,IAC1BA,EAAU,IAAMA,EAAU,KAC1BA,EAAU,KAAOA,EAAU,KAC3BA,EAAU,KAAOA,EAAU,QAG3B9D,EAAM3X,EAAM4R,MAAM,EAAGuJ,GAAUxD,EAAM3X,EAAM4R,MAAMuJ,GACjDzhB,EAAIwhB,cAAgBvD,EACpBje,EAAI0hB,WAAcD,EAAS,GAM7B,OAFA,EAAK9gB,MAAMb,UAAUgC,EAAa9B,IAE3B,IAnKU,EAuKnBiiB,kBAAoB,SAACC,EAAU9P,GAC9B,IAIInQ,EAJAH,EAAc,EAAKnB,MAAMW,YAEzBtB,EADO,EAAKW,MAAME,KACPiB,GAIdG,EADGigB,IAAab,GACJ,gBACJa,IAAab,GACT,kBACJa,IAAab,GACT,kBACJa,IAAab,GACT,iBACJa,IAAab,GACT,gBAEA,cAEbrhB,EAAI8G,QAAQ6H,KAAK,yBAAK1M,UAAWA,GAAYmQ,IAC7C,EAAKzR,MAAMb,UAAUgC,EAAa9B,IA3LhB,EA8LnB2hB,qBAAuB,SAACrb,GACvB,IAAIjF,EAAW,EAAKV,MAAMW,YACtBtB,EAAM,EAAKW,MAAME,KAAKQ,GAEtBN,EAAOf,EAAIe,KAnNS,IAqNpBf,EAAIwD,oBACP8C,EAAQH,SAASG,EAAO,IACxB,EAAK6b,WAAWrT,iBAAiB/N,EAAMuF,GACvC,EAAK2b,kBAAkBZ,GAAiB,MAAQ/a,IAvNzB,IAwNbtG,EAAIwD,qBACd,EAAK2e,WAAW/T,oBAAoBrN,EAAMuF,GAC1C,EAAK2b,kBAAkBZ,GAAiB,MAAQ/a,IAGjDtG,EAAIwD,mBA/NoB,EAiOxB,EAAK4e,mBACL,EAAKzhB,MAAMb,UAAUuB,EAAUrB,IAhNb,EAmNnBoiB,iBAAmB,WAKlB,IAJA,IAAIpiB,EAAM,EAAKW,MAAME,KAAK,EAAKF,MAAMW,aAEjC+gB,EAAUriB,EAAIe,KAAKyN,aAAa8T,uBAE5BliB,EAAI,EAAGA,EAAIJ,EAAIye,iBAAiB/c,SAAUtB,EAC7CiiB,EAAQjiB,GACXJ,EAAIye,iBAAiBre,GA9OI,MA+OjBJ,EAAIye,iBAAiBre,KAC7BJ,EAAIye,iBAAiBre,GAjPC,IAqBN,EAgOnBmiB,WAAa,SAACzhB,EAAM0hB,EAAMvD,EAAcwD,EAAUjiB,EAAKkiB,GACtD,IAAIrhB,EAAW,EAAKV,MAAME,KAAKa,OAE3BX,EAAOwc,GAAMlB,KAAKS,QAAQ6F,QAAQniB,EAAKiiB,EAAU,EAAKN,WAAY,IAElES,EAAU,CACb9hB,KAAMA,EACNiB,QAAS2gB,EAAmB3hB,EAAKiX,eAAelC,YAAc0M,EAC9D3b,IAAK,GACLC,QAAS,GACTmY,aAAcA,EACdle,KAAMA,EACN0d,iBAAkB,GAClBlb,cAAeH,GACfnC,gBAAiBT,EACjBghB,cAAe,GACfhe,mBAlQuB,EAmQvBke,WAAY,GAGbkB,EAAQnE,iBAAmBgB,MAAMoD,KAAK,CAAEnhB,OAAQX,EAAKyN,aAAagQ,aAAa9c,SAAU,kBA1Q/D,KA6Q1B,EAAKf,MAAMV,mBAAmBa,EAAM2hB,EAAUjiB,GAE9C,EAAKG,MAAMD,OAAOkiB,GAClB,EAAKjiB,MAAMf,UAAUyB,IA1PH,EA6PnBX,OAAS,SAACI,EAAM0hB,EAAMvD,GACrB,EAAKsD,WAAWzhB,EAAM0hB,EAAMvD,EAAc,KAAM,EAAK6D,iBAAiB,IA9PpD,EAiQnBC,cAAgB,WACf,EAAKR,WAAW,UAAW,GAAI,GAAI,KAAM,EAAKO,iBAAiB,IAlQ7C,EAqQnBE,mBAAqB,WACpB,EAAKT,WAAW,UAAW,GAAI,GAAI,KAAM,SAAS,IAtQhC,EAyQnBU,kBAAoB,WACnB,EAAKV,WAAW,UAAW,GAAI,GAAI,KAAM,QAAQ,IA1Q/B,EA6QnBO,cAAgB,WACf,OAAOvF,GAAMlB,KAAKS,QAAQU,cAAc,IA9QtB,EAiRnB0F,aAAe,SAAC/hB,GACf,IAAIgiB,EAAQ,EAAKC,gBAAgBpY,QAAQmY,MACzC,KAAIA,EAAMzhB,QAAU,GAApB,CAEA,IAAI6Y,EAAO4I,EAAM,GACjB,GAAI,EAAKE,cAAe,CACvB,IAAIviB,EAAOyZ,EAAKzZ,KACZwiB,EAAO/I,EAAKrC,MAAM,EAAGqC,EAAKgJ,MAC1BC,EAAK,IAAIC,WACTC,EAAE,eACNF,EAAGza,iBAAiB,QAAQ,WAE3B,IAAIsH,EAAQ,IAAIsT,WAAW3hB,KAAKkU,QAChCwN,EAAGhjB,OAAOI,EAAM,GAAI2e,MAAMoD,KAAKxS,OAEhCmT,EAAGI,kBAAkBN,OAEjB,CACJ,IAAIxiB,EAAOyZ,EAAKzZ,KACZwiB,EAAO/I,EAAKrC,MAAM,EAAGqC,EAAKgJ,MAC1BC,EAAK,IAAIC,WACTC,EAAE,eACNF,EAAGza,iBAAiB,QAAQ,WAE3B,IAAI8a,EAAM7hB,KAAKkU,OAEfwN,EAAGhjB,OAAOI,EAAM+iB,EAAK,OAEtBL,EAAGM,WAAWR,MA7SG,EAiTnB3f,cAAgB,WACf,EAAK0f,eAAgB,EACrB,EAAKD,gBAAgBpY,QAAQ+Y,SAnTX,EAsTnBngB,cAAgB,WACf,EAAKyf,eAAgB,EACrB,EAAKD,gBAAgBpY,QAAQ+Y,SAxTX,EA2TnBlgB,kBAAoB,WACnB,IAAM/B,EAAc,EAAKnB,MAAMW,YAC3BtB,EAAM,EAAKW,MAAME,KAAKiB,GAEtBsQ,EAAOpS,EAAI+B,QACf,GAAoB,IAAhBqQ,EAAK1Q,OAAT,CAGA,IAAIsiB,EAAKzX,SAAS0X,cAAc,KAC5BX,EAAO,IAAIY,KAAK,CAAC9R,GACrB,CACC3S,KAAM,eAEH0kB,EAAWC,IAAIC,gBAAgBf,GAC/BxiB,EAAOd,EAAIc,KAAO,KACtBkjB,EAAGM,aAAa,OAAQH,GACxBH,EAAGM,aAAa,WAAYxjB,GAC5BkjB,EAAGve,MAAMoI,QAAU,OACnBtB,SAASgY,KAAKC,YAAYR,GAC1BA,EAAGD,QACHxX,SAASgY,KAAKE,YAAYT,KA/UR,EAkVnBlgB,YAAc,WACb,IAAMhC,EAAc,EAAKnB,MAAMW,YAC3BtB,EAAM,EAAKW,MAAME,KAAKiB,GAEtBsQ,EAAOpS,EAAIif,aACXyF,EAAY,IAAIf,WAAWvR,GAC3BkR,EAAO,IAAIY,KAAK,CAACQ,GACrB,CACCjlB,KAAM,6BAEH0kB,EAAWC,IAAIC,gBAAgBf,GAC/Btb,EAAUuE,SAAS0X,cAAc,KACjCnjB,EAAOd,EAAIc,KAAO,OACtBkH,EAAQsc,aAAa,OAAQH,GAC7Bnc,EAAQsc,aAAa,WAAYxjB,GACjCkH,EAAQvC,MAAMoI,QAAU,OACxBtB,SAASgY,KAAKC,YAAYxc,GAC1BA,EAAQ+b,QACRxX,SAASgY,KAAKE,YAAYzc,IApWR,EAuWnBjE,aAAe,WACd,IAAMjC,EAAc,EAAKnB,MAAMW,YAC3BtB,EAAM,EAAKW,MAAME,KAAKiB,GAEtB6iB,EAAY3kB,EAAIif,aAAa/c,KAAI,SAAAyE,GAAI,OAAGA,EAAKJ,SAAS,IAAIqe,SAAS,EAAG,QAAMlV,KAAK,MAEjF4T,EAAO,IAAIY,KAAK,CAACS,GACrB,CACCllB,KAAM,eAEH0kB,EAAWC,IAAIC,gBAAgBf,GAC/Btb,EAAUuE,SAAS0X,cAAc,KACjCnjB,EAAOd,EAAIc,KAAO,OACtBkH,EAAQsc,aAAa,OAAQH,GAC7Bnc,EAAQsc,aAAa,WAAYxjB,GACjCkH,EAAQvC,MAAMoI,QAAU,OACxBtB,SAASgY,KAAKC,YAAYxc,GAC1BA,EAAQ+b,QACRxX,SAASgY,KAAKE,YAAYzc,IAzXR,EA4XnBhE,YAAc,WACb,IAAMlC,EAAc,EAAKnB,MAAMW,YAC3BtB,EAAM,EAAKW,MAAME,KAAKiB,GAEtBsQ,EAAOpS,EAAIe,KAAKyF,OAChBke,EAAY,IAAIf,WAAWvR,GAC3BkR,EAAO,IAAIY,KAAK,CAACQ,GACrB,CACCjlB,KAAM,6BAEH0kB,EAAWC,IAAIC,gBAAgBf,GAC/Btb,EAAUuE,SAAS0X,cAAc,KACjCnjB,EAAOd,EAAIc,KAAO,OACtBkH,EAAQsc,aAAa,OAAQH,GAC7Bnc,EAAQsc,aAAa,WAAYxjB,GACjCkH,EAAQvC,MAAMoI,QAAU,OACxBtB,SAASgY,KAAKC,YAAYxc,GAC1BA,EAAQ+b,QACRxX,SAASgY,KAAKE,YAAYzc,IA9YR,EAiZnB6c,QAAU,WACT,IAAI/iB,EAAc,EAAKnB,MAAMW,YAEzBtB,EADO,EAAKW,MAAME,KACPiB,GACf9B,EAAI6G,IAAM,GACV7G,EAAI8G,QAAU,GACd9G,EAAIye,iBAAmBgB,MAAMoD,KAAK,CAAEnhB,OAAQ1B,EAAIye,iBAAiB/c,SAAU,kBA7ajD,KA8a1B1B,EAAIuD,cAAgBH,GAEpBpD,EAAIwhB,cAAgB,GACpBxhB,EAAIwD,mBA7aoB,EA8axBxD,EAAI0hB,WAAa,EAEjB,EAAK/gB,MAAMb,UAAUgC,EAAa9B,IA9ZhB,EAianB0f,MAAQ,WACP,IAAI5d,EAAc,EAAKnB,MAAMW,YAClB,EAAKX,MAAME,KACPiB,GAEXf,KAAK2e,QACT,EAAKmF,WAvaa,EA0anBC,WAAa,WACZ,IAAIhjB,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAE1B,GAhcwB,IAgcpB9B,EAAIwD,mBAAR,CAGIxD,EAAIuD,gBAAkBH,IACzB,EAAK2hB,aAEN,IAAIhkB,EAAQf,EAAIe,KAIhB,IAFAf,EAAIuD,cAAgBH,KAEP,CACZ,IAAI4hB,EAAQjkB,EAAKikB,QACjB,GAAc,OAAVA,EAAgB,CACnB,EAAK/C,kBAAkBZ,GAAmB2D,GAC1ChlB,EAAIuD,cAAgBH,GACpB,MAGD,IAAI6hB,EAASlkB,EAAKkkB,SAElB,GAAe,OAAXA,EAAiB,CACpB,EAAKhD,kBAAkBZ,GAAmBD,IAC1CphB,EAAIuD,cAAgBH,GACpB,MAGApD,EAAI6G,IAAI8H,KAAKsW,GAGd,IAAIC,EAAUnkB,EAAKmkB,UACnB,GAAgB,OAAZA,EAAkB,CACL,SAAZA,GAAkC,SAAZA,IACzB,EAAKjD,kBAAkBZ,GAAmB6D,GAC1CllB,EAAIuD,cAAgBH,IAErB,OAIF,EAAKgf,mBACL,EAAKzhB,MAAMb,UAAUgC,EAAa9B,KAtdhB,EAydnBmlB,aAAe,WACd,IAAIrjB,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAE1B,GA/ewB,IA+epB9B,EAAIwD,mBAAR,CAGIxD,EAAIuD,gBAAkBH,IACzB,EAAK2hB,aAEN,IAAIhkB,EAAOf,EAAIe,KAEff,EAAIuD,cAAgBH,GAEpB,IAAI4hB,EAAQjkB,EAAKikB,QACjB,GAAc,OAAVA,EAIH,OAHA,EAAK/C,kBAAkBZ,GAAmB2D,GAC1ChlB,EAAIuD,cAAgBH,QACpB,EAAKzC,MAAMb,UAAUgC,EAAa9B,GAInC,IAAIilB,EAASlkB,EAAKkkB,SAElB,GAAe,OAAXA,EAIH,OAHA,EAAKhD,kBAAkBZ,GAAmBD,IAC1CphB,EAAIuD,cAAgBH,QACpB,EAAKzC,MAAMb,UAAUgC,EAAa9B,GAIlCA,EAAI6G,IAAI8H,KAAKsW,GAGd,IAAIC,EAAUnkB,EAAKmkB,UACH,OAAZA,GACa,SAAZA,GAAkC,SAAZA,IACzB,EAAKjD,kBAAkBZ,GAAmB6D,GAC1CllB,EAAIuD,cAAgBH,IAItB,EAAKgf,mBACL,EAAKzhB,MAAMb,UAAUgC,EAAa9B,KApgBhB,EAugBnB+kB,WAAa,WACZ,IAAIjjB,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GACtBD,EAAM7B,EAAI+B,QACd,GAAY,KAARF,EAAJ,CAIA,IAAId,EAAOf,EAAIe,KACf,EAAK2e,QACL,IAAInI,EAAY,IAAIgG,GAAM5E,UAAU5X,EAAKiX,eAAgBuF,GAAMjM,WAAWC,QAEtEuH,EAAQyE,GAAMvG,KAAKoO,cAAcvjB,GAEjCwjB,EAAW9N,EAAUnT,SAAS0U,EAAO,GACzC,GAAwB,IAApBuM,EAAS3jB,OACZ,IAAK,IAAItB,KAAKilB,EAAU,CACvB,IAAIre,EAAOqe,EAASjlB,GAEpB,YADA,EAAK6hB,kBAAkBZ,GAAmB,8BAAM,qDAA2Bra,EAAKyJ,OAAhC,KAAN,IAAoDzJ,EAAK+Q,cAAzD,MAI5C,IAAIuD,EAAO,KACPgK,EAAc,EAClB,EAAG,CAEF,GAAoB,KADpBhK,EAAO/D,EAAUnT,SAAS0U,EAAOwM,IACxB5jB,OACR,IAAK,IAAItB,KAAKkb,EAAM,CACnB,IAAItU,EAAOsU,EAAKlb,GAEhB,YADA,EAAK6hB,kBAAkBZ,GAAmB,8BAAM,qDAA2Bra,EAAKyJ,OAAhC,KAAN,IAAoDzJ,EAAK+Q,cAAzD,MAI5CuN,GAAe,QACE,OAAThK,GAET,IAAI9G,EAAcsE,EAAM5W,KAAI,SAAA8E,GAAI,OAAGA,EAAKwN,eAAa+Q,QAAO,SAACvP,EAAGC,GAAJ,OAASD,EAAEwP,OAAOvP,KAAI,IAClFlV,EAAK8N,OAAO,EAAG2F,GAEf,EAAK4N,mBAIJpiB,EAAIif,aAAezK,EACnB,EAAKyN,kBAAkBZ,GAAqB,8BAAM,wCAAN,yBAM7C,EAAK1gB,MAAMb,UAAUgC,EAAa9B,KAzjBhB,EA4jBnBylB,qBAAuB,WACtB,IAAI3jB,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAE1B,GAAK9B,EAAL,CAGA,IAAIM,EAAY,EAAKK,MAAMsc,iBAAiB3c,UACxColB,EAAW,EAAK/kB,MAAMsc,iBAAiBzc,IACvCD,EAAc,EAAKI,MAAMsc,iBAAiB1c,YAE9CP,EAAIc,KAAOR,EAEX,IAAIqlB,EAAWD,IAAa1lB,EAAIiB,gBAC5B2kB,EAAWrlB,IAAgBP,EAAIe,KAAKC,WAEpC6kB,GAAgB,EAEpB,GAAIF,GAAYC,EACQrI,GAAMlB,KAAKS,QAAQb,KACrByJ,KACpBG,GAAgB,EAChB7lB,EAAIe,KAAOwc,GAAMlB,KAAKS,QAAQ6F,QAAQ+C,EAAUnlB,EAAa,EAAK4hB,WAAY,IAC9EniB,EAAIiB,gBAAkBykB,EACtB,EAAKb,WAGDgB,GACJ,EAAK5D,kBAAkBZ,GAAmB,8BAAM,sCAAN,sBAAwCqE,EAAxC,MAI5C,EAAK/kB,MAAMb,UAAUgC,EAAa9B,GAE9B6lB,IACCF,GACH,EAAK1D,kBAAkBZ,GAAqB,8BAAM,yCAAN,+BAAoDqE,EAApD,MAEzCE,GACH,EAAK3D,kBAAkBZ,GAAqB,8BAAM,yCAAN,uCAA4D9gB,EAA5D,SAnmB5B,EAumBnBulB,iBAAmB,SAAC3kB,GACnB2H,OAAOC,iBAAiB,YAAa,EAAKgd,aAC1Cjd,OAAOC,iBAAiB,UAAW,EAAKid,kBAzmBtB,EA4mBnBC,QAAU,SAAC9kB,GACV,IAAI+kB,EAAI/kB,EAAMglB,MACVC,EAAItd,OAAOud,YAAc9Z,SAAS+Z,gBAAgBC,aAAeha,SAASgY,KAAKgC,aACnFL,EAAIE,EAAIF,GAEA,IACPA,EAAI,IAEIA,EAAIE,EAAI,MAChBF,EAAIE,EAAI,KAGT,EAAKjhB,SAAS,CAACqhB,QAASN,KAxnBN,EA2nBnBD,QAAU,SAAC9kB,GACV,IAAI+kB,EAAI/kB,EAAMglB,MACVC,EAAItd,OAAOud,YAAc9Z,SAAS+Z,gBAAgBC,aAAeha,SAASgY,KAAKgC,aACnFL,EAAIE,EAAIF,GAEA,IACPA,EAAI,IAEIA,EAAIE,EAAI,MAChBF,EAAIE,EAAI,KAGT,EAAKjhB,SAAS,CAACqhB,QAASN,KAvoBN,EA0oBnBO,QAAU,SAACtlB,GACV,IAAIulB,EAAIvlB,EAAMwlB,MAAQ,GAClBC,EAAI9d,OAAO+d,aAAeta,SAAS+Z,gBAAgBQ,cAAgBva,SAASgY,KAAKuC,cACrFJ,EAAKE,EAAIF,GAED,GACPA,EAAI,GAEIA,EAAIE,EAAI,KAChBF,EAAIE,EAAI,IAGT,EAAKzhB,SAAS,CAAC4hB,QAASL,KAtpBN,EAypBnBX,YAAc,SAAC5kB,GACd,EAAK8kB,QAAQ9kB,IA1pBK,EA6pBnB6kB,gBAAkB,SAAC7kB,GAClB,EAAK8kB,QAAQ9kB,GACb2H,OAAOW,oBAAoB,YAAa,EAAKsc,aAC7Cjd,OAAOW,oBAAoB,UAAW,EAAKuc,kBAhqBzB,EAmqBnBgB,iBAAmB,SAAC7lB,GACnB2H,OAAOC,iBAAiB,YAAa,EAAKke,aAC1Cne,OAAOC,iBAAiB,UAAW,EAAKme,kBArqBtB,EAwqBnBD,YAAc,SAAC9lB,GACd,EAAKslB,QAAQtlB,IAzqBK,EA4qBnB+lB,gBAAkB,SAAC/lB,GAClB,EAAKslB,QAAQtlB,GACb2H,OAAOW,oBAAoB,YAAa,EAAKwd,aAC7Cne,OAAOW,oBAAoB,UAAW,EAAKyd,kBA/qBzB,EAkrBnBjjB,aAAe,WACd,EAAKtD,MAAMpB,oBAAmB,IAnrBZ,EAsrBnB2E,SAAW,WACV,EAAKvD,MAAMjB,gBAAe,IAvrBR,EA0rBnByE,UAAa,WACZgjB,MAAM,GACN,EAAKxmB,MAAMhB,iBAAgB,IAzrB3B,EAAKgB,MAAMymB,WAAW,CACrBC,UAAW,CACT,CAAEvmB,KAAM,UAAW0hB,KAAM,OAE3Bjb,QAAS,CAAE+f,gDA2CZ,EAAK9nB,MAAQ,CACZgnB,QAAS,IACTO,QAAS,KAGV,EAAK3D,gBAAkBze,IAAM4I,YAE7BzE,OAAOC,iBAAiB,QAAS,EAAKwY,gBAEtC,EAAK5gB,MAAM4mB,0BAA0BC,GAAgB,MAErD,EAAKrF,WAAa,IAAI5E,GAAMpP,UAC5B,EAAKgU,WAAWvS,SAAW,WAC1B,IAAI5P,EAAM,EAAKW,MAAME,KAAK,EAAKF,MAAMW,aACjCtB,IACHA,EAAIwD,mBAlFkB,IAsFxB,EAAK2e,WAAWtS,YAAc,WAC7B,IAAI7P,EAAM,EAAKW,MAAME,KAAK,EAAKF,MAAMW,aACjCtB,IACHA,EAAIwD,mBAxFkB,IA4FxB,EAAK2e,WAAWhT,UAAY,SAACsB,GAC5B,EAAKwR,kBAAkBZ,GAAoB,MAAQ5Q,IAGpD,EAAK0R,WAAWxS,aAAe,SAACqC,GAC/B,EAAKiQ,kBAAkBZ,GAAoB,MAAQrP,IAGpD,EAAKmQ,WAAWrS,WAAa,WAC5B,IAAIhO,EAAc,EAAKnB,MAAMW,YACzBtB,EAAM,EAAKW,MAAME,KAAKiB,GAErB9B,IAGLA,EAAIuD,cAAgBH,GAEpB,EAAK6e,kBAAkBZ,GAAqB,gCAE5C,EAAK1gB,MAAMb,UAAUgC,EAAa9B,KAGnC,EAAK+iB,gBAlGa,E,qDAgsBlB,IAAIjhB,EAAcE,KAAKrB,MAAMW,YACzBtB,EAAMgC,KAAKrB,MAAME,KAAKiB,GAEtB2lB,EAAWzlB,KAAKrB,MAAME,KAAKa,OAAS,EACpCuF,GAAa,EAKjB,OAHIjH,IACHiH,EAztBuB,IAytBVjH,EAAIwD,oBAGjB,kBAAC,IAAMkkB,SAAP,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACC9c,gBAAiB3D,EACjBsE,OAAQvJ,KAAK+gB,cACbvX,QAASxJ,KAAK2B,cACd8H,QAASzJ,KAAK6B,kBACd6H,OAAQ1J,KAAK+iB,WACbnZ,OAAQ5J,KAAK8iB,WACbnZ,QAAS3J,KAAKmjB,eACf,kBAAC,EAAD,CACC/gB,SAAUpC,KAAK+iB,WACf1gB,SAAUrC,KAAK8iB,WACfxgB,WAAYtC,KAAKmjB,aACjBnhB,YAAahC,KAAKgC,YAClBF,YAAa9B,KAAK8B,YAClBC,aAAc/B,KAAK+B,aACnBN,kBAAmBzB,KAAKghB,mBACxBtf,iBAAkB1B,KAAKihB,kBACvBtf,cAAe3B,KAAK2B,cACpBC,cAAe5B,KAAK4B,cACpBC,kBAAmB7B,KAAK6B,qBAEvB4jB,GAAY,yBAAKxlB,UAAU,WAC5B,6BACC,4BAAI,kBAAC,IAAD,CAAWpC,GAAG,iBAAd,sBACJ,2BAAG,kBAAC,IAAD,CAAWA,GAAG,oBAAd,+HACH,4BAAQoC,UAAU,SAASE,QAASH,KAAK+gB,eAAe,kBAAC,IAAD,CAAWljB,GAAG,iBAAd,cACxD,4BAAQoC,UAAU,SAASE,QAASH,KAAK2B,eAAe,kBAAC,IAAD,CAAW9D,GAAG,uBAAd,kBACxD,4BAAQoC,UAAU,SAASE,QAASH,KAAK4B,eAAe,kBAAC,IAAD,CAAW/D,GAAG,qBAAd,kBAGzD4nB,GAAY,yBAAKxlB,UAAU,OAAOwD,MAAO,CAACkiB,oBAAoB,QAAD,OAAU3lB,KAAKxC,MAAMgnB,QAArB,MAAkCoB,iBAAiB,aAAD,OAAe5lB,KAAKxC,MAAMunB,QAA1B,SAC/G,kBAAC,EAAD,CAAYnkB,YAAaqE,EAAYvG,OAAQsB,KAAK+gB,gBAClD,kBAAC,EAAD,CAAgBxd,gBAAiBvD,KAAKglB,iBAAkB/kB,UAAU,gBACjE,kBAAC,EAAD,CAAcgF,WAAYA,EAAYX,MAAOtG,EAAIwhB,gBACjD,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAED,kBAAC,EAAD,CAAgBjc,gBAAiBvD,KAAK8jB,iBAAkB7jB,UAAU,cACjE,kBAAC,GAAD,CAAeob,cAAerb,KAAKyjB,uBACnC,kBAAC,GAAD,MACA,kBAAC,GAAD,QAGF,2BAAOhmB,KAAK,OAAO8C,SAAUP,KAAKkhB,aAAclV,IAAKhM,KAAKohB,uB,GA5vB5CpgB,aAoxBHuB,eACdtB,aAnBuB,SAAAzD,GACvB,MAAO,CACNqB,KAAMrB,EAAMqB,KACZS,YAAa9B,EAAM8B,YACnB2b,iBAAkBzd,EAAMyd,qBAIC,SAAC/Z,EAAUC,GAAX,MAAyB,CACnDzC,OAAQ,SAACV,GAAD,OAASkD,E5BlyBI,SAAAlD,GAAG,MAAK,CAC1BP,KAAMH,EACNU,O4BgyBuBU,CAAOV,KACjCF,UAAW,SAACC,EAAOC,GAAR,OAAgBkD,EAASpD,EAAUC,EAAOC,KACrDJ,UAAW,SAACC,GAAD,OAAQqD,EAAStD,EAAUC,KACtCI,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAa8C,EAASjD,EAAmBC,EAAGC,EAAGC,KACnEV,eAAgB,SAAC8E,GAAD,OAAatB,EAASxD,EAAe8E,KACrD7E,gBAAiB,SAAC6E,GAAD,OAAatB,EAASvD,EAAgB6E,KACvDjF,mBAAoB,SAACiF,GAAD,OAAatB,EAAS3D,EAAmBiF,QAI7DvB,CAEEqe,K,kBCnzBYuG,GA1BI,WAAyB,IAAxBroB,EAAuB,uDAAf,GAAIsoB,EAAW,uCACvC,OAAQA,EAAOroB,MACX,IAAK,UACD,MAAM,GAAN,oBACOD,GADP,CAEIsoB,EAAO9nB,MAEf,IAAK,aACD,OAAOR,EAAM0C,KAAI,SAAC6lB,EAAGhoB,GACjB,OAAIA,IAAU+nB,EAAO/nB,MACV8b,OAAOmM,OAAO,GAAID,EAAGD,EAAO9nB,KAGlC+nB,KAGb,IAAK,aACD,MAAM,GAAN,oBACOvoB,EAAM0Y,MAAM,EAAG4P,EAAOjoB,KAD7B,aAEOL,EAAM0Y,MAAM4P,EAAOjoB,GAAK,KAEnC,QACI,OAAOL,ICbJyoB,GATY,WAAwB,IAAvBzoB,EAAsB,uDAAd,EAAGsoB,EAAW,uCAC9C,OAAQA,EAAOroB,MACX,IAAK,aACD,OAAOqoB,EAAOjoB,GAClB,QACI,OAAOL,ICDJ0oB,GAJe,WAAyB,IAAxB1oB,EAAuB,uDAAf,GACnC,OAAOA,GCQI2oB,GATgB,WAAyB,IAAxB3oB,EAAuB,uDAAf,GAAIsoB,EAAW,uCACnD,OAAQA,EAAOroB,MACX,IAAK,0BACD,OAAOqoB,EAAOznB,QAClB,QACI,OAAOb,I,QCoBJyoB,GAzBY,WAGZ,IAHazoB,EAGd,uDAHsB,CAChCyO,UAAU,EACVvG,MAAM,GACPogB,EAAW,uCACV,OAAQA,EAAOroB,MACX,IAAK,mBACD,OAAO,6BACAD,GADP,IAEIkI,KAAMogB,EAAOtoB,QAErB,IAAK,oBACD,OAAO,6BACAA,GADP,IAEIkJ,MAAOof,EAAOtoB,QAEtB,IAAK,uBACD,OAAO,6BACAA,GADP,IAEIyO,SAAU6Z,EAAOtoB,QAEzB,QACI,OAAOA,ICbJ4oB,gBAAgB,CAC3BvnB,QACAS,eACA+mB,mBACApL,oBACAxV,oBACA6gB,SAAUC,MCARjP,GAAQkP,aAEVC,GACA,GAEA3f,OAAO4f,8BAAgC5f,OAAO4f,gCAKlDC,IAASC,OACL,kBAAC,IAAD,CAAkBtP,MAAOA,IACrB,kBAAC,IAAD,CAAUA,MAAOA,IACb,kBAAC,GAAD,QAIR/M,SAASK,eAAe,W","file":"static/js/main.d8b0a5da.chunk.js","sourcesContent":["export const Actions = {\n    SELECT_TAB: 'SELECT_TAB',\n    ADD_TAB: 'ADD_TAB',\n    UPDATE_TAB: 'UPDATE_TAB',\n    DELETE_TAB: 'DELETE_TAB',\n    UPDATE_PROJECT_SETTINGS: 'UPDATE_PROJECT_SETTINGS',\n    SET_HELP_VISIBLE: 'SET_HELP_VISIBLE',\n    SET_ABOUT_VISIBLE: 'SET_ABOUT_VISIBLE',\n    SET_SETTINGS_VISIBLE: 'SET_SETTINGS_VISIBLE'\n};\n\nexport const setSettingsVisible = (state) => ({\n    type: Actions.SET_SETTINGS_VISIBLE,\n    state\n});\n\nexport const setHelpVisible = (state) => ({\n    type: Actions.SET_HELP_VISIBLE,\n    state\n});\n\nexport const setAboutVisible = (state) => ({\n    type: Actions.SET_ABOUT_VISIBLE,\n    state\n});\n\nexport const selectTab = id => ({\n    type: Actions.SELECT_TAB,\n    id\n});\n\nexport const addTab = tab => ({\n    type: Actions.ADD_TAB,\n    tab\n});\n\nexport const updateTab = (index, tab) => ({\n    type: Actions.UPDATE_TAB,\n    index,\n    tab\n});\n\nexport const deleteTab = id => ({\n    type: Actions.DELETE_TAB,\n    id\n});\n\nexport const setProjectSettings = (n, s, i) => ({\n    type: Actions.UPDATE_PROJECT_SETTINGS,\n    payload: {\n        file_name: n,\n        memory_size: s,\n        isa: i\n    }\n})","import React, { Component } from 'react'\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/theme-github';\n\nimport { selectTab, deleteTab, updateTab, setProjectSettings } from \"../actions\"\nimport { connect } from 'react-redux';\n\nclass TextEditor extends Component {\n\taddTab = () => {\n\t\tthis.props.addTab();\n\t}\n\t\n\thandleTabChange = (id) => {\n\t\tthis.props.selectTab(id);\n\t\tlet tab = this.props.tabs[id];\n\n\t\tif (tab) {\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\n\t\t}\n\t}\n\n\thandleTabClose = (event, id) => {\n\t\tevent.stopPropagation();\n\n\t\tlet selected = this.props.selectedtab;\n\t\tif (selected >= id)\n\t\t\tselected -= 1;\n\n\t\tselected = Math.min(Math.max(selected, 0), this.props.tabs.length - 1);\n\n\t\tthis.props.selectTab(selected);\n\n\t\tlet tab = this.props.tabs[selected];\n\n\t\tif (tab) {\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\n\t\t}\n\n\t\tthis.props.deleteTab(id);\n\t}\n\n\tsetEditorValue = (val) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\t\ttab.content = val;\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\trender() {\n\t\tlet tabs = this.props.tabs;\n\t\t\n\t\treturn (\n\t\t\t<main id=\"text_editor\" className=\"text_editor\">\n\t\t\t\t<ul className=\"page_tabs\">\n\t\t\t\t\t{tabs.map((tab, id) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t<li onClick={() => this.handleTabChange(id)} key={id} className={(this.props.selectedtab === id) ? \"selected\" : \"\"}>\n\t\t\t\t\t\t\t<span>{tab.name}</span>\n\t\t\t\t\t\t\t<div onClick={(event) => this.handleTabClose(event, id)}></div>\n\t\t\t\t\t\t</li>);\n\t\t\t\t\t})}\n\t\t\t\t\t<li className=\"add_tab\" onClick={this.addTab}></li>\n\t\t\t\t</ul>\n\t\t\t\t{<AceEditor\n\t\t\t\t\tmode=\"java\"\n\t\t\t\t\ttheme=\"github\"\n\t\t\t\t\tonChange={this.setEditorValue}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"\"\n\t\t\t\t\tname=\"editor_area\"\n\t\t\t\t\tclassName=\"editor_area\"\n\t\t\t\t\tvalue={tabs[this.props.selectedtab].content}\n\t\t\t\t\treadOnly={this.props.is_disabled}\n\t\t\t\t\teditorProps={{$blockScrolling: Infinity}}\n\t\t\t\t/>}\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nconst stateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab\n\t};\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n\tselectTab: (id) => dispatch(selectTab(id)),\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\n\tdeleteTab: (id) => dispatch(deleteTab(id)),\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\n})\n\nexport default connect(\n\tstateToProps,\n\tdispatchToProps\n\t)(TextEditor);","import React, { Component } from 'react';\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport { connect } from 'react-redux';\nimport { setSettingsVisible, setHelpVisible, setAboutVisible } from \"../actions\"\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nconst CONSOLE_INPUT_NONE  = 0;\n\nclass Navigation extends Component {\n\trender() {\n\t\tlet assemble_css = \"\";\n\t\tconst tab  = this.props.tabs[this.props.selectedtab];\n\n\t\tif (tab) {\n\t\t\tif (tab.runningStatus === SimulatingStatus.Stopped) {\n\t\t\t\tassemble_css = \" assemble_ready\";\n\t\t\t}\n\n\t\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE) {\n\t\t\t\tassemble_css += \" simulate_prevent_input\";\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<nav id=\"navigation\" className=\"navigation\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"oak_logo\">\n\t\t\t\t\t\t<ul className=\"drop_down\">\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabRiscv}><Translate id=\"menus.add_tab_riscv\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabMips}><Translate id=\"menus.add_tab_mips\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadAsm}><Translate id=\"menus.load_assembly\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadBin}><Translate id=\"menus.load_binary\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleDownloadAsm}><Translate id=\"menus.download_assembly\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.downloadBin}><Translate id=\"menus.download_binary\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.downloadBinH}><Translate id=\"menus.download_binary_h\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.downloadRam}><Translate id=\"menus.download_memory\" /></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onClick={this.props.showSettings}><Translate id=\"menus.settings\" /></li>\n\t\t\t\t\t<li onClick={this.props.showHelp}><Translate id=\"menus.help\" /></li>\n\t\t\t\t\t<li onClick={this.props.showAbout}><Translate id=\"menus.about\" /></li>\n\t\t\t\t</ul>\n\n\t\t\t\t<div className=\"buttons_right\">\n\t\t\t\t\t<button className={`assemble`} onClick={this.props.assemble}></button>\n\t\t\t\t\t<button className={`simulate${assemble_css}`} onClick={this.props.simulate}></button>\n\t\t\t\t\t<button className={`simulate_step${assemble_css}`} onClick={this.props.stepbystep}></button>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n};\n\nconst stateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\tshowHelp: (visible) => dispatch(setHelpVisible(visible)),\n\tshowAbout: (visible) => dispatch(setAboutVisible(visible)),\n\tshowSettings: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n\tconnect(\n\t\tstateToProps,\n\t\tappDispatchToProps\n\t)(\n\t\tNavigation\n\t)\n);","import React, { Component } from 'react'\n\nexport default class PanelContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: 0\n        };\n    }\n    \n    handleClickTab(e, key) {\n        e.preventDefault();\n        this.setState({selected: key});\n    }\n\n    renderTabs = () => {\n        return (\n            <ul className=\"panel_tabs\">\n                {React.Children.map(this.props.children, (child, i) => \n                    <li className={(this.state.selected === i) ? \"selected\": \"\"} key={child.type.display_name} onClick={(e) => this.handleClickTab(e, i)}>\n                        {child.type.display_name}\n                    </li>\n                )}\n            </ul>\n        );\n    }\n    \n    render() {\n        const { children } = this.props;\n        const childrenProps = React.Children.map(children, (child, id) => {\n            return (this.state.selected === id) && React.cloneElement(child);\n        });\n        return (\n            <div id=\"panel_container\" className={`panel_container ${this.props.className}`}>\n                <div onMouseDown={this.props.handleStartDrag} className=\"panel_drag\"></div>\n                {this.renderTabs()}\n                {childrenProps}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Select extends Component {\n    render() {\n        return (\n            <div className=\"select_group\">\n                <select onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(images/icons/input_select_arrow.svg), url(${this.props.icon})`}}>\n                    {this.props.children}\n                </select>\n                <label className=\"group_label\">{this.props.placeholder}</label>\n            </div>\n        );\n    }\n}\n","export function padNumber(str, length) {\n    var padded = str;\n    for (var i = 0; i < length - str.length; i++)\n    {\n        padded = \"0\" + padded;\n    }\n    return padded;\n};\n    \nexport function parseToFloat(num) {\n    return num;\n};\n\n// From Jonas Raoni Soares Silva, JSFromHell states\n//          that code can be redistributed and modified\n//          as long as original credits are kept.\n// http://jsfromhell.com/classes/binary-parser\nexport function encodeFloat(number) {\n    return number;\n    /*var n = +number,\n        status = (n !== n) || n === -Infinity || n == +Infinity ? n : 0,\n        exp = 0,\n        len = 281, // 2 * 127 + 1 + 23 + 3,\n        bin = new Array(len),\n        signal = (n = status !== 0 ? 0 : n) < 0,\n        n = Math.abs(n),\n        intPart = Math.floor(n),\n        floatPart = n - intPart,\n        i, lastBit, rounded, j, exponent;\n\n    if (status !== 0) {\n        if (n !== n) {\n            return 0x7fc00000;\n        }\n        if (n === Infinity) {\n            return 0x7f800000;\n        }\n        if (n === -Infinity) {\n            return 0xff800000\n        }\n    }\n\n    i = len;\n    while (i) {\n        bin[--i] = 0;\n    }\n\n    i = 129;\n    while (intPart && i) {\n        bin[--i] = intPart % 2;\n        intPart = Math.floor(intPart / 2);\n    }\n\n    i = 128;\n    while (floatPart > 0 && i) {\n        (bin[++i] = ((floatPart *= 2) >= 1) - 0) && --floatPart;\n    }\n\n    i = -1;\n    while (++i < len && !bin[i]);\n\n    if (bin[(lastBit = 22 + (i = (exp = 128 - i) >= -126 && exp <= 127 ? i + 1 : 128 - (exp = -127))) + 1]) {\n        if (!(rounded = bin[lastBit])) {\n            j = lastBit + 2;\n            while (!rounded && j < len) {\n                rounded = bin[j++];\n            }\n        }\n\n        j = lastBit + 1;\n        while (rounded && --j >= 0) {\n            (bin[j] = !bin[j] - 0) && (rounded = 0);\n        }\n    }\n    i = i - 2 < 0 ? -1 : i - 3;\n    while(++i < len && !bin[i]);\n    (exp = 128 - i) >= -126 && exp <= 127 ? ++i : exp < -126 && (i = 255, exp = -127);\n    (intPart || status !== 0) && (exp = 128, i = 129, status == -Infinity ? signal = 1 : (status !== status) && (bin[i] = 1));\n\n    n = Math.abs(exp + 127);\n    exponent = 0;\n    j = 0;\n    while (j < 8) {\n        exponent += (n % 2) << j;\n        n >>= 1;\n        j++;\n    }\n\n    var mantissa = 0;\n    n = i + 23;\n    for (; i < n; i++) {\n        mantissa = (mantissa << 1) + bin[i];\n    }\n    return ((signal ? 0x80000000 : 0) + (exponent << 23) + mantissa) | 00;*/\n}","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber} from './numberttransform'\nimport { connect } from 'react-redux';\n\nclass PanelMemory extends Component {\n    static display_name = \"memory\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            default:\n            case 0: // Hex\n                return padNumber((input >>> 0).toString(16), 2);\n            case 1: // uint\n                return padNumber((input >>> 0).toString(10), 3);\n            case 2: // octal\n                return padNumber((input >>> 0).toString(8), 3);\n            case 3: // bin\n                return padNumber((input >>> 0).toString(2), 8);\n        }\n    };\n\n    render() {\n        let tabs = this.props.tabs;\n        if (tabs.length === 0)\n            return <div></div>;\n            \n        let memory = tabs[this.props.selectedtab].core.memory;\n        let empty = memory.length === 0;\n        return (\n            <div id=\"panel_memory\" className=\"panel panel_memory\">\n                {empty && <span className=\"panel_empty\">Memory Empty</span>}\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Decimal</option>\n                    <option value=\"2\">Octal</option>\n                    <option value=\"3\">Binary</option>\n                </Select>}\n                \n                {!empty && memory.map((byte, i) => {\n                    let val = this.translateRegister(byte);\n                    return (<span key={i}>{val} </span>);\n                })}\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelMemory);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nclass PanelConsole extends Component {\n    static display_name = \"console\";\n\n    render() {\n        let tab = this.props.tabs[this.props.selectedtab];\n        if (!tab)\n            return <div></div>;\n            \n        let log = tab.console;\n        let empty = log.length === 0;\n\n        const running = tab.runningStatus !== SimulatingStatus.Stopped;\n        \n        return (<div id=\"panel_console\" className=\"panel panel_console\">\n            {empty && <span className=\"panel_empty\">Console Empty</span>}\n            {!empty && log.map((line, i) => {\n                return (<div key={i}>{line}</div>);\n            })}\n            {this.props.show_input && <span><span className=\"blinker\">{\"<<\"}</span> {this.props.input}</span>}\n            {running && <div className=\"running_console\">Simulation still not completed...</div>}\n        </div>)\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelConsole);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass PanelLog extends Component {\n    static display_name = \"log\";\n\n    render() {\n        let empty = this.props.core.log.length === 0;\n        return (<div id=\"panel_log\" className=\"panel panel_log\">\n            {empty && <span className=\"panel_empty\">Instruction Log Empty</span>}\n            {!empty && this.props.core.log.map((instruction, i) => {\n                return (<div key={i}>{instruction}</div>);\n            })}\n        </div>)\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n\t\tcore: state.tabs[state.selectedtab]\n\t};\n};\n\nexport default connect(stateToProps)(PanelLog);","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setHelpVisible } from \"../actions\"\n\nclass Help extends Component {\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setHelpVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n    \n    render() {\n        return (\n            <div id=\"help\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2><Translate id=\"help.title\" /></h2>\n                    <div className=\"overlay_contents\">\n                        <Translate id=\"help.data\" options={{ renderInnerHtml: true }} />\n                        <button className=\"button\" onClick={this.handleClose}>Close</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.help\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setHelpVisible: (visible) => dispatch(setHelpVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(Help));","export default {\n    core: [\n        {\n            \"affiliation\": \"Research Associate, American University in Cairo\",\n            \"pic\": \"donn.jpg\",\n            \"name\": \"Mohamed \\\"Donn\\\" Gaber\",\n            \"job\": \"Assembler / Simulator Developer\",\n            \"link\": \"https://donn.website/\",\n            \"desc\": \"Maintainer of the Cloud V platform on both https://cloudv.io and https://efabless.com. I consume an unhealthy amount of video games in my spare time.\"\n        },\n        {\n            \"affiliation\": \"Student, American University in Cairo (formerly)\",\n            \"pic\": \"karimio.jpg\",\n            \"name\": \"Karim Abdel Hamid\",\n            \"job\": \"Primary Front-End/IDE Developer\",\n            \"link\": \"https://karimio.github.io/\",\n            \"desc\": \"I'm a game and web developer; love to write stories, play guitar, & paint.\"\n        }\n    ],\n    additional: [\n        {\n            \"affiliation\": \"Student, American University in Cairo (formerly)\",\n            \"pic\": \"ali_khaled.jpg\",\n            \"name\": \"Ali Khaled\",\n            \"job\": \"MIPS Assistance\",\n            \"link\": \"https://github.com/loshya\",\n            \"desc\": \"りゅうがわがてきをクラウ！\"\n        },\n        {\n            \"affiliation\": \"Professor, American University in Cairo\",\n            \"pic\": \"shalan.jpg\",\n            \"name\": \"Dr. Mohamed Shalan\",\n            \"job\": \"Advisor\",\n            \"link\": \"https://github.com/shalan\",\n            \"desc\": \"Founder at Cloud V, Open Hardware Researcher and Advocate\"\n        }\n    ],\n    translators: []\n};","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setAboutVisible } from \"../actions\"\nimport devs from \"../developer_list.js\"\n\nclass About extends Component {\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setAboutVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n\n    printdev = (arr) => {\n        return arr.map((element, i) => {\n            return <a key={i} href={element.link}>\n                <img src={`images/about/${element.pic}`} />\n                <h4>{element.name}</h4>\n                <span>{element.job}</span>\n                <span>{element.affiliation}</span>\n                <p>{element.desc}</p>\n            </a>;\n        })\n    }\n    \n    render() {\n        return (\n            <div id=\"about\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2><Translate id=\"about.title\" /></h2>\n                    <div className=\"overlay_contents\">\n                        <div className=\"devlist\">\n                            <h3><Translate id=\"about.core_devs\" /></h3>\n                            {\n                                this.printdev(devs.core)\n                            }\n                        </div>\n                        <div className=\"devlist\">\n                            <h3><Translate id=\"about.additional_devs\" /></h3>\n                            {\n                                this.printdev(devs.additional)\n                            }\n                        </div>\n                        {devs.translators.length > 0  && <div className=\"translatorlist\">\n                            <h3><Translate id=\"about.translators\" /></h3>\n                            {\n                                devs.translators.map((element, i) => {\n                                    return <a key={i} href={element.link}>\n                                        <h4>{element.name}</h4>\n                                        <span>{element.lang}</span>\n                                    </a>;\n                                })\n                            }\n                        </div>}\n                    </div>\n                    <button className=\"button\" onClick={this.handleClose}>Close</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.about\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setAboutVisible: (visible) => dispatch(setAboutVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(About));","import React, { Component } from 'react'\n\nexport default class HotkeyInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            capturing: false,\n            combo: \"a_110\",\n            shift: true,\n            alt: true,\n            ctrl: true,\n            key_name: \"n\"\n        }\n    }\n\n    handleClick = (event) => {\n        this.setState({capturing: true});\n\t\twindow.addEventListener(\"keydown\", this.handleKey);\n    }\n\n    handleKey = (event) => {\n        if (this.state.capturing) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            let key = event.key.toLowerCase();\n            if (key === \"control\" || key === \"shift\" || key === \"alt\")\n                return false;\n\n            this.setState({\n                shift: event.shiftKey,\n                ctrl: event.ctrlKey,\n                alt: event.altKey,\n                key_name: key,\n                capturing: false\n            });\n\n            window.removeEventListener(\"keydown\", this.handleKey);\n            this.props.save();\n        }\n    }\n\n    testKey = (key_ctrl, key_alt, key_shift, key_name) => {\n        return (key_shift === this.state.shift &&\n            key_alt=== this.state.alt &&\n            key_ctrl === this.state.ctrl &&\n            key_name === this.state.key_name);\n    }\n\n    setKey = (key_ctrl, key_alt, key_shift, key_name, done = () => {}) => {\n        this.setState({\n            ctrl: key_ctrl,\n            alt: key_alt,\n            shift: key_shift,\n            key_name: key_name\n        }, done);\n    }\n\n    getKey = () => {\n        let key = \"_\" + this.state.key_name;\n        if (this.state.shift)\n            key = \"s\" + key;\n            \n        if (this.state.alt)\n            key = \"a\" + key;\n        \n        if (this.state.ctrl)\n            key = \"c\" + key;\n\n        return key;\n    }\n\n    setKeyStr = (str) => {\n        let upos = str.indexOf(\"_\");\n        let mods = str.substr(0, upos);\n\n\t\tlet shift = (mods.indexOf(\"s\")!==-1);\n\t\tlet alt = (mods.indexOf(\"a\")!==-1);\n\t\tlet ctrl = (mods.indexOf(\"c\")!==-1);\n        let key = str.substr(upos + 1);\n        \n        this.setKey(ctrl, alt, shift, key);\n    }\n    \n    render() {\n        let c = !this.state.capturing;\n        return (<div className={`key_bar${this.state.capturing ? \" capturing\" : \"\"}`} onClick={this.handleClick} tabIndex={0}>\n                    {!c && <span>Capturing</span>}\n                    {c && this.state.ctrl && <span>Ctrl</span>}\n                    {c && this.state.alt && <span>Alt</span>}\n                    {c && this.state.shift && <span>Shift</span>}\n                    {c && <span>{this.state.key_name}</span>}\n                </div>);\n    }\n}","import React, { Component } from 'react'\nimport HotkeyInput from '../modules/hotkey.js'\nimport Select from '../modules/select'\n\nimport { connect } from 'react-redux';\nimport { withLocalize } from \"react-localize-redux\";\nimport { setSettingsVisible } from \"../actions\"\n\nconst themes = [\n    \"theme_light\",\n    \"theme_dark\",\n    \"theme_dos\",\n    \"theme_apple2\"\n];\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            default_isa: \"RISC-V\",\n            theme: \"theme_light\",\n            use_cookies: false\n        };\n        \n\t\twindow.addEventListener(\"keydown\", this.handleKey);\n\n        for (let i = 1; i < themes.length; ++i)\n            document.getElementById(themes[i]).disabled = true;\n\n\t\tthis.comp_new = React.createRef();\n\t\tthis.comp_load = React.createRef();\n\t\tthis.comp_save = React.createRef();\n\t\tthis.comp_assemble = React.createRef();\n\t\tthis.comp_sim = React.createRef();\n        this.comp_step = React.createRef();\n    }\n\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setSettingsVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n\n    handleKey = (event) => {\n        if (this.props.canhandleinput) {\n            let key_name = event.key.toLowerCase();\n            if (key_name === \"control\" || key_name === \"shift\" || key_name === \"alt\")\n                return false;\n\n            let key_ctrl = event.ctrlKey;\n            let key_alt = event.altKey;\n            let key_shift = event.shiftKey;\n            let cancel = false;\n\n            let hotkey = [\n                this.comp_new.current,\n                this.comp_load.current,\n                this.comp_save.current,\n                this.comp_assemble.current,\n                this.comp_step.current,\n                this.comp_sim.current\n            ];\n\n            let hotkeyfns = [\n                this.props.fn_new,\n                this.props.fn_load,\n                this.props.fn_save,\n                this.props.fn_ass,\n                this.props.fn_step,\n                this.props.fn_sim\n            ];\n\n            for (let i = 0; i < hotkey.length; ++i) {\n                if (hotkey[i].testKey(key_ctrl, key_alt, key_shift, key_name)) {\n                    hotkeyfns[i]();\n                    cancel = true;\n                }\n            }\n\n            if (cancel) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }\n    }\n\n    setDefaults = (done = () => {}) => {\n        this.comp_new.current.setKey(false, true, false, \"n\", () => {\n            this.comp_load.current.setKey(true, false, false, \"o\", () => {\n                this.comp_save.current.setKey(true, false, false, \"s\", () => {\n                    this.comp_assemble.current.setKey(false, true, false, \"f5\", () => {\n                        this.comp_sim.current.setKey(false, true, false, \"f7\", () => {\n                            this.comp_step.current.setKey(false, true, false, \"f6\", () => {\n                                this.setTheme(\"theme_light\", done);\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    setDefaultsSave = () => {\n        this.setDefaults(this.saveSettings);\n    }\n\n    /*function getCookie(cname) {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }*/\n    \n    saveSettings = () => {\n        var d = new Date();\n        d.setTime(d.getTime() + (30*24*60*60*1000));\n        var expires = d.toUTCString();\n        let exp = \"; expires=\" + expires + \"; path=/\";\n        \n        document.cookie = \"ojs_hotkey_new=\" + this.comp_new.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_load=\" + this.comp_load.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_save=\" + this.comp_save.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_ass=\" + this.comp_assemble.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_sim=\" + this.comp_sim.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_step=\" + this.comp_step.current.getKey() + exp;\n        document.cookie = \"ojs_theme=\" + this.state.theme + exp;\n    }\n\n    setTheme = (val, continuefn = () => {}) => {\n        if (!themes.includes(val)) {\n            val = themes[0];\n        }\n\n        themes.forEach(function(element) {\n            document.getElementById(element).disabled = (element !== val);\n        });\n\n        this.setState({theme: val}, continuefn);\n    }\n\n    componentDidMount() {\n        let has_cookies = false;\n\n        let ca = document.cookie.split(\"; \");\n\n        let i = 0;\n        for (; i < ca.length; i++) {\n            var c = ca[i];\n            \n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            \n            let eq = c.indexOf(\"=\");\n            let str = c.substr(0, eq);\n            let val = c.substr(eq+1);\n            if (str === \"ojs_hotkey_new\") {\n                this.comp_new.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_load\") {\n                this.comp_load.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_save\") {\n                this.comp_save.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_ass\") {\n                this.comp_assemble.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_sim\") {\n                this.comp_sim.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_step\") {\n                this.comp_step.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_theme\") {\n                this.setTheme(val);\n                has_cookies = true;\n            }\n        }\n\n        if (has_cookies) {\n            this.setState({use_cookies: true});\n        }\n    }\n\n    handleISA = (event) => {\n        this.setState({default_isa: event.target.value});\n    };\n\n    handleTheme = (event) => {\n        this.setTheme(event.target.value, this.saveSettings);\n    };\n\n    acceptCookies = (e) => {\n        e.preventDefault();\n\n        this.setState({use_cookies: true});\n        this.setDefaultsSave();\n    }\n\n    deleteAllCookies = () => {\n        var cookies = document.cookie.split(\"; \");\n\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i];\n            var eqPos = cookie.indexOf(\"=\");\n            var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            let startojs = name.substr(0, 3);\n            if (startojs === \"ojs\")\n                document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n        \n        }\n\n        this.setState({use_cookies: false});\n        this.setDefaults();\n    }\n\n    render() {\n        return (\n            <div id=\"settings\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2>Settings</h2>\n                    {!this.state.use_cookies && \n                        <div className=\"cookie_screen\">\n                            <h3>Cookies</h3>\n                            <p>In order to set your own settings, you need to enable cookies. Cookies are the way websites store data for individual users. We store your cookies directly in the browser, and only store the options stored here.</p>\n                            <button onClick={this.acceptCookies} className=\"button\">Accept Cookies, Show Settings</button>\n                            <button onClick={this.handleClose} className=\"button subbutton\">Close Window</button>\n                        </div>\n                    }\n                    <div style={{display: (this.state.use_cookies ? \"block\" : \"none\"), position: \"relative\"}}>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <td colSpan={2}>General Settings</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {/*<tr>\n                                    <td colSpan={2}>\n                                        <Select onChange={this.handleISA} icon=\"/images/icons/input_type.svg\" placeholder=\"Default ISA\" value={this.state.default_isa}>\n                                            <option>RISC-V</option>\n                                            <option>MIPS</option>\n                                        </Select>\n                                    </td>\n                                </tr>*/}\n                                <tr>\n                                    <td colSpan={2}>\n                                        <Select onChange={this.handleTheme} icon=\"images/icons/input_type.svg\" placeholder=\"Theme\" value={this.state.theme}>\n                                            <option value=\"theme_light\">Light</option>\n                                            <option value=\"theme_dark\">Dark</option>\n                                            <option value=\"theme_dos\">DOS</option>\n                                            <option value=\"theme_apple2\">Apple ][</option>\n                                        </Select>\n                                    </td>\n                                </tr>\n                            </tbody>\n                            <thead>\n                                <tr>\n                                    <td colSpan={2}>Hotkeys</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>New Tab</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_new} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Save Tab</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_save} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Load</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_load} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Assemble</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_assemble} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Step-By-Step</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_step} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Simulate</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_sim} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button className=\"button\" onClick={this.handleClose}>Accept Changes</button>\n                        <button className=\"button subbutton\" onClick={this.setDefaultsSave}>Restore Defaults</button>\n                        <button className=\"button subbutton\" onClick={this.deleteAllCookies}>Delete Cookies</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.settings\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(Settings));","import React, { Component } from 'react'\n\nexport default class Input extends Component {\n    render() {\n        return (\n            <div className=\"input_group\">\n                <input onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(${this.props.icon})`}} type={this.props.type} placeholder={this.props.placeholder} />\n                <label className=\"group_label\">{this.props.placeholder}</label>\n            </div>\n        );\n    }\n}\n","export class VirtualOS {\n    constructor() {\n        this.continueInputString = (core, val) => {\n            let reg = core.virtualOSArgumentVectorStart;\n            let arg = core.registerFile.read(reg);\n            let array = [];\n            for (let i = 0; i < val.length; ++i) {\n                array.push(val.charCodeAt(i));\n            }\n            core.memset(arg, array);\n        };\n        this.continueInputInt = (core, val) => {\n            let reg = core.virtualOSArgumentVectorStart;\n            core.registerFile.write(reg, val);\n        };\n    }\n    ecall(core) {\n        let service = core.registerFile.read(core.virtualOSServiceRegister);\n        const start = core.virtualOSArgumentVectorStart;\n        switch (service) {\n            case 1: {\n                let val = core.registerFile.read(start);\n                this.outputInt(val);\n                break;\n            }\n            case 4: {\n                let iterator = core.registerFile.read(start);\n                let array = [];\n                let char = null;\n                while ((char = core.memcpy(iterator, 1)[0]) !== 0) {\n                    array.push(char);\n                    iterator += 1;\n                }\n                let outStr = array.map(c => String.fromCharCode(c)).join('');\n                this.outputString(outStr);\n                return null;\n            }\n            case 5: {\n                this.inputInt();\n                return \"WAIT\";\n            }\n            case 8: {\n                this.inputString();\n                return \"WAIT\";\n            }\n            case 10:\n                this.handleHalt();\n                return \"HALT\";\n            default:\n                return \"UNHANDLED\";\n        }\n        return null;\n    }\n}\n","export class Enum {\n    constructor(object) {\n        for (let key in object) {\n            this[key] = object[key];\n            this[object[key]] = key;\n        }\n    }\n}","\nexport class Utils {\n    /*\n        signExt\n\n        Sign extends an n-bit value to fit Javascript limits.\n    */\n    static signExt(value, bits) {\n        let mutableValue = value;\n        if ((mutableValue & (1 << (bits - 1))) !== 0) {\n            mutableValue = ((~(0) >>> bits) << bits) | value;\n        }\n        return mutableValue;\n    }\n    \n    /*\n        rangeCheck\n\n        Checks if a value can fit within a certain number of bits.\n    */\n   static rangeCheck(value, bits) {\n        if (bits >= 32) {\n            return null; // No stable way of checking.\n        }\n        var min = -(1 << bits - 1);\n        var max = (1 << bits - 1) - 1;\n        value = this.signExt(value, bits);\n        if ((min <= (value >> 0)) && ((value >> 0) <= max)) {\n            return true;\n        }\n        return false;\n    }\n    \n    /*\n        catBytes\n        \n        Converts bytes stored in a little endian fashion to a proper js integer.\n    */\n   static catBytes(bytes, bigEndian = false) {\n        if (bytes.length > 4) {\n            return null;\n        }\n        if (bigEndian) {\n            bytes.reverse();\n        }\n        let storage = 0 >>> 0;\n        for (let i = 0; i < bytes.length; i++) {\n            storage = storage | (bytes[i] << (8 * i));\n        }\n        return storage;\n    }\n    \n    /*\n        pad\n        \n        Turns a number to a padded string.\n    */\n    static pad(number, digits, radix) {\n        let padded = number.toString(radix);\n        while (digits > padded.length) {\n            padded = \"0\" + padded;\n        }\n        return padded;\n    }\n    \n    static hex(array) {\n        let hexadecimal = \"\";\n        for (let i = 0; i < array.length; i++) {\n            let hexRepresentation = array[i].toString(16).toUpperCase();\n            if (hexRepresentation.length === 1) {\n                hexRepresentation = \"0\" + hexRepresentation;\n            }\n            hexadecimal += hexRepresentation + \" \";\n        }\n        return hexadecimal;\n    }\n}","import { Enum } from \"./Enum.js\";\nimport { Utils } from \"./Utils.js\";\n\nexport const Parameter = new Enum({\n    immediate: 0,\n    register: 1,\n    condition: 2,\n    offset: 3,\n    special: 4,\n    fpImmediate: 5\n});\n\nexport const Endianness = new Enum({\n    little: 0,\n    big: 1,\n    bi: 2\n});\n\nexport const Keyword = new Enum({\n    directive: 0,\n    comment: 1,\n    label: 2,\n    stringMarker: 3,\n    charMarker: 4,\n    register: 5,\n\n    string: 6,\n    char: 7,\n    numberic: 8\n});\n\nexport const Directive = new Enum({\n    text: 0,\n    data: 1,\n    string: 2,\n    cString: 3,\n\n    _8bit: 4,\n    _16bit: 5,\n    _32bit: 6,\n    _64bit: 7,\n\n    fixedPoint: 8,\n    floatingPoint: 9,\n\n    custom: 10\n});\n\nexport class BitRange {\n    constructor(field, start, bits, constant = null, signed = false) {\n        this.field = field;\n        this.start = start;\n        this.bits = bits;\n        this.constant = constant;\n        this.signed = signed;\n    }\n    get end() {\n        return this.start + this.bits - 1;\n    }\n    limited(totalBits, limitStart = null, limitEnd = null) {\n        this.totalBits = totalBits;\n        this.limitStart = limitStart;\n        this.limitEnd = limitEnd;\n        return this;\n    }\n    parameterized(parameter, parameterType, parameterDefaultValue = null) {\n        this.parameter = parameter;\n        this.parameterDefaultValue = parameterDefaultValue;\n        this.parameterType = parameterType;\n        return this;\n    }\n}\n\nexport class Format {\n    constructor(ranges, regex, disassembly, processSpecialParameter = null, decodeSpecialParameter = null) {\n        this.ranges = ranges;\n        this.regex = regex;\n        this.disassembly = disassembly;\n        this.processSpecialParameter = processSpecialParameter;\n        this.decodeSpecialParameter = decodeSpecialParameter;\n    }\n}\n\nexport class Instruction {\n    constructor(mnemonic, format, constants, constValues, executor, signatoryOverride = null, pseudoInstructionFor = []) {\n        this.computedBits = null;\n        /*\n         Mask\n         \n         It's basically the bits of each format, but with Xs replacing parts that aren't constant in every instruction.\n         For example, if an 8-bit ISA defines 5 bits for the register and 3 bits for the opcode, and the opcode for ADD is 101 then the ADD instruction's mask is XXXXX101.\n        */\n        this.computedMask = null;\n        this.computedTemplate = null;\n        this.mnemonic = mnemonic;\n        this.format = format;\n        this.constants = [];\n        for (let i in constants) {\n            this.constants[constants[i]] = constValues[i];\n        }\n        this.executor = executor;\n        this.signatoryOverride = signatoryOverride;\n        this.pseudoInstructionFor = pseudoInstructionFor;\n    }\n    pad(str, length) {\n        let padded = str;\n        for (let i = 0; i < length - str.length; i++) {\n            padded = \"0\" + padded;\n        }\n        return padded;\n    }\n    get bits() {\n        if (this.computedBits !== null) {\n            return this.computedBits;\n        }\n        let count = 0;\n        for (var i in this.format.ranges) {\n            count += this.format.ranges[i].bits;\n        }\n        this.computedBits = count;\n        return this.computedBits;\n    }\n    get bytes() {\n        return Math.ceil(this.bits / 8);\n    }\n    get mask() {\n        if (this.computedMask !== null) {\n            return this.computedMask;\n        }\n        var string = '';\n        for (let i = 0; i < this.bits; i += 1) {\n            string += 'X';\n        }\n        for (let i in this.format.ranges) {\n            let range = this.format.ranges[i];\n            let constant = this.constants[range.field];\n            if (constant === null) {\n                constant = range.constant;\n            }\n            if (constant != null) {\n                let before = string.substr(0, this.bits - range.end - 1);\n                let addition = Utils.pad(constant, range.bits, 2);\n                let after = range.start === 0 ? '' : string.substr(-range.start);\n                string = before + addition + after;\n            }\n        }\n        this.computedMask = string;\n        return this.computedMask;\n    }\n    ;\n    match(machineCode) {\n        let machineCodeMutable = machineCode >>> 0;\n        let maskBits = this.mask.split(\"\");\n        for (let i = this.bits - 1; i >= 0; i--) {\n            let bit = (machineCodeMutable & 1);\n            machineCodeMutable >>= 1;\n            if (maskBits[i] === \"X\") {\n                continue;\n            }\n            if (parseInt(maskBits[i], 10) !== bit) {\n                return false;\n            }\n        }\n        return true;\n    }\n    get template() {\n        if (this.computedTemplate != null) {\n            return this.computedTemplate;\n        }\n        let temp = 0 >>> 0;\n        for (let i in this.format.ranges) {\n            let range = this.format.ranges[i];\n            let constant = this.constants[range.field];\n            if (constant === null) {\n                constant = range.constant;\n            }\n            if (constant != null) {\n                temp |= (constant << range.start);\n            }\n        }\n        this.computedTemplate = temp;\n        return temp;\n    }\n    ;\n}\n\nexport class PseudoInstruction {\n}\n\nexport class InstructionSet {\n    /*\n        InstructionSet initializer\n    */\n    constructor(bits, formats, instructions, pseudoInstructions, abiNames, keywords, directives, incrementOnFetch, exampleCode) {\n        this.bits = bits;\n        this.formats = formats;\n        this.instructions = instructions;\n        instructions.sort((a, b) => a.bytes - b.bytes);\n        this.pseudoInstructions = pseudoInstructions;\n        this.abiNames = abiNames;\n        this.keywords = keywords;\n        this.directives = directives;\n        this.incrementOnFetch = incrementOnFetch;\n        this.exampleCode = exampleCode;\n    }\n    //Return Mnemonic Index (pseudo)\n    pseudoMnemonicSearch(mnemonic) {\n        return -1;\n    } //Worst case = instructions.length\n    //Return Mnemonic Index (True)\n    mnemonicSearch(mnemonic) {\n        for (let i = 0; i < this.instructions.length; i++) {\n            if (this.instructions[i].mnemonic === mnemonic) {\n                return i;\n            }\n        }\n        return -1;\n    } //Worst case = instructions.length\n    instructionsPrefixing(line) {\n        var result = [];\n        for (let i in this.instructions) {\n            let instruction = this.instructions[i];\n            if (line.toUpperCase().hasPrefix(instruction.mnemonic)) {\n                let captures = instruction.format.regex.exec(line);\n                if (captures && captures[1].toUpperCase() === instruction.mnemonic) {\n                    result.push(instruction);\n                }\n            }\n        }\n        return result;\n    }\n    disassemble(instruction, args) {\n        let output = instruction.format.disassembly;\n        output = output.replace(\"@mnem\", instruction.mnemonic);\n        for (let i = 0; i < instruction.format.ranges.length; i++) {\n            let range = instruction.format.ranges[i];\n            let parameter = range.parameter;\n            if (parameter != null) {\n                output = output.replace(\"@arg\" + range.parameter, (range.parameterType === Parameter.register) ? this.abiNames[args[parameter]] : args[parameter].toString());\n            }\n        }\n        return output;\n    }\n}","import { Enum } from \"./Enum.js\";\nimport { Parameter, Keyword, Directive } from \"./InstructionSet.js\";\nimport { Utils } from \"./Utils.js\";\n\n// Changes a string of hex bytes to an array of numbers.\nString.prototype.interpretedBytes = function () {\n    let hexes = this.split(' '); // Remove spaces, then seperate characters\n    let bytes = [];\n    for (let i = 0; i < hexes.length; i++) {\n        let value = parseInt(hexes[i], 16);\n        if (!isNaN(value)) {\n            bytes.push(value);\n        }\n    }\n    return bytes;\n};\n\n// Check if haystack has needle in the beginning.\nString.prototype.hasPrefix = function (needle) {\n    return this.substr(0, needle.length) === needle;\n};\n\nexport const Kind = new Enum({\n    instruction: 0,\n    data: 1,\n    directive: 2,\n    noise: 3\n});\n\nexport class Line {\n    constructor(raw, number) {\n        this.addressThisPass = null;\n        this.sensitive = false;\n        this.machineCode = [];\n        this.raw = raw;\n        this.number = number;\n        this.kind = Kind.noise;\n        this.sensitivityList = [];\n        this.possibleInstructions = [];\n    }\n    static arrayFromFile(file) {\n        return file.split('\\n').map((line, index) => new Line(line, index));\n    }\n    initialProcess(assembler, text = true) {\n        let comment = assembler.keywordRegexes[Keyword.comment];\n        let tmp = comment.exec(this.raw)[1];\n        let label = assembler.keywordRegexes[Keyword.label];\n        let pieces = label.exec(tmp);\n        this.label = pieces[1];\n        this.processed = pieces[2] || '';\n        if (/^s*$/.exec(this.processed) !== null) {\n            return text;\n        }\n        if (assembler.keywordRegexes[Keyword.directive] != null) {\n            let captures = RegExp(assembler.keywordRegexes[Keyword.directive]).exec(this.processed);\n            if (captures !== null) {\n                this.directive = assembler.directives[captures[1]];\n                this.directiveData = captures[2];\n            }\n        }\n        if (text) {\n            if (this.directive !== undefined) {\n                switch (this.directive) {\n                    case Directive.data:\n                        this.kind = Kind.directive;\n                        return false;\n                    case Directive.text:\n                        this.kind = Kind.directive;\n                        break;\n                    default:\n                        this.invalidReason = \"text.unsupportedDirective\";\n                }\n                return true;\n            }\n            this.kind = Kind.instruction;\n            assembler.instructionSet.instructions.forEach(instruction => {\n                let match = instruction.format.regex.exec(this.processed);\n                if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\n                    this.possibleInstructions.push([instruction, match.slice(2), [], null]);\n                }\n                return match !== null;\n            });\n            if (this.possibleInstructions.length === 0) {\n                this.invalidReason = \"text.noMatchingInstructions\";\n                return true;\n            }\n            let minimum = this.possibleInstructions[0][0].bytes;\n            (this.machineCode = []).length = minimum;\n            this.machineCode.fill(0);\n            return true;\n        }\n        else {\n            let count = null; // byte count\n            let zeroDelimitedString = 0;\n            if (this.directive !== undefined) {\n                this.kind = Kind.data;\n                switch (this.directive) {\n                    case Directive.data:\n                        this.kind = Kind.directive;\n                        break;\n                    case Directive.text:\n                        this.kind = Kind.directive;\n                        return true;\n                    case Directive._32bit:\n                        count = count || 4;\n                    // fall through\n                    case Directive._16bit:\n                        count = count || 2;\n                    // fall through\n                    case Directive._8bit:\n                        count = count || 1;\n                        let elements = this.directiveData.split(/\\s*,\\s*/);\n                        (this.machineCode = []).length = (elements.length * count);\n                        this.machineCode.fill(0);\n                        this.kind = Kind.data;\n                        break;\n                    case Directive.cString:\n                        zeroDelimitedString = 1;\n                    // fall through\n                    case Directive.string:\n                        if (assembler.keywordRegexes[Keyword.string] === null) {\n                            this.invalidReason = \"isa.noStringTokenDefined\";\n                        }\n                        let match = assembler.keywordRegexes[Keyword.string].exec(this.directiveData);\n                        if (match === null) {\n                            this.invalidReason = \"data.invalidString\";\n                        }\n                        else {\n                            let regex = RegExp(assembler.generalCharacters, \"g\");\n                            let characters = [];\n                            let found = null;\n                            while ((found = regex.exec(match[1]))) {\n                                characters.push(found);\n                            }\n                            (this.machineCode = []).length = (characters.length + zeroDelimitedString);\n                            for (let c in characters) {\n                                let character = String(characters[c]);\n                                let value = character.charCodeAt(0);\n                                if (character.length > 2) {\n                                    value = Assembler.escapedCharacters[character[1]];\n                                }\n                                this.machineCode[c] = value;\n                            }\n                            if (zeroDelimitedString === 1) {\n                                this.machineCode[this.machineCode.length - 1] = 0;\n                            }\n                        }\n                        this.kind = Kind.data;\n                        break;\n                    default:\n                        this.invalidReason = \"data.unrecognizedDirective\";\n                }\n            }\n            else {\n                let isInstruction = false;\n                assembler.instructionSet.instructions.forEach(instruction => {\n                    let match = instruction.format.regex.exec(this.processed);\n                    if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\n                        isInstruction = true;\n                    }\n                });\n                if (isInstruction) {\n                    this.invalidReason = \"data.instruction\";\n                }\n                else {\n                    this.invalidReason = \"data.unknownInput\";\n                }\n            }\n            return false;\n        }\n    }\n    assembleText(assembler, lines, address) {\n        let candidates = false;\n        testingInstructions: for (let i in this.possibleInstructions) {\n            let possibleInstruction = this.possibleInstructions[i];\n            let instruction = possibleInstruction[0];\n            let args = possibleInstruction[1];\n            let machineCode = instruction.template;\n            for (var j in instruction.format.ranges) {\n                let range = instruction.format.ranges[j];\n                if (range.parameter === undefined) {\n                    continue;\n                }\n                let limited = range.totalBits;\n                let bits = limited || range.bits;\n                let store = null;\n                if (range.parameterType == Parameter.special) {\n                    store = instruction.format.processSpecialParameter(args[range.parameter], Parameter.special, bits, address, assembler);\n                }\n                else {\n                    store = assembler.process(args[range.parameter], range.parameterType, bits, address, instruction.bytes);\n                }\n                if (store.errorMessage !== null) {\n                    possibleInstruction[3] = store.errorMessage;\n                    continue testingInstructions;\n                }\n                else if (store.context !== null && store.value === null) {\n                    store.context.sensitivityList.push(this);\n                    this.sensitive = true;\n                    break testingInstructions;\n                }\n                else {\n                    let register = store.value;\n                    let startBit = range.limitStart;\n                    let endBit = range.limitEnd;\n                    if (limited !== undefined && startBit !== undefined && endBit !== undefined) {\n                        register >>= startBit; // discard start bits bits\n                        let bits = (endBit - startBit + 1);\n                        register &= (1 << bits) - 1; // mask end - start + 1 bits\n                    }\n                    let masked = register & (1 << bits) - 1;\n                    machineCode |= masked << range.start;\n                }\n            }\n            for (let i = 0; i < instruction.bytes; i += 1) {\n                possibleInstruction[2].push(machineCode & 0xFF);\n                machineCode >>>= 8;\n            }\n            candidates = true;\n        }\n        if (candidates) {\n            // Expand machine code if applicable\n            let smallestPossibleInstruction = this.possibleInstructions.filter(pi => pi[3] === null)[0];\n            this.machineCode = smallestPossibleInstruction[2];\n        }\n        // Handle errors\n        let errorMessage = null;\n        let errorOccurred = !(candidates || this.sensitive);\n        if (errorOccurred) {\n            errorMessage = this.possibleInstructions[this.possibleInstructions.length - 1][3]; //Typically the most lenient option is last\n        }\n        return errorMessage;\n    }\n    assembleData(assembler, lines, address) {\n        let errorMessage = null;\n        let count = null;\n        switch (this.directive) {\n            case Directive._32bit:\n                count = count || 4;\n            // fall through\n            case Directive._16bit:\n                count = count || 2;\n            // fall through\n            case Directive._8bit:\n                count = count || 1;\n                let elements = this.directiveData.split(/\\s*,\\s*/);\n                for (let i = 0; i < elements.length; i += 1) {\n                    let element = elements[i];\n                    let bits = count << 3;\n                    let store = assembler.process(element, Parameter.immediate, bits, address, 0);\n                    if (store.errorMessage !== null) {\n                        errorMessage = store.errorMessage;\n                        break;\n                    }\n                    else if (store.context !== null && store.value === null) {\n                        store.context.sensitivityList.push(this);\n                        this.sensitive = true;\n                        break;\n                    }\n                    else {\n                        let stored = store.value;\n                        for (let j = 0; j < count; j += 1) {\n                            let offset = (count * i);\n                            this.machineCode[j + offset] = stored & 0xFF;\n                            stored >>>= 8;\n                        }\n                    }\n                }\n                break;\n            case Directive.cString:\n            case Directive.string:\n                // Already handled in pass 0.\n                break;\n            default:\n                this.invalidReason = \"data.unrecognizedDirective\";\n        }\n        return errorMessage;\n    }\n    assemble(assembler, lines, address) {\n        this.sensitive = false;\n        let result = [null, false];\n        switch (this.kind) {\n            case Kind.instruction:\n                result[0] = this.assembleText(assembler, lines, address);\n                break;\n            case Kind.data:\n                result[0] = this.assembleData(assembler, lines, address);\n                break;\n            default:\n                break;\n        }\n        let lineByLabel = assembler.linesByLabel[this.label];\n        if (lineByLabel !== undefined) {\n            lineByLabel[1] = address;\n        }\n        if (result[0] === null) {\n            for (let i in this.sensitivityList) {\n                let sensor = this.sensitivityList[i];\n                if (sensor.addressThisPass !== null) {\n                    let sensorLength = sensor.machineCode.length;\n                    let newAssembly = sensor.assemble(assembler, lines, sensor.addressThisPass);\n                    if (sensor.sensitive) {\n                        // Still sensitive, leave it alone uwu\n                    }\n                    else {\n                        if (newAssembly[1]) {\n                            result[1] = true;\n                            break;\n                        }\n                        if (sensor.machineCode.length !== sensorLength) {\n                            result[1] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.invalidReason = result[0];\n        }\n        return result;\n    }\n}\n\nexport class Assembler {\n    constructor(instructionSet, endianness, memoryMap = null) {\n        this.linesByLabel = [];\n        this.incrementOnFetch = instructionSet.incrementOnFetch;\n        this.keywordRegexes = [];\n        this.memoryMap = memoryMap;\n        if (instructionSet.keywordRegexes) {\n            this.keywordRegexes = instructionSet.keywordRegexes;\n        }\n        else if (instructionSet.keywords) {\n            let words = instructionSet.keywords;\n            this.keywordRegexes = [];\n            if (words[Keyword.directive]) {\n                let options = Assembler.options(instructionSet.keywords[Keyword.directive]);\n                if (options) {\n                    this.keywordRegexes[Keyword.directive] = RegExp(options + \"([^\\\\s]+)\\\\s*(.+)*\");\n                }\n            }\n            if (words[Keyword.comment]) {\n                let options = Assembler.options(words[Keyword.comment]);\n                if (options) {\n                    this.keywordRegexes[Keyword.comment] = RegExp(\"^(.*?)(\" + options + \".*)?$\");\n                }\n            }\n            if (words[Keyword.label]) {\n                let options = Assembler.options(words[Keyword.label]);\n                if (options) {\n                    this.keywordRegexes[Keyword.label] = RegExp(\"^(?:([A-Za-z_][A-Za-z0-9_]*)\" + options + \")?\\\\s*(.*)?$\");\n                }\n            }\n            if (words[Keyword.register]) {\n                let options = Assembler.options(words[Keyword.register]);\n                if (options) {\n                    this.keywordRegexes[Keyword.register] = RegExp(options + \"([0-9]+)\");\n                }\n            }\n            this.keywordRegexes[Keyword.numeric] = RegExp(\"(-?(?:0([\" + Assembler.radixList + \"]))?[A-F0-9]+)\");\n            if (words[Keyword.charMarker]) {\n                let options = Assembler.options(words[Keyword.charMarker]);\n                if (options) {\n                    let escapable = options.length > 1 ? \"\" : \"\\\\\" + options;\n                    //this.keywordRegexes[Keyword.char] = RegExp(options + \"\" + options);\n                    this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + escapable + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\n                    this.keywordRegexes[Keyword.char] = RegExp(options + '(' + this.generalCharacters + ')' + options);\n                }\n            }\n            else {\n                this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\n            }\n            if (words[Keyword.stringMarker]) {\n                let options = Assembler.options(words[Keyword.stringMarker]);\n                if (options) {\n                    this.keywordRegexes[Keyword.string] = RegExp(options + \"(\" + this.generalCharacters + \"*)\" + options);\n                }\n            }\n        }\n        else {\n            console.log(\"INSTRUCTION SET WARNING: This instruction set doesn't define any keywords.\");\n        }\n        this.directives = instructionSet.directives;\n        this.endianness = (endianness) ? endianness : instructionSet.endianness;\n        this.instructionSet = instructionSet;\n    }\n    //Returns number on success, string on failure\n    process(text, type, bits, address, instructionLength) {\n        let result = {\n            errorMessage: null,\n            value: null,\n            context: null\n        };\n        switch (type) {\n            case Parameter.register:\n                let index = this.instructionSet.abiNames.indexOf(text);\n                if (index !== -1) {\n                    result.value = index;\n                    return result;\n                }\n                let registerNo = null;\n                if (this.keywordRegexes[Keyword.register]) {\n                    let match = this.keywordRegexes[Keyword.register].exec(text);\n                    if (match !== null) {\n                        registerNo = match[1];\n                    }\n                }\n                if (registerNo === null) {\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\n                    return result;\n                }\n                registerNo = parseInt(registerNo, 10);\n                if ((registerNo & (~0 << bits)) !== 0) {\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\n                    return result;\n                }\n                result.value = registerNo;\n                return result;\n            case Parameter.offset:\n            case Parameter.immediate:\n                //Label\n                let value = null;\n                let reference = this.linesByLabel[text];\n                if (reference !== undefined) {\n                    result.context = reference[0];\n                    if (reference[1] === null) {\n                        return result;\n                    }\n                    value = reference[1];\n                }\n                if (value === null && this.keywordRegexes[Keyword.char]) {\n                    let extraction = RegExp(this.keywordRegexes[Keyword.char]).exec(text);\n                    if (extraction !== null && extraction[1] !== undefined) {\n                        value = extraction[1].charCodeAt(0);\n                        if (value > 255) {\n                            result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\n                            return result;\n                        }\n                    }\n                }\n                if (value === null && this.keywordRegexes[Keyword.numeric] !== undefined) {\n                    let array = RegExp(this.keywordRegexes[Keyword.numeric]).exec(text);\n                    if (array !== null) {\n                        let radix = Assembler.radixes[array[2]] || 10;\n                        let interpretable = array[1];\n                        value = parseInt(interpretable, radix);\n                    }\n                }\n                if (value !== null && type === Parameter.offset) {\n                    value -= address;\n                    if (this.incrementOnFetch) {\n                        value -= instructionLength;\n                    }\n                }\n                if (value === null || isNaN(value)) {\n                    result.errorMessage = `args.valueUnrecognized(${text})`;\n                    return result;\n                }\n                else if (Utils.rangeCheck(value, bits) === false) {\n                    result.errorMessage = `args.outOfRange(${text})`;\n                    return result;\n                }\n                result.value = value;\n                return result;\n            default:\n                result.errorMessage = \"oak.paramUnsupported\";\n                return result;\n        }\n    }\n    static options(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        let options = \"\";\n        for (let i = 0; i < list.length; i++) {\n            let keyword = list[i];\n            if (keyword === \"\\\\\") {\n                console.log(\"INSTRUCTION SET WARNING: '\\\\' used as keyword. This behavior is undefined.\");\n                return null;\n            }\n            if (options === \"\") {\n                options = \"(?:\";\n            }\n            else {\n                options += \"|\";\n            }\n            options += keyword;\n        }\n        return options + \")\";\n    }\n    assemble(lines, pass) {\n        lines.map(line => line.addressThisPass = null);\n        let errors = [];\n        let assemblerModeText = true;\n        let address = 0;\n        for (var i in lines) {\n            let line = lines[i];\n            switch (pass) {\n                case 0: // Zero Pass - Minimum Possible Size\n                    assemblerModeText = line.initialProcess(this, assemblerModeText);\n                    if (line.invalidReason !== undefined) {\n                        errors.push(line);\n                    }\n                    if (line.label !== undefined) {\n                        this.linesByLabel[line.label] = [line, null];\n                    }\n                    break;\n                default:\n                    line.addressThisPass = address;\n                    let asm = line.assemble(this, lines, address); // Assumption: Instruction cannot become context-sensitive based on size\n                    if (asm[0] !== null) {\n                        errors.push(line);\n                    }\n                    if (asm[1]) {\n                        return null; // Repass\n                    }\n                    address += line.machineCode.length;\n            }\n        }\n        return errors;\n    }\n}\n\nAssembler.radixes = {\n    'b': 2,\n    'o': 8,\n    'd': 10,\n    'h': 16\n};\nAssembler.radixList = Object.keys(Assembler.radixes).join(\"\");\n\nAssembler.escapedCharacters = {\n    '0': 0,\n    't': 9,\n    'n': 10,\n    'r': 13,\n    '\\'': 47,\n    '\"': 42\n};\n\nAssembler.escapedCharacterList = Object.keys(Assembler.escapedCharacters).join(\"\");\n","import { Parameter } from \"./InstructionSet.js\";\nimport { Utils } from \"./Utils.js\";\n\nexport class CoreFactory {\n    constructor() {\n        this.ISAs = {};\n    }\n\n    getCoreList() {\n        return Object.keys(this.ISAs);\n    }\n    \n    getCore(architecture, memorySize, virtualOS, options) {\n        let isa = this.ISAs[architecture];\n        if (isa === undefined) {\n            throw \"oak.unregisteredISA\";\n        }\n        for (let key in options) {\n            if (isa.options[key] === undefined) {\n                throw \"isa.unsupportedOptions\";\n            }\n        }\n        let instructionSet = isa.generator(options);\n        return new isa.core(memorySize, virtualOS, instructionSet);\n    }\n}\n\n\nexport class Core {\n    //Returns bytes on success, null on failure\n    memcpy(address, bytes) {\n        if (((address + bytes) >>> 0) > this.memorySize) {\n            return null;\n        }\n        let result = [];\n        for (let i = 0; i < bytes; i++) {\n            result.push(this.memory[address + i]);\n        }\n        return result;\n    }\n    //Returns boolean indicating success\n    //Use to store machine code in memory so it can be executed.\n    memset(address, bytes) {\n        if (address < 0) {\n            return false;\n        }\n        if (address + bytes.length > this.memorySize) {\n            return false;\n        }\n        for (let i = 0; i < bytes.length; i++) {\n            this.memory[address + i] = bytes[i];\n        }\n        return true;\n    }\n    decode() {\n        let insts = this.instructionSet.instructions;\n        this.decoded = null;\n        this.arguments = [];\n        for (let i = 0; i < insts.length; i++) {\n            if (insts[i].match(this.fetched)) {\n                this.decoded = insts[i];\n                break;\n            }\n        }\n        if (this.decoded === null) {\n            return null;\n        }\n        let bitRanges = this.decoded.format.ranges;\n        for (let i in bitRanges) {\n            let range = bitRanges[i];\n            if (range.parameter != null) {\n                let limit = range.limitStart;\n                let value = ((this.fetched >>> range.start) & ((1 << range.bits) - 1)) << limit;\n                if (range.parameterType === Parameter.special) {\n                    value = this.decoded.format.decodeSpecialParameter(value, this.pc); //Unmangle...\n                }\n                this.arguments[range.parameter] = this.arguments[range.parameter] || 0;\n                this.arguments[range.parameter] = this.arguments[range.parameter] | value;\n                if (this.decoded.format.ranges[i].signed && range.parameterType !== Parameter.register) {\n                    this.arguments[range.parameter] = Utils.signExt(this.arguments[range.parameter], range.totalBits ? range.totalBits : range.bits);\n                }\n            }\n        }\n        return this.instructionSet.disassemble(this.decoded, this.arguments);\n    }\n    //Returns null on success, error message on error.\n    execute() {\n        return this.decoded.executor(this);\n    }\n}\n\nCore.factory = new CoreFactory();","import { VirtualOS } from \"./VirtualOS.js\";\nimport { Endianness } from \"./InstructionSet.js\";\nimport { Line, Assembler } from \"./Assembler\";\nimport { Core } from \"./Core\";\n\nexport default {\n    VirtualOS: VirtualOS,\n    Endianness: Endianness,\n    Assembler: Assembler,\n    Line: Line,\n    Core: Core\n};","import React, { Component } from 'react'\nimport Input from '../modules/input'\nimport Select from '../modules/select'\nimport OakJS from '../oak';\n\nimport { connect } from 'react-redux';\nimport { withLocalize } from \"react-localize-redux\";\nimport { setProjectSettings } from \"../actions\"\n\nclass PanelSettings extends Component {\n    static display_name = \"settings\";\n\n    handleFileName = (event) => {\n        this.props.setProjectSettings(event.target.value, this.props.project_settings.memory_size, this.props.project_settings.isa);\n    }\n\n    handleISA = (event) => {\n        this.props.setProjectSettings(this.props.project_settings.file_name, this.props.project_settings.memory_size, event.target.value);\n    }\n\n    handleMemorySize = (event) => {\n        const re = /^[0-9\\b]+$/;\n    \n        if (event.target.value === '' || re.test(event.target.value)) {\n            this.props.setProjectSettings(this.props.project_settings.file_name, event.target.value, this.props.project_settings.isa);\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.submitChanges();\n    };\n\n    render() {\n        let isas = OakJS.Core.factory.getCoreList();\n        \n        return (\n            <div id=\"panel_settings\" className=\"panel panel_settings\">\n                <form onSubmit={this.handleSubmit}>\n                    <Input onChange={this.handleFileName} value={this.props.project_settings.file_name} icon=\"images/icons/input_name.svg\" placeholder=\"File Name\" id=\"filename\" />\n                    <Select onChange={this.handleISA} value={this.props.project_settings.isa} icon=\"images/icons/input_code.svg\" placeholder=\"Instruction Set\" >\n                        {isas.map((isa, i) => {\n                            return <option key={isa} value={isa}>{isa}</option>\n                        })}\n                    </Select>\n                    <Input onChange={this.handleMemorySize} value={this.props.project_settings.memory_size} icon=\"images/icons/input_memory.svg\" placeholder=\"Memory Size (Bytes)\" type=\"number\" />\n\n                    <input className=\"button\" value=\"Accept Changes\" type=\"submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nconst appStateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab,\n\t\tproject_settings: state.project_settings\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\n})\n\nexport default withLocalize(\n\tconnect(appStateToProps,\n\t\t\tappDispatchToProps\n\t)(PanelSettings));","import React, { Component } from 'react'\nimport Input from '../modules/input'\nimport Select from '../modules/select'\nimport {padNumber, parseToFloat, encodeFloat} from './numberttransform'\n\nexport default class PanelConversion extends Component {\n    static display_name = \"conversion\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: 0,\n            input_type: 0,\n            output_type: 0,\n            output: \"\",\n            has_value: false\n        };\n    }\n\n    calculateOutput = (val, in_type, out_type) => {\n        let input = val;\n        switch(in_type) {\n            case 0: // Hex\n                input = parseInt(input, 16);\n                break;\n            default:\n            case 1: // uint\n            case 2: // int\n                input = parseInt(input, 10);\n                break;\n            case 3: // bin\n                input = parseInt(input, 2);\n                break;\n            case 4: // float\n                input = encodeFloat(input);\n                break;\n        }\n    \n        if (input.toString() === \"NaN\")\n            return \"\";\n    \n        let output;\n        switch(out_type) {\n            case 0: // Hex\n                output = \"0x\"+padNumber((input >>> 0).toString(16), 8);\n                break;\n            case 1: // uint\n                output = (input >>> 0).toString(10);\n                break;\n            default:\n            case 2: // int\n                output = input.toString(10);\n                if (output > 2147483648) { output = output - 4294967296 }\n                break;\n            case 3: // bin\n                output = \"0b\"+padNumber((input >>> 0).toString(2), 32);\n                break;\n            case 4: // float\n                output = parseToFloat(input);\n                break;\n        }\n        \n        return output;\n    };\n\n    onChangeInput = (event) => {\n        let val = event.target.value;\n        let in_type = this.state.input_type;\n        let out_type = this.state.output_type;\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, has_value: (val !== \"\"), output: out});\n    };\n\n    onChangeInputType = (event) => {\n        let val = this.state.input;\n        let in_type = parseInt(event.target.value, 10);\n        let out_type = this.state.output_type;\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, input_type: in_type, has_value: (val !== \"\"), output: out});\n    };\n\n    onChangeOutputType = (event) => {\n        let val = this.state.input;\n        let in_type = this.state.input_type;\n        let out_type = parseInt(event.target.value, 10);\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, output_type: out_type, has_value: (val !== \"\"), output: out});\n    };\n\n    render() {\n        return (\n            <div id=\"panel_conversion\" className=\"panel panel_conversion\">\n                <Input onChange={this.onChangeInput} icon=\"images/icons/input_in.svg\" placeholder=\"Input\" type=\"text\" />\n                <Select onChange={this.onChangeInputType} icon=\"images/icons/input_type.svg\" placeholder=\"Input Type\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Integer</option>\n                    <option value=\"3\">Binary</option>\n                    {/*<option value=\"4\">Float</option>*/}\n                </Select>\n                <hr />\n                <Select onChange={this.onChangeOutputType} icon=\"images/icons/input_type.svg\" placeholder=\"Output Type\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Unsigned Integer</option>\n                    <option value=\"2\">Signed Integer</option>\n                    <option value=\"3\">Binary</option>\n                    {/*<option value=\"4\">Float</option>*/}\n                </Select>\n                <span className=\"conversion_output\">\n                    {this.state.output !==\"\" ? this.state.output : \"<Output>\"}\n                </span>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber, parseToFloat} from './numberttransform'\nimport { connect } from 'react-redux';\n\nconst REGISTER_UNASSIGNED = 0;\nconst REGISTER_ASSIGNED = 1;\nconst REGISTER_NEWASSIGNED = 2;\n\nclass PanelRegisters extends Component {\n    static display_name = \"registers\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            case 0: // Hex\n                return \"0x\"+padNumber((input >>> 0).toString(16), 8);\n            case 1: // uint\n                return (input >>> 0).toString(10);\n            default:\n            case 2: // int\n                let output = input.toString(10);\n                if (output > 2147483648) { output = output - 4294967296 }\n                return output;\n            case 3: // bin\n                return \"0b\"+padNumber((input >>> 0).toString(2), 32);\n            case 4: // float\n                return output = parseToFloat(input);\n        }\n    };\n\n    getChangedRegisterClass = (val) => {\n        switch(val) {\n            default:\n            case REGISTER_UNASSIGNED:\n                return \"reg_normal\";\n            case REGISTER_ASSIGNED:\n                return \"reg_assigned\";\n            case REGISTER_NEWASSIGNED:\n                return \"reg_new\";\n        }\n    }\n\n    render() {\n        let tab = this.props.tabs[this.props.selectedtab];\n        if (!(tab && tab.core))\n            return <div></div>;\n\n        let core = tab.core;\n        let registers = core.registerFile.physicalFile;\n        let register_changed = tab.register_changed;\n        let register_names = core.registerFile.abiNames;\n\n        return (\n            <div id=\"panel_registers\" className=\"panel panel_registers\">\n                <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Unsigned Integer</option>\n                    <option value=\"2\">Signed Integer</option>\n                    <option value=\"3\">Binary</option>\n                    <option value=\"4\">Float</option>\n                </Select>\n                <table cellSpacing=\"0\" cellPadding=\"0\">\n                    <thead>\n                        <tr><th>Reg</th><th>Value</th></tr>\n                    </thead>\n                    <tbody>\n                        {\n                            registers.map((register, i) => {\n                                let register_dpy = this.translateRegister(register);\n                                return (<tr key={i} className={this.getChangedRegisterClass(register_changed[i])}>\n                                    <td>\n                                        {register_names[i]}\n                                    </td>\n                                    <td data-info={register}>\n                                        {register_dpy}\n                                    </td>\n                                </tr>);\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelRegisters);","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber} from './numberttransform'\n\nimport { connect } from 'react-redux';\n\nclass PanelMachineCode extends Component {\n    static display_name = \"machine code\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            default:\n            case 0: // Hex\n                return padNumber((input >>> 0).toString(16), 2);\n            case 1: // uint\n                return padNumber((input >>> 0).toString(10), 3);\n            case 2: // octal\n                return padNumber((input >>> 0).toString(8), 3);\n            case 3: // bin\n                return padNumber((input >>> 0).toString(2), 8);\n        }\n    };\n\n    render() {\n        let tabs = this.props.tabs;\n        if (tabs.length === 0)\n            return <div></div>;\n            \n        let machinecode = tabs[this.props.selectedtab].machine_code;\n        let empty = machinecode.length === 0;\n        return (\n            <div id=\"panel_machine_code\" className=\"panel panel_machine_code\">\n                {empty && <span className=\"panel_empty\">Machine Code Empty</span>}\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Decimal</option>\n                    <option value=\"2\">Octal</option>\n                    <option value=\"3\">Binary</option>\n                </Select>}\n                \n                {!empty && machinecode.map((byte, i) => {\n                    let val = this.translateRegister(byte);\n                    return <span key={i}>{val} </span>;\n                })}\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelMachineCode);","\"use strict\";\nimport { Parameter, Keyword, Directive, Instruction, InstructionSet, Format, BitRange } from \"../oak/InstructionSet.js\";\nimport { Core } from \"../oak/Core.js\";\nimport { Utils } from \"../oak/Utils.js\";\n\n//The RISC-V Instruction Set Architecture, Version 2.1\nfunction RISCV(options) {\n    //Formats and Instructions\n    let formats = [];\n    let instructions = [];\n    let pseudoInstructions = [];\n    //R-Type\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"rs2\", 20, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b001, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b010, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTU\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b011, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.registerFile.read(core.arguments[2]) >>> 0)) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b100, 0b0000000], function (core) {\n        //\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRA\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b110, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b111, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    //I-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(2, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let iType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JALR\", iType, [\"opcode\", \"funct3\"], [0b1100111, 0b000], function (core) {\n        core.registerFile.write(core.arguments[0], core.pc + 4);\n        core.pc = (core.registerFile.read(core.arguments[1]) + Utils.signExt(core.arguments[2], 12));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b010], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b011], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\n        core.pc += 4;\n        return null;\n    }, false));\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b100], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b110], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b111], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    //IL Subtype\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\s*\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\n    let ilSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LB\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b000], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LH\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b001], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LW\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b010], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LBU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b100], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], bytes[0]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LHU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b101], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        core.pc += 4;\n        return null;\n    }));\n    // IS Subtype\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"shamt\", 20, 5).parameterized(2, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?0?[boxd]?[0-9A-F]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let isSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SLLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b001, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRAI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    //S-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 25, 7, null, true).parameterized(1, Parameter.immediate).limited(12, 5, 11),\n        new BitRange(\"rs2\", 20, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"imm\", 7, 5, null, true).parameterized(1, Parameter.immediate).limited(12, 0, 4),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\n    let sType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SB\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b000], function (core) {\n        let bytes = [];\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SH\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b001], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SW\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b010], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    //U-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 12, 20, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.offset),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let uType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LUI\", uType, [\"opcode\"], [0b0110111], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"AUIPC\", uType, [\"opcode\"], [0b0010111], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12) + core.pc);\n        core.pc += 4;\n        return null;\n    }));\n    //SB-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(2, Parameter.offset).limited(13, 12, 12),\n        new BitRange(\"imm\", 25, 6, null, true).parameterized(2, Parameter.offset).limited(13, 5, 10),\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"imm\", 8, 4, null, true).parameterized(2, Parameter.offset).limited(13, 1, 4),\n        new BitRange(\"imm\", 7, 1, null, true).parameterized(2, Parameter.offset).limited(13, 11, 11),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let sbType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"BEQ\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b000], function (core) {\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BNE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b001], function (core) {\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BLT\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b100], function (core) {\n        if (core.registerFile.read(core.arguments[0]) < core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BGE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b101], function (core) {\n        if (core.registerFile.read(core.arguments[0]) >= core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BLTU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b110], function (core) {\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) < (core.registerFile.read(core.arguments[1]) >>> 0)) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BGEU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b111], function (core) {\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) >= (core.registerFile.read(core.arguments[1]) >>> 0)) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    //UJ-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(1, Parameter.offset).limited(21, 20, 20),\n        new BitRange(\"imm\", 21, 10, null, true).parameterized(1, Parameter.offset).limited(21, 1, 10),\n        new BitRange(\"imm\", 20, 1, null, true).parameterized(1, Parameter.offset).limited(21, 11, 11),\n        new BitRange(\"imm\", 12, 8, null, true).parameterized(1, Parameter.offset).limited(21, 12, 19),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let ujType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JAL\", ujType, [\"opcode\"], [0b1101111], function (core) {\n        core.registerFile.write(core.arguments[0], core.pc + 4);\n        //console.log(core.pc);\n        core.pc += Utils.signExt(core.arguments[1], 21);\n        //console.log(core.arguments[1]);\n        return null;\n    }));\n    //System Type\n    //All-Const Type\n    formats.push(new Format([\n        new BitRange(\"const\", 0, 32)\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\n    let allConstSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ECALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], (core) => {\n        let result = core.virtualOS.ecall(core);\n        core.pc += 4;\n        return result;\n    }));\n    //PseudoInstructions\n    //This is a far from ideal implementation of pseudoinstructions and is only there for demo purposes.\n    //MV\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rs1\", 15, 5),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let mvPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct3\", \"rs1\", \"funct7\"], [0b0110011, 0b000, 0b00000, 0b0000000], function (core) {\n        return null; //Captured by and\n    }, false, [\"ADD\"]));\n    //LI\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let liPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\n        return null; //Captured by andi\n    }, false, [\"ADDI\"]));\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\n        return null; //Captured by andi\n    }, false, [\"ADDI\"]));\n    //JR pseudo\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true),\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\n    let jrPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JR\", jrPseudo, [\"opcode\", \"rd\", \"funct3\", \"imm\"], [0b1100111, 0b00000, 0b000, 0b000000000000], function (core) {\n        return null; //captured by jalr\n    }, false, [\"ADDI\"]));\n    //Scall, Syscall both as PseudoInstructions\n    instructions.push(new Instruction(\"SCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\n        return null; //captured by ecall\n    }, false, [\"ECALL\"]));\n    instructions.push(new Instruction(\"SYSCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\n        return null; //captured by ecall\n    }, false, [\"ECALL\"]));\n    let abiNames = ['zero', 'ra', 'sp', 'gp', 'tp', 't0', 't1', 't2', 's0', 's1', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 't3', 't4', 't5', 't6'];\n    let keywords = [];\n    keywords[Keyword.directive] = [\"\\\\.\"];\n    keywords[Keyword.comment] = [\"#\"];\n    keywords[Keyword.label] = [\"\\\\:\"];\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\n    keywords[Keyword.register] = [\"x\"];\n    let directives = [];\n    directives[\"text\"] = Directive.text;\n    directives[\"data\"] = Directive.data;\n    directives[\"string\"] = Directive.cString;\n    directives[\"byte\"] = Directive._8bit;\n    directives[\"half\"] = Directive._16bit;\n    directives[\"word\"] = Directive._32bit;\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, false, `    la a1, str\n    li a0, 4 #4 is the string print service number...\n    ecall\n    li a0, 10 #...and 10 is the program termination service number!\n    ecall\n.data\nstr:    .string \"Hello, World!\"`);\n}\nclass RISCVRegisterFile {\n    constructor(memorySize, abiNames) {\n        this.physicalFile = [];\n        this.modifiedRegisters = [];\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile.push(0);\n            this.modifiedRegisters.push(false);\n        }\n        this.memorySize = memorySize;\n        this.physicalFile[2] = memorySize; //stack pointer\n        this.abiNames = abiNames;\n    }\n    print() {\n        console.log(\"Registers\\n------\");\n        for (let i = 0; i < 32; i++) {\n            console.log(\"x\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\n        }\n        console.log(\"------\");\n    }\n    read(registerNumber) {\n        if (registerNumber === 0) {\n            return 0;\n        }\n        else {\n            return this.physicalFile[registerNumber];\n        }\n    }\n    write(registerNumber, value) {\n        this.physicalFile[registerNumber] = value;\n        this.modifiedRegisters[registerNumber] = true;\n    }\n    getRegisterCount() {\n        return 32;\n    }\n    getModifiedRegisters() {\n        let modReg = this.modifiedRegisters.slice();\n        for (let i = 0; i < this.getRegisterCount(); i++) {\n            this.modifiedRegisters[i] = false;\n        }\n        return modReg;\n    }\n    reset() {\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile[i] = 0;\n            this.modifiedRegisters[i] = false;\n        }\n        this.physicalFile[2] = this.memorySize;\n    }\n}\n;\nclass RISCVCore extends Core {\n    reset() {\n        this.pc = 0;\n        this.memory = [];\n        for (let i = 0; i < this.memorySize; i++) {\n            this.memory[i] = 0;\n        }\n        this.registerFile.reset();\n    }\n    fetch() {\n        if (this.pc < 0) {\n            return \"fetch.negativePC\";\n        }\n        let arr = this.memcpy(this.pc, 4);\n        if (arr === null) {\n            return \"fetch.invalidMemoryAccess\";\n        }\n        this.fetched = Utils.catBytes(arr);\n        return null;\n    }\n    constructor(memorySize, virtualOS, instructionSet) {\n        super();\n        this.virtualOSServiceRegister = 10;\n        this.virtualOSArgumentVectorStart = 11;\n        this.virtualOSArgumentVectorEnd = 17;\n        this.pc = 0 >>> 0;\n        this.memorySize = memorySize;\n        this.virtualOS = virtualOS;\n        this.instructionSet = instructionSet;\n        this.registerFile = new RISCVRegisterFile(memorySize, instructionSet.abiNames);\n        this.memory = new Array(memorySize);\n        for (let i = 0; i < memorySize; i++) {\n            this.memory[i] = 0;\n        }\n    }\n}\nCore.factory.ISAs[\"RISCV\"] = {\n    generator: RISCV,\n    core: RISCVCore,\n    options: []\n};\n","\"use strict\";\nimport { Parameter, Keyword, Directive, Instruction, InstructionSet, Format, BitRange } from \"../oak/InstructionSet.js\";\nimport { Core } from \"../oak/Core.js\";\nimport { Utils } from \"../oak/Utils.js\";\n\n//The MIPS Instruction Set Architecture\nfunction MIPS(options) {\n    //Formats and Instructions\n    let formats = [];\n    let instructions = [];\n    let pseudoInstructions = [];\n    //R-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDU\", rType, [\"opcode\", \"funct\"], [0x0, 0x21], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct\"], [0x0, 0x22], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUBU\", rType, [\"opcode\", \"funct\"], [0x0, 0x23], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct\"], [0x0, 0x24], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct\"], [0x0, 0x25], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"NOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x27], function (core) {\n        core.registerFile.write(core.arguments[0], ~(core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2])));\n        return null;\n    }));\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x26], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct\"], [0x0, 0x2A], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x04], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x06], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRAV\", rType, [\"opcode\", \"funct\"], [0x0, 0x07], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    //R-Jump Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rt\", 16, 5, 0),\n        new BitRange(\"rd\", 11, 5, 0),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\n    let rjSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JR\", rjSubtype, [\"opcode\", \"funct\"], [0x0, 0x08], function (core) {\n        core.pc = core.registerFile.read(core.arguments[0]);\n        return null;\n    }));\n    //R-Shift Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5).parameterized(2, Parameter.immediate),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*([0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rsSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SLL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x00], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRA\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\n        return null;\n    }));\n    //R-Constant Subtype\n    formats.push(new Format([\n        new BitRange(\"funct\", 0, 32)\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\n    let rcSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SYSCALL\", rcSubtype, [\"funct\"], [0xC], function (core) {\n        return core.virtualOS.ecall(core);\n    }));\n    //I-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let iType = formats[formats.length - 1];\n    //I-type instructions\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\"], [0x8], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDIU\", iType, [\"opcode\"], [0x9], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\"], [0x0A], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\"], [0x0B], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\"], [0x0C], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\"], [0x0D], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\"], [0x0E], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\n        return null;\n    }));\n    //I-Branch Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.offset).limited(18, 2, 17)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let ibSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"BEQ\", ibSubtype, [\"opcode\"], [0x04], function (core) {\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BNE\", ibSubtype, [\"opcode\"], [0x05], function (core) {\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        return null;\n    }));\n    //I Load Upper Immediate Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.register)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let iluiSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LUI\", iluiSubtype, [\"opcode\"], [0x0F], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 16));\n        return null;\n    }));\n    //I Load/Store Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*(\\$[A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg1(@arg2)\"));\n    let ilsSubtype = formats[formats.length - 1];\n    //TO-DO: Verify function(core) functionality\n    instructions.push(new Instruction(\"LB\", ilsSubtype, [\"opcode\"], [0x20], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LH\", ilsSubtype, [\"opcode\"], [0x21], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LW\", ilsSubtype, [\"opcode\"], [0x23], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LBU\", ilsSubtype, [\"opcode\"], [0x24], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], bytes[0]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"LHU\", ilsSubtype, [\"opcode\"], [0x25], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SB\", ilsSubtype, [\"opcode\"], [0x28], function (core) {\n        let bytes = [];\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\n        let writeAddress = core.registerFile.read(core.arguments[2]) + core.arguments[1];\n        if (core.memset(writeAddress, bytes)) {\n            // console.log(\"A0 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$a0\")));\n            // console.log(\"T1 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$t1\")));\n            // console.log(\"Wrote to \", writeAddress.toString(16));\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SH\", ilsSubtype, [\"opcode\"], [0x29], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SW\", ilsSubtype, [\"opcode\"], [0x2B], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    //J-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"imm\", 0, 26).parameterized(0, Parameter.special)\n    ], /^\\s*([A-Za-z]+)\\s*([A-Za-z0-9_]+)\\s*$/, \"@mnem @arg0\", function (text, type, bits, address, assembler) {\n        let result = {\n            errorMessage: null,\n            context: null,\n            value: null\n        };\n        //Label\n        let value = null;\n        let reference = assembler.linesByLabel[text];\n        if (reference !== undefined) {\n            result.context = reference[0];\n            if (reference[1] === null) {\n                return result;\n            }\n            value = reference[1];\n        }\n        if (value === null && assembler.keywordRegexes[Keyword.char]) {\n            let extraction = assembler.keywordRegexes[Keyword.char].exec(text);\n            if (extraction !== null && extraction[1] !== undefined) {\n                value = extraction[1].charCodeAt(0);\n                if (value > 255) {\n                    result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\n                    return result;\n                }\n            }\n        }\n        if (value === null && assembler.keywordRegexes[Keyword.numeric] !== undefined) {\n            let array = assembler.keywordRegexes[Keyword.numeric].exec(text);\n            if (array !== null) {\n                let radix = Assembler.radixes[array[2]] || 10;\n                let interpretable = array[1];\n                value = parseInt(interpretable, radix);\n            }\n        }\n        if (value === null || isNaN(value)) {\n            result.errorMessage = `args.valueUnrecognized(${text})`;\n            return result;\n        }\n        if ((value >>> 28) === (address >>> 28)) {\n            if ((value & 3) === 0) {\n                result.value = (value & 0x0ffffffc) >>> 2;\n            }\n            else {\n                result.errorMessage = `mips.wordUnlignedJump(${text})`;\n            }\n        }\n        else {\n            result.errorMessage = `args.outOfRange(${text})`;\n        }\n        return result;\n    }, function (value, address) {\n        return (value << 2) | (address & 0xf0000000);\n    }));\n    let jType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"J\", jType, [\"opcode\"], [0x2], function (core) {\n        core.pc = core.arguments[0];\n        return null;\n    }));\n    instructions.push(new Instruction(\"JAL\", jType, [\"opcode\"], [0x3], function (core) {\n        core.registerFile.write(31, core.pc);\n        core.pc = core.arguments[0];\n        return null;\n    }));\n    //Pseudoinstructions\n    //MV\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5, 0),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let mvPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\n        //Captured by ADD\n        return null;\n    }));\n    //LI/LA\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let liPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\"], [0x8], function (core) {\n        //Captured by ADDI\n        return null;\n    }));\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\"], [0x8], function (core) {\n        //Captured by ADDI\n        return null;\n    }));\n    let keywords = [];\n    keywords[Keyword.directive] = [\"\\\\.\"];\n    keywords[Keyword.comment] = [\"#\"];\n    keywords[Keyword.label] = [\"\\\\:\"];\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\n    keywords[Keyword.register] = [\"x\"];\n    let directives = [];\n    directives[\"text\"] = Directive.text;\n    directives[\"data\"] = Directive.data;\n    directives[\"asciiz\"] = Directive.cString;\n    directives[\"byte\"] = Directive._8bit;\n    directives[\"half\"] = Directive._16bit;\n    directives[\"word\"] = Directive._32bit;\n    let abiNames = [\"$zero\", \"$at\", \"$v0\", \"$v1\", \"$a0\", \"$a1\", \"$a2\", \"$a3\", \"$t0\", \"$t1\", \"$t2\", \"$t3\", \"$t4\", \"$t5\", \"$t6\", \"$t7\", \"$s0\", \"$s1\", \"$s2\", \"$s3\", \"$s4\", \"$s5\", \"$s6\", \"$s7\", \"$t8\", \"$t9\", \"$k0\", \"$k1\", \"$gp\", \"$sp\", \"$fp\", \"$ra\"];\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, true, `    la $a0, str\n    li $v0, 4 #4 is the string print service number...\n    syscall\n    li $v0, 10 #...and 10 is the program termination service number!\n    syscall\n.data\nstr:    .asciiz \"Hello, World!\"`);\n}\nclass MIPSRegisterFile {\n    constructor(memorySize, abiNames) {\n        this.physicalFile = [];\n        this.modifiedRegisters = [];\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile.push(0);\n            this.modifiedRegisters.push(false);\n        }\n        this.memorySize = memorySize;\n        this.physicalFile[29] = memorySize; //stack pointer\n        this.abiNames = abiNames;\n    }\n    print() {\n        console.log(\"Registers\\n------\");\n        for (let i = 0; i < 32; i++) {\n            console.log(\"$\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\n        }\n        console.log(\"------\");\n    }\n    read(registerNumber) {\n        if (registerNumber === 0) {\n            return 0;\n        }\n        else {\n            return this.physicalFile[registerNumber];\n        }\n    }\n    write(registerNumber, value) {\n        this.physicalFile[registerNumber] = value;\n        this.modifiedRegisters[registerNumber] = true;\n    }\n    getRegisterCount() {\n        return 32;\n    }\n    getModifiedRegisters() {\n        let modReg = this.modifiedRegisters.slice();\n        for (let i = 0; i < this.getRegisterCount(); i++) {\n            this.modifiedRegisters[i] = false;\n        }\n        return modReg;\n    }\n    reset() {\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile[i] = 0;\n            this.modifiedRegisters[i] = false;\n        }\n        this.physicalFile[29] = this.memorySize;\n    }\n}\n;\nclass MIPSCore extends Core {\n    reset() {\n        this.pc = 0;\n        this.memory = [];\n        for (let i = 0; i < this.memorySize; i++) {\n            this.memory[i] = 0;\n        }\n        this.registerFile.reset();\n    }\n    fetch() {\n        let arr = this.memcpy(this.pc, 4);\n        if (arr === null) {\n            return \"fetch.illegalMemoryAddress\";\n        }\n        this.pc += 4;\n        this.fetched = Utils.catBytes(arr);\n        return null;\n    }\n    constructor(memorySize, virtualOS, instructionSet) {\n        super();\n        this.virtualOSServiceRegister = 2;\n        this.virtualOSArgumentVectorStart = 4;\n        this.virtualOSArgumentVectorEnd = 7;\n        this.instructionSet = instructionSet;\n        this.pc = 0 >>> 0;\n        this.memorySize = memorySize;\n        this.virtualOS = virtualOS;\n        this.registerFile = new MIPSRegisterFile(memorySize, instructionSet.abiNames);\n        this.memory = new Array(memorySize);\n        for (let i = 0; i < memorySize; i++) {\n            this.memory[i] = 0;\n        }\n    }\n}\nCore.factory.ISAs[\"MIPS\"] = {\n    generator: MIPS,\n    core: MIPSCore,\n    options: []\n};\n","import React, { Component } from 'react';\nimport TextEditor from \"./sections/texteditor.js\";\nimport Navigation from \"./sections/navigation.js\";\nimport PanelContainer from \"./sections/panelcontainer.js\";\nimport PanelMemory from \"./sections/panelmemory.js\";\nimport PanelConsole from \"./sections/panelconsole.js\";\nimport PanelLog from \"./sections/panellog.js\";\nimport Help from './sections/help';\nimport About from './sections/about';\nimport Settings from './sections/settings';\nimport PanelSettings from './sections/panelsettings';\nimport PanelConversion from './sections/panelconversion';\nimport PanelRegisters from './sections/panelregisters';\n//import CoreContext from './coreContext';\nimport PanelMachineCode from './sections/panelmachinecode';\n\nimport './isas/RISCV';\nimport './isas/MIPS';\n\nimport OakJS from './oak';\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport enTranslations from \"./translations/en.json\";\n\nimport { selectTab, addTab, updateTab, setProjectSettings, setSettingsVisible, setHelpVisible, setAboutVisible } from \"./actions\"\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nconst REGISTER_UNASSIGNED = 0;\nconst REGISTER_ASSIGNED = 1;\nconst REGISTER_NEWASSIGNED = 2;\n\nconst CONSOLE_INPUT_NONE= 0;\nconst CONSOLE_INPUT_NUM = 1;\nconst CONSOLE_INPUT_STR = 2;\n\nconst decode_error_msg = <span><b>Error: </b>Failed to decode instruction. In practice, the most likely cause is forgetting to terminate the program using the appropriate system call (see help section).</span>;\n\nconst MessageType = {\n\tLog: 0,\n\tInput: 1,\n\tOutput: 2,\n\tSuccess: 3,\n\tWarning: 4,\n\tError: 5,\n};\n\nclass App extends Component {\n\tvirtual_os;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.props.initialize({\n\t\t\tlanguages: [\n\t\t\t  { name: \"English\", code: \"en\" }\n\t\t\t],\n\t\t\toptions: { renderToStaticMarkup }\n\t\t});\n\n\t\t// $.ajax({\n        //     type: \"POST\",\n        //     url: 'https://pastebin.com/api/api_post.php',\n        //     data: {\n        //         api_dev_key:    'fe832913bc53f77f05505bc93e3b04b1',\n        //         api_option:     'paste',\n        //         api_paste_code: \"Dude this is\\nHella cool\"\n        //     },\n        //     async:true,\n        //     dataType : 'text/plain',   //you may use jsonp for cross origin request\n        //     crossDomain:true,\n        //     headers: {\n        //         \"Access-Control-Allow-Origin\": \"*\",\n        //         \"Access-Control-Allow-Headers\": \"origin, content-type, accept\"\n        //     },\n        //     success: function(data, status, xhr) {\n        //         console.log(\"Pastebin success: \" + data);\n        //     }\n        // });\n\n        // $.ajax({\n        //     type: \"GET\",\n        //     url: 'https://pastebin.com/Tricwqr6',\n        //     data: {\n        //         api_dev_key:    'fe832913bc53f77f05505bc93e3b04b1',\n        //         api_option:     'paste',\n        //         api_paste_code: \"Dude this is\\nHella cool\"\n        //     },\n        //     async:true,\n        //     dataType : 'text/plain',   //you may use jsonp for cross origin request\n        //     crossDomain:true,\n        //     headers: {\n        //         \"Access-Control-Allow-Origin\": \"*\",\n        //         \"Access-Control-Allow-Headers\": \"origin, content-type, accept\"\n        //     },\n        //     success: function(data, status, xhr) {\n        //         console.log(\"Pastebin get success: \" + data);\n        //     }\n        // });\n\t\t\n\t\tthis.state = {\n\t\t\tpanel_x: 256,\n\t\t\tpanel_y: 256\n\t\t};\n\t\t\n\t\tthis.component_input = React.createRef();\n\n\t\twindow.addEventListener(\"keyup\", this.handleKeyPress);\n\t\t\n\t\tthis.props.addTranslationForLanguage(enTranslations, 'en');\n\n\t\tthis.virtual_os = new OakJS.VirtualOS(); // The virtual OS handles ecalls. It takes a bunch of callbacks: output Int, output String, etcetera...\n\t\tthis.virtual_os.inputInt = () => {\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\t\t\tif (tab) {\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_NUM;\n\t\t\t}\n\t\t};\n\n\t\tthis.virtual_os.inputString = () => {\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\t\t\tif (tab) {\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_STR;\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis.virtual_os.outputInt = (number) => {\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + number);\n\t\t};\n\n\t\tthis.virtual_os.outputString = (string) => {\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + string);\n\t\t};\n\n\t\tthis.virtual_os.handleHalt = () => {\n\t\t\tlet current_tab = this.props.selectedtab;\n\t\t\tlet tab = this.props.tabs[current_tab];\n\n\t\t\tif (!tab)\n\t\t\t\treturn;\n\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\n\t\t\tthis.addConsoleMessage(MessageType.Success, \" == SIMULATION COMPLETED == \");\n\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t};\n\t\t\n\t\tthis.addTabDefault();\n\t}\n\n\thandleKeyPress = (event) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab && tab.console_input_type !== CONSOLE_INPUT_NONE) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet input = tab.console_input;\n\t\t\tlet cursor = tab.cursor_pos;\n\n\t\t\tif (event.key === \"Enter\") {\n\t\t\t\tthis.continueAfterConsole(input);\n\t\t\t\ttab.console_input = \"\";\n\t\t\t}\n\t\t\telse if (event.which === 8) {\n\t\t\t\tif (cursor > 0) {\n\t\t\t\t\tlet val = input.slice(0, cursor - 1) + input.slice(cursor);\n\t\t\t\t\t\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\n\t\t\t\t\ttab.console_input = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.keyCode === 46) {\n\t\t\t\tif (cursor < input.length) {\n\t\t\t\t\tlet val = input.slice(0, cursor) + input.slice(cursor + 1);\n\t\t\t\t\t\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\n\t\t\t\t\ttab.console_input = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.keyCode === 37) {\n\t\t\t\tcursor = (cursor <= 0) ? 0 : cursor - 1;\n\t\t\t\ttab.cursor_pos = cursor;\n\t\t\t}\n\t\t\telse if (event.keyCode === 39) {\n\t\t\t\tlet l = tab.console_input.length;\n\t\t\t\tcursor = (cursor >= l) ? l : cursor + 1;\n\t\t\t\ttab.cursor_pos = l;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet out = event.key;\n\t\t\t\t\n\t\t\t\tconst keycode = event.keyCode;\n\t\t\t\tconst isNum = tab.console_input_type === CONSOLE_INPUT_NUM;\n\t\t\t\t\n\t\t\t\tvar valid = \n\t\t\t\t(keycode > 47 && keycode < 58)   || // number keys\n\t\t\t\t(!isNum && (keycode === 32 || keycode === 13   || // spacebar & return key(s) (if you want to allow carriage returns)\n\t\t\t\t(keycode > 64 && keycode < 91)   || // letter keys\n\t\t\t\t(keycode > 95 && keycode < 112)  || // numpad keys\n\t\t\t\t(keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n\t\t\t\t(keycode > 218 && keycode < 223)));\n\n\t\t\t\tif (valid) {\n\t\t\t\t\tout = input.slice(0, cursor) + out + input.slice(cursor);\n\t\t\t\t\ttab.console_input = out;\n\t\t\t\t\ttab.cursor_pos =  cursor + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.props.updateTab(current_tab, tab);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\taddConsoleMessage = (msg_type, data) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\t\t\n\t\tlet className;\n\t\tif (msg_type === MessageType.Error)\n\t\t\tclassName = \"console_error\";\n\t\telse if (msg_type === MessageType.Warning)\n\t\t\tclassName = \"console_warning\";\n\t\telse if (msg_type === MessageType.Success)\n\t\t\tclassName = \"console_success\";\n\t\telse if (msg_type === MessageType.Output)\n\t\t\tclassName = \"console_output\";\n\t\telse if (msg_type === MessageType.Input)\n\t\t\tclassName = \"console_input\";\n\t\telse\n\t\t\tclassName = \"console_log\";\n\t\t\n\t\ttab.console.push(<div className={className}>{data}</div>);\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\tcontinueAfterConsole = (input) => {\n\t\tlet selected = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[selected];\n\n\t\tlet core = tab.core;\n\n\t\tif (tab.console_input_type === CONSOLE_INPUT_NUM) {\n\t\t\tinput = parseInt(input, 10);\n\t\t\tthis.virtual_os.continueInputInt(core, input);\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\n\t\t} else if (tab.console_input_type === CONSOLE_INPUT_STR) {\n\t\t\tthis.virtual_os.continueInputString(core, input);\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\n\t\t}\n\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\n\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(selected, tab);\n\t}\n\n\tcheckUpdatedTabs = () => {\n\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\n\t\tvar mod_reg = tab.core.registerFile.getModifiedRegisters();\n\t\t\n\t\tfor(let i = 0; i < tab.register_changed.length; ++i) {\n\t\t\tif (mod_reg[i])\n\t\t\t\ttab.register_changed[i] = REGISTER_NEWASSIGNED;\n\t\t\telse if (tab.register_changed[i] ===  REGISTER_NEWASSIGNED)\n\t\t\t\ttab.register_changed[i] = REGISTER_ASSIGNED;\n\t\t}\n\t}\n\n\taddTabFull = (name, code, machine_code, mem_size, isa, get_example_code) => {\n\t\tlet selected = this.props.tabs.length;\n\t\t\n\t\tlet core = OakJS.Core.factory.getCore(isa, mem_size, this.virtual_os, []);\n\n\t\tlet new_tab = {\n\t\t\tname: name,\n\t\t\tcontent: get_example_code ? core.instructionSet.exampleCode : code,\n\t\t\tlog: [],\n\t\t\tconsole: [],\n\t\t\tmachine_code: machine_code,\n\t\t\tcore: core,\n\t\t\tregister_changed: [],\n\t\t\trunningStatus: SimulatingStatus.Stopped, \n\t\t\tinstruction_set: isa,\n\t\t\tconsole_input: \"\",\n\t\t\tconsole_input_type: CONSOLE_INPUT_NONE,\n\t\t\tcursor_pos: 0\n\t\t};\n\n\t\tnew_tab.register_changed = Array.from({ length: core.registerFile.physicalFile.length }, () => REGISTER_UNASSIGNED);\n\t\t\n\t\t// TODO: Send to Project Settings\n\t\tthis.props.setProjectSettings(name, mem_size, isa);\n\t\t\n\t\tthis.props.addTab(new_tab);\n\t\tthis.props.selectTab(selected);\n\t}\n\n\taddTab = (name, code, machine_code) => {\n\t\tthis.addTabFull(name, code, machine_code, 4096, this.getDefaultISA(), false);\n\t}\n\n\taddTabDefault = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, this.getDefaultISA(), true);\n\t}\n\n\taddTabDefaultRISCV = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"RISCV\", true);\n\t}\n\n\taddTabDefaultMIPS = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"MIPS\", true);\n\t}\n\n\tgetDefaultISA = () => {\n\t\treturn OakJS.Core.factory.getCoreList()[0];\n\t}\n\n\thandleUpload = (event) => {\n\t\tlet files = this.component_input.current.files;\n\t\tif (files.length <= 0) return;\n\n\t\tlet file = files[0];\n\t\tif (this.is_upload_bin) {\n\t\t\tlet name = file.name;\n\t\t\tlet blob = file.slice(0, file.size);\n\t\t\tlet fr = new FileReader();\n\t\t\tlet me = this;\n\t\t\tfr.addEventListener(\"load\", function ()\n\t\t\t{\n\t\t\t\tvar bytes = new Uint8Array(this.result);\n\t\t\t\tme.addTab(name, \"\", Array.from(bytes));\n\t\t\t});\n\t\t\tfr.readAsArrayBuffer(blob);\n\t\t}\n\t\telse {\n\t\t\tlet name = file.name;\n\t\t\tlet blob = file.slice(0, file.size);\n\t\t\tlet fr = new FileReader();\n\t\t\tlet me = this;\n\t\t\tfr.addEventListener(\"load\", function ()\n\t\t\t{\n\t\t\t\tlet res = this.result;\n\t\t\t\t\n\t\t\t\tme.addTab(name, res, []);\n\t\t\t});\n\t\t\tfr.readAsText(blob);\n\t\t}\n\t}\n\n\thandleLoadAsm = () => {\n\t\tthis.is_upload_bin = false;\n\t\tthis.component_input.current.click();\n\t}\n\n\thandleLoadBin = () => {\n\t\tthis.is_upload_bin = true;\n\t\tthis.component_input.current.click();\n\t}\n\n\thandleDownloadAsm = () => {\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.content;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\t\t\n\t\tvar el = document.createElement(\"a\");\n\t\tvar blob = new Blob([data],\n\t\t{\n\t\t\ttype: \"text/plain\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar name = tab.name + \".s\";\n\t\tel.setAttribute(\"href\", blobLink);\n\t\tel.setAttribute(\"download\", name);\n\t\tel.style.display = \"none\";\n\t\tdocument.body.appendChild(el);\n\t\tel.click();\n\t\tdocument.body.removeChild(el);\n\t}\n\t\n\tdownloadBin = () => {\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.machine_code;\n\t\tvar byteArray = new Uint8Array(data);\n\t\tvar blob = new Blob([byteArray],\n\t\t{\n\t\t\ttype: \"application/octet-stream\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar element = document.createElement(\"a\");\n\t\tvar name = tab.name + \".bin\";\n\t\telement.setAttribute(\"href\", blobLink);\n\t\telement.setAttribute(\"download\", name);\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element);\n\t}\n\n\tdownloadBinH = () => {\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tlet finalFile = tab.machine_code.map(byte=> byte.toString(16).padStart(2, \"0\")).join(\"\\n\");\n\n\t\tvar blob = new Blob([finalFile],\n\t\t{\n\t\t\ttype: \"text/plain\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar element = document.createElement(\"a\");\n\t\tvar name = tab.name + \".hex\";\n\t\telement.setAttribute(\"href\", blobLink);\n\t\telement.setAttribute(\"download\", name);\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element);\n\t}\n\n\tdownloadRam = () =>{\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.core.memory;\n\t\tvar byteArray = new Uint8Array(data);\n\t\tvar blob = new Blob([byteArray],\n\t\t{\n\t\t\ttype: \"application/octet-stream\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar element = document.createElement(\"a\");\n\t\tvar name = tab.name + \".bin\";\n\t\telement.setAttribute(\"href\", blobLink);\n\t\telement.setAttribute(\"download\", name);\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element)\n\t}\n\n\tresetUI = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\t\ttab.log = [];\n\t\ttab.console = [];\n\t\ttab.register_changed = Array.from({ length: tab.register_changed.length }, () => REGISTER_UNASSIGNED);\n\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\n\t\ttab.console_input = \"\";\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\n\t\ttab.cursor_pos = 0;\n\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\treset = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\n\t\ttab.core.reset();\n\t\tthis.resetUI();\n\t}\n\n\tuiSimulate = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\n\t\t\treturn;\n\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\n\t\t\tthis.uiAssemble();\n\n\t\tlet core =  tab.core;\n\n\t\ttab.runningStatus = SimulatingStatus.Play;\n\n\t\twhile (true) {\n\t\t\tlet fetch = core.fetch();\n\t\t\tif (fetch !== null) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\n\t\t\t\n\t\t\tif (decode === null) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, decode_error_msg);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttab.log.push(decode);\n\t\t\t}\n\t\t\n\t\t\tlet execute = core.execute();\n\t\t\tif (execute !== null) {\n\t\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\n\t\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\n\t\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\tuiStepByStep = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\n\t\t\treturn;\n\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\n\t\t\tthis.uiAssemble();\n\n\t\tlet core = tab.core;\n\n\t\ttab.runningStatus = SimulatingStatus.Step;\n\n\t\tlet fetch = core.fetch();\n\t\tif (fetch !== null) {\n\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t\treturn;\n\t\t}\n\t\n\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\n\t\t\n\t\tif (decode === null) {\n\t\t\tthis.addConsoleMessage(MessageType.Error, decode_error_msg);\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\ttab.log.push(decode);\n\t\t}\n\t\n\t\tlet execute = core.execute();\n\t\tif (execute !== null) {\n\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t}\n\t\t}\n\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\t\n\tuiAssemble = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\t\tvar val = tab.content;\n\t\tif (val === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar core = tab.core;\n\t\tthis.reset();\n\t\tlet assembler = new OakJS.Assembler(core.instructionSet, OakJS.Endianness.little);\n\t\t\n\t\tlet lines = OakJS.Line.arrayFromFile(val);\n\t\t\n\t\tlet passZero = assembler.assemble(lines, 0); // Assembler Pass 0. Returns Line array with errored lines, which are in line.invalidReason\n\t\tif (passZero.length !== 0) {\n\t\t\tfor (let i in passZero) {\n\t\t\t\tlet line = passZero[i];\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Assembly error on line {line.number}:</b> {line.invalidReason}.</span>);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlet pass = null;\n\t\tlet passCounter = 1;\n\t\tdo { // Subsequent assembler passes. Typically one pass is needed, but when there's a lot of variance in ISA word sizes, another pass might be needed.\n\t\t\tpass = assembler.assemble(lines, passCounter);\n\t\t\tif (pass.length !== 0) {\n\t\t\t\tfor (let i in pass) {\n\t\t\t\t\tlet line = pass[i];\n\t\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Assembly error on line {line.number}:</b> {line.invalidReason}.</span>);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpassCounter += 1;\n\t\t} while (pass === null);\n\n\t\tlet machineCode = lines.map(line=> line.machineCode).reduce((a, b)=> a.concat(b), []); // Get machine code from lines\n\t\tcore.memset(0, machineCode); // memset\n\n\t\tthis.checkUpdatedTabs();\n\n\t\tlet error = false; //output.errorMessage===null;\n\t\tif (!error) {\n\t\t\ttab.machine_code = machineCode;\n\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete:</b> Assembly succeeded.</span>);\n\t\t}\n\t\telse {\n\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error:</b> Assembler failed.</span>);\n\t\t}\n\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\thandleSettingsChange = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (!tab)\n\t\t\treturn;\n\n\t\tlet file_name = this.props.project_settings.file_name;\n\t\tlet isa_type = this.props.project_settings.isa;\n\t\tlet memory_size = this.props.project_settings.memory_size;\n\n\t\ttab.name = file_name;\n\n\t\tlet diff_isa = isa_type !== tab.instruction_set;\n\t\tlet diff_mem = memory_size !== tab.core.memorySize;\n\n\t\tlet new_isa_found = false;\n\n\t\tif (diff_isa || diff_mem) {\n\t\t\tlet instruction_sets = OakJS.Core.factory.ISAs;\n\t\t\tif (instruction_sets[isa_type]) {\n\t\t\t\tnew_isa_found = true;\n\t\t\t\ttab.core = OakJS.Core.factory.getCore(isa_type, memory_size, this.virtual_os, []);\n\t\t\t\ttab.instruction_set = isa_type;\n\t\t\t\tthis.resetUI();\n\t\t\t}\n\n\t\t\tif (!new_isa_found) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error: </b>Could not find ISA {isa_type}.</span>);\n\t\t\t}\n\t\t}\n\n\t\tthis.props.updateTab(current_tab, tab);\n\n\t\tif (new_isa_found) {\n\t\t\tif (diff_isa)\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed ISA to {isa_type}.</span>);\n\n\t\t\tif (diff_mem)\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed memory size to {memory_size}.</span>);\n\t\t}\n\t}\n\n\thandleStartDragX = (event) => {\n\t\twindow.addEventListener(\"mousemove\", this.handleDragX);\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragX);\n\t}\n\n\thandleX = (event) => {\n\t\tlet x = event.pageX;\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\t\tx = w - x;\n\n\t\tif (x < 200) {\n\t\t\tx = 200;\n\t\t}\n\t\telse if (x > w - 200) {\n\t\t\tx = w - 200;\n\t\t}\n\n\t\tthis.setState({panel_x: x});\n\t}\n\n\thandleX = (event) => {\n\t\tlet x = event.pageX;\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\t\tx = w - x;\n\n\t\tif (x < 150) {\n\t\t\tx = 150;\n\t\t}\n\t\telse if (x > w - 200) {\n\t\t\tx = w - 200;\n\t\t}\n\n\t\tthis.setState({panel_x: x});\n\t}\n\n\thandleY = (event) => {\n\t\tlet y = event.pageY + 20;\n\t\tlet h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\t\ty =  h - y;\n\t\t\n\t\tif (y < 50) {\n\t\t\ty = 50;\n\t\t}\n\t\telse if (y > h - 50) {\n\t\t\ty = h - 50;\n\t\t}\n\n\t\tthis.setState({panel_y: y});\n\t}\n\n\thandleDragX = (event) => {\n\t\tthis.handleX(event);\n\t}\n\n\thandleStopDragX = (event) => {\n\t\tthis.handleX(event);\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragX);\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragX);\n\t}\n\n\thandleStartDragY = (event) => {\n\t\twindow.addEventListener(\"mousemove\", this.handleDragY);\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragY);\n\t}\n\n\thandleDragY = (event) => {\n\t\tthis.handleY(event);\n\t}\n\n\thandleStopDragY = (event) => {\n\t\tthis.handleY(event);\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragY);\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragY);\n\t}\n\n\tshowSettings = () => {\n\t\tthis.props.setSettingsVisible(true);\n\t}\n\n\tshowHelp = () => {\n\t\tthis.props.setHelpVisible(true);\n\t}\n\n\tshowAbout =  () => {\n\t\talert(1);\n\t\tthis.props.setAboutVisible(true);\n\t}\n\n\trender() {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tlet has_tabs = this.props.tabs.length > 0;\n\t\tlet show_input = false;\n\t\t\n\t\tif (tab)\n\t\t\tshow_input = tab.console_input_type !== CONSOLE_INPUT_NONE;\n\t\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<About />\n\t\t\t\t<Help />\n\t\t\t\t<Settings\n\t\t\t\t\tcanhandleinput={!show_input}\n\t\t\t\t\tfn_new={this.addTabDefault}\n\t\t\t\t\tfn_load={this.handleLoadAsm}\n\t\t\t\t\tfn_save={this.handleDownloadAsm}\n\t\t\t\t\tfn_ass={this.uiAssemble}\n\t\t\t\t\tfn_sim={this.uiSimulate}\n\t\t\t\t\tfn_step={this.uiStepByStep} />\n\t\t\t\t<Navigation\n\t\t\t\t\tassemble={this.uiAssemble}\n\t\t\t\t\tsimulate={this.uiSimulate}\n\t\t\t\t\tstepbystep={this.uiStepByStep}\n\t\t\t\t\tdownloadRam={this.downloadRam}\n\t\t\t\t\tdownloadBin={this.downloadBin}\n\t\t\t\t\tdownloadBinH={this.downloadBinH}\n\t\t\t\t\thandleAddTabRiscv={this.addTabDefaultRISCV}\n\t\t\t\t\thandleAddTabMips={this.addTabDefaultMIPS}\n\t\t\t\t\thandleLoadAsm={this.handleLoadAsm}\n\t\t\t\t\thandleLoadBin={this.handleLoadBin}\n\t\t\t\t\thandleDownloadAsm={this.handleDownloadAsm}\n\t\t\t\t/>\n\t\t\t\t{!has_tabs && <div className=\"no_tabs\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2><Translate id=\"welcome.title\">Welcome to Oak.js</Translate></h2>\n\t\t\t\t\t\t<p><Translate id=\"welcome.subtitle\">Oak.js is an online javascript IDE, Assembler, Disassembler, and Simulator for assembly languages such as RISC-V and MIPS.</Translate></p>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.addTabDefault}><Translate id=\"menus.add_tab\">Add a Tab</Translate></button>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadAsm}><Translate id=\"menus.load_assembly\">Load Assembly</Translate></button>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadBin}><Translate id=\"menus.load_binary\">Load Binary</Translate></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t\t{has_tabs && <div className=\"grid\" style={{gridTemplateColumns: `auto ${this.state.panel_x}px`, gridTemplateRows: `auto calc(${this.state.panel_y}px)`}}>\n\t\t\t\t\t<TextEditor is_disabled={show_input} addTab={this.addTabDefault} />\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragY} className=\"panel_bottom\">\n\t\t\t\t\t\t<PanelConsole show_input={show_input} input={tab.console_input} />\n\t\t\t\t\t\t<PanelMachineCode />\n\t\t\t\t\t\t<PanelMemory />\n\t\t\t\t\t\t<PanelLog />\n\t\t\t\t\t</PanelContainer>\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragX} className=\"panel_side\">\n\t\t\t\t\t\t<PanelSettings submitChanges={this.handleSettingsChange} />\n\t\t\t\t\t\t<PanelRegisters />\n\t\t\t\t\t\t<PanelConversion />\n\t\t\t\t\t</PanelContainer>\n\t\t\t\t</div>}\n\t\t\t\t<input type=\"file\" onChange={this.handleUpload} ref={this.component_input} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst appStateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab,\n\t\tproject_settings: state.project_settings\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\taddTab: (tab) => dispatch(addTab(tab)),\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\n\tselectTab: (id) => dispatch(selectTab(id)),\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i)),\n\tsetHelpVisible: (visible) => dispatch(setHelpVisible(visible)),\n\tsetAboutVisible: (visible) => dispatch(setAboutVisible(visible)),\n\tsetSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n\tconnect(appStateToProps,\n\t\t\tappDispatchToProps\n\t)(App));","const tabReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TAB':\n            return [\n                ...state,\n                action.tab\n            ];\n        case 'UPDATE_TAB': {\n            return state.map((t, index) => {\n                if (index === action.index) {\n                    return Object.assign({}, t, action.tab);\n                }\n              \n              return t;\n            });\n        }\n        case 'DELETE_TAB':\n            return [\n                ...state.slice(0, action.id),\n                ...state.slice(action.id + 1)\n            ];\n        default:\n            return state;\n    }\n}\n  \nexport default tabReducer;","const selectedTabReducer = (state = 0, action) => {\n    switch (action.type) {\n        case 'SELECT_TAB':\n            return action.id;\n        default:\n            return state;\n    }\n}\n  \nexport default selectedTabReducer;","const globalSettingsReducer = (state = {}, action) => {\n    return state;\n}\n  \nexport default globalSettingsReducer;","const projectSettingsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'UPDATE_PROJECT_SETTINGS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n  \nexport default projectSettingsReducer;","const selectedTabReducer = (state = {\n    settings: false,\n    help: false\n}, action) => {\n    switch (action.type) {\n        case 'SET_HELP_VISIBLE':\n            return {\n                ...state,\n                help: action.state\n            };\n        case 'SET_ABOUT_VISIBLE':\n            return {\n                ...state,\n                about: action.state\n            };\n        case 'SET_SETTINGS_VISIBLE':\n            return {\n                ...state,\n                settings: action.state\n            };\n        default:\n            return state;\n    }\n}\n  \nexport default selectedTabReducer;","import { combineReducers } from 'redux';\nimport tabs from './tab';\nimport selectedtab from './selectedtab';\nimport global_settings from './globalsettings';\nimport project_settings from './projectsettings';\nimport panel_visibility from './setvisibility';\nimport { localizeReducer } from \"react-localize-redux\";\n\nexport default combineReducers({\n    tabs,\n    selectedtab,\n    global_settings,\n    project_settings,\n    panel_visibility,\n    localize: localizeReducer\n});","// React Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App Imports\nimport App from './app';\n\n// Redux Store Imports\nimport allReducers from './reducers'\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\n// Create a store...\nconst store = createStore(\n    // ... with the list of all reducers\n    allReducers,\n    {},\n    // ...connext it to the dev tools\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n// Render the app with an attached memory store to the element #root\nReactDOM.render(\n    <LocalizeProvider store={store}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </LocalizeProvider>,\n    \n    document.getElementById('root'));\n"],"sourceRoot":""}