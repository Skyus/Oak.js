{"version":3,"sources":["actions/index.js","sections/texteditor.js","sections/navigation.js","sections/panelcontainer.js","modules/select.js","sections/numberttransform.js","sections/panelmemory.js","sections/panelconsole.js","sections/panellog.js","backend.js","sections/help.js","developer_list.js","sections/about.js","modules/hotkey.js","sections/settings.js","modules/input.js","sections/panelsettings.js","sections/panelconversion.js","sections/panelregisters.js","sections/panelmachinecode.js","app.js","reducers/tab.js","reducers/selectedtab.js","reducers/globalsettings.js","reducers/projectsettings.js","reducers/setvisibility.js","reducers/index.js","index.js"],"names":["Actions","setSettingsVisible","state","type","setHelpVisible","setAboutVisible","selectTab","id","updateTab","index","tab","setProjectSettings","n","s","i","payload","file_name","memory_size","isa","TextEditor","addTab","_this","props","handleTabChange","tabs","name","core","memorySize","instruction_set","handleTabClose","event","stopPropagation","selected","selectedtab","Math","min","max","length","deleteTab","setEditorValue","val","current_tab","content","_this2","this","react_default","a","createElement","className","map","onClick","key","lib_default","mode","theme","onChange","width","height","value","readOnly","is_disabled","editorProps","$blockScrolling","Infinity","Component","connect","dispatch","ownProps","SimulatingStatus","Navigation","assemble_css","runningStatus","console_input_type","handleAddTabRiscv","react_localize_redux_es","handleAddTabMips","handleLoadAsm","handleLoadBin","handleDownloadAsm","downloadBin","downloadRam","showSettings","showHelp","showAbout","assemble","concat","simulate","stepbystep","withLocalize","visible","PanelContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderTabs","React","Children","children","child","display_name","e","handleClickTab","preventDefault","setState","childrenProps","cloneElement","onMouseDown","handleStartDrag","Select","style","backgroundImage","icon","placeholder","padNumber","str","padded","parseToFloat","num","PanelMemory","handleType","register_type","parseInt","target","translateRegister","input","toString","memory","empty","select_Select","defaultValue","byte","PanelConsole","log","console","running","line","show_input","PanelLog","instruction","Utils","Kind","Help","handleClose","handleStopClose","options","renderInnerHtml","panel_visibility","help","developer_list","affiliation","pic","job","link","desc","additional","translators","About","printdev","arr","element","href","src","devs","lang","about","HotkeyInput","handleClick","capturing","window","addEventListener","handleKey","toLowerCase","shift","shiftKey","ctrl","ctrlKey","alt","altKey","key_name","removeEventListener","save","testKey","key_ctrl","key_alt","key_shift","setKey","done","arguments","undefined","getKey","setKeyStr","upos","indexOf","mods","substr","combo","c","tabIndex","themes","Settings","canhandleinput","cancel","hotkey","comp_new","current","comp_load","comp_save","comp_assemble","comp_step","comp_sim","hotkeyfns","fn_new","fn_load","fn_save","fn_ass","fn_step","fn_sim","setDefaults","setTheme","setDefaultsSave","saveSettings","d","Date","setTime","getTime","exp","toUTCString","document","cookie","continuefn","includes","forEach","getElementById","disabled","handleISA","default_isa","handleTheme","acceptCookies","use_cookies","deleteAllCookies","cookies","split","eqPos","createRef","has_cookies","ca","charAt","substring","eq","display","position","colSpan","hotkey_HotkeyInput","ref","settings","Input","signExt","bits","mutableValue","rangeCheck","catBytes","bytes","bigEndian","reverse","storage","pad","number","digits","radix","hex","array","hexadecimal","hexRepresentation","toUpperCase","String","prototype","interpretedBytes","hexes","isNaN","push","hasPrefix","needle","Parameter","Endianness","Keyword","Directive","Line","raw","addressThisPass","sensitive","machineCode","kind","noise","sensitivityList","possibleInstructions","assembler","text","tmp","keywordRegexes","comment","exec","pieces","label","processed","directive","captures","RegExp","directives","directiveData","data","invalidReason","instructionSet","instructions","match","format","regex","mnemonic","slice","minimum","fill","count","zeroDelimitedString","_32bit","_16bit","_8bit","elements","cString","string","generalCharacters","characters","found","character","charCodeAt","Assembler","escapedCharacters","isInstruction","lines","address","candidates","testingInstructions","possibleInstruction","args","template","j","ranges","range","parameter","limited","totalBits","store","parameterType","special","processSpecialParameter","process","errorMessage","context","register","startBit","limitStart","endBit","limitEnd","start","smallestPossibleInstruction","filter","pi","immediate","stored","offset","result","assembleText","assembleData","lineByLabel","linesByLabel","sensor","sensorLength","newAssembly","file","endianness","memoryMap","incrementOnFetch","keywords","words","numeric","radixList","charMarker","escapable","escapedCharacterList","char","stringMarker","instructionLength","abiNames","registerNo","reference","extraction","radixes","interpretable","pass","errors","assemblerModeText","initialProcess","asm","list","keyword","b","o","h","keys","join","0","t","r","'","\"","BitRange","field","constant","signed","parameterDefaultValue","Format","disassembly","decodeSpecialParameter","Instruction","constants","constValues","executor","signatoryOverride","pseudoInstructionFor","computedBits","computedMask","computedTemplate","machineCodeMutable","maskBits","mask","bit","ceil","before","end","addition","after","temp","InstructionSet","formats","pseudoInstructions","exampleCode","sort","output","replace","VirtualOS","continueInputString","reg","virtualOSArgumentVectorStart","arg","registerFile","read","memset","continueInputInt","write","service","virtualOSServiceRegister","outputInt","iterator","memcpy","outStr","fromCharCode","outputString","inputInt","inputString","handleHalt","Core","insts","decoded","fetched","bitRanges","limit","pc","disassemble","CoreFactory","ISAs","architecture","virtualOS","generator","RISCVRegisterFile","physicalFile","modifiedRegisters","registerNumber","modReg","getRegisterCount","RISCVCore","virtualOSArgumentVectorEnd","Array","reset","parameterized","rType","iType","ilSubtype","isSubtype","sType","uType","sbType","ujType","allConstSubtype","ecall","mvPseudo","liPseudo","jrPseudo","MIPSRegisterFile","MIPSCore","_this3","rjSubtype","rsSubtype","rcSubtype","ibSubtype","iluiSubtype","ilsSubtype","writeAddress","jType","backend","PanelSettings","handleFileName","project_settings","handleMemorySize","test","handleSubmit","submitChanges","isas","OakJS","getCoreList","onSubmit","input_Input","PanelConversion","calculateOutput","in_type","out_type","onChangeInput","input_type","output_type","out","has_value","onChangeInputType","onChangeOutputType","REGISTER_UNASSIGNED","REGISTER_ASSIGNED","REGISTER_NEWASSIGNED","PanelRegisters","getChangedRegisterClass","registers","register_changed","register_names","cellSpacing","cellPadding","register_dpy","data-info","PanelMachineCode","machinecode","machine_code","Stopped","Step","Play","CONSOLE_INPUT_NONE","CONSOLE_INPUT_NUM","CONSOLE_INPUT_STR","decode_error_msg","MessageType","Log","Output","Success","Warning","Error","App","handleKeyPress","console_input","cursor","cursor_pos","continueAfterConsole","which","keyCode","l","keycode","isNum","addConsoleMessage","msg_type","virtual_os","checkUpdatedTabs","mod_reg","getModifiedRegisters","addTabFull","code","mem_size","get_example_code","getCore","new_tab","from","getDefaultISA","addTabDefault","addTabDefaultRISCV","addTabDefaultMIPS","handleUpload","files","component_input","is_upload_bin","blob","size","fr","FileReader","me","assertThisInitialized","Uint8Array","readAsArrayBuffer","res","readAsText","click","el","Blob","blobLink","URL","createObjectURL","setAttribute","body","appendChild","removeChild","byteArray","resetUI","uiSimulate","uiAssemble","fetch","decode","execute","uiStepByStep","little","arrayFromFile","passZero","passCounter","reduce","handleSettingsChange","isa_type","diff_isa","diff_mem","new_isa_found","handleStartDragX","handleDragX","handleStopDragX","handleX","x","pageX","w","innerWidth","documentElement","clientWidth","panel_x","handleY","y","pageY","innerHeight","clientHeight","panel_y","handleStartDragY","handleDragY","handleStopDragY","alert","initialize","languages","renderToStaticMarkup","addTranslationForLanguage","enTranslations","has_tabs","Fragment","navigation","gridTemplateColumns","gridTemplateRows","texteditor","panelcontainer_PanelContainer","panelconsole","panelmachinecode","panelmemory","panellog","panelsettings","panelregisters","panelconversion_PanelConversion","tabReducer","action","toConsumableArray","assign","selectedTabReducer","globalSettingsReducer","projectSettingsReducer","objectSpread","combineReducers","global_settings","localize","localizeReducer","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","app"],"mappings":"kqKAAaA,eACG,cADHA,EAEA,UAFAA,EAGG,aAHHA,EAIG,aAJHA,EAKgB,0BALhBA,EAMS,mBANTA,EAOU,oBAPVA,EAQa,uBAGbC,EAAqB,SAACC,GAAD,MAAY,CAC1CC,KAAMH,EACNE,UAGSE,EAAiB,SAACF,GAAD,MAAY,CACtCC,KAAMH,EACNE,UAGSG,EAAkB,SAACH,GAAD,MAAY,CACvCC,KAAMH,EACNE,UAGSI,EAAY,SAAAC,GAAE,MAAK,CAC5BJ,KAAMH,EACNO,OAQSC,EAAY,SAACC,EAAOC,GAAR,MAAiB,CACtCP,KAAMH,EACNS,QACAC,QAQSC,EAAqB,SAACC,EAAGC,EAAGC,GAAP,MAAc,CAC5CX,KAAMH,EACNe,QAAS,CACLC,UAAWJ,EACXK,YAAaJ,EACbK,IAAKJ,YCzCPK,6MACLC,OAAS,WACRC,EAAKC,MAAMF,YAGZG,gBAAkB,SAAChB,GAClBc,EAAKC,MAAMhB,UAAUC,GACrB,IAAIG,EAAMW,EAAKC,MAAME,KAAKjB,GAEtBG,GACHW,EAAKC,MAAMX,mBAAmBD,EAAIe,KAAMf,EAAIgB,KAAKC,WAAYjB,EAAIkB,oBAInEC,eAAiB,SAACC,EAAOvB,GACxBuB,EAAMC,kBAEN,IAAIC,EAAWX,EAAKC,MAAMW,YACtBD,GAAYzB,IACfyB,GAAY,GAEbA,EAAWE,KAAKC,IAAID,KAAKE,IAAIJ,EAAU,GAAIX,EAAKC,MAAME,KAAKa,OAAS,GAEpEhB,EAAKC,MAAMhB,UAAU0B,GAErB,IAAItB,EAAMW,EAAKC,MAAME,KAAKQ,GAEtBtB,GACHW,EAAKC,MAAMX,mBAAmBD,EAAIe,KAAMf,EAAIgB,KAAKC,WAAYjB,EAAIkB,iBAGlEP,EAAKC,MAAMgB,UAAU/B,MAGtBgC,eAAiB,SAACC,GACjB,IAAIC,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAC1B/B,EAAIgC,QAAUF,EACdnB,EAAKC,MAAMd,UAAUiC,EAAa/B,4EAG1B,IAAAiC,EAAAC,KACJpB,EAAOoB,KAAKtB,MAAME,KAEtB,OACCqB,EAAAC,EAAAC,cAAA,QAAMxC,GAAG,cAAcyC,UAAU,eAChCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZxB,EAAKyB,IAAI,SAACvC,EAAKH,GACf,OACAsC,EAAAC,EAAAC,cAAA,MAAIG,QAAS,kBAAMP,EAAKpB,gBAAgBhB,IAAK4C,IAAK5C,EAAIyC,UAAYL,EAAKrB,MAAMW,cAAgB1B,EAAM,WAAa,IAC/GsC,EAAAC,EAAAC,cAAA,YAAOrC,EAAIe,MACXoB,EAAAC,EAAAC,cAAA,OAAKG,QAAS,SAACpB,GAAD,OAAWa,EAAKd,eAAeC,EAAOvB,SAGtDsC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,QAASN,KAAKxB,UAEtCyB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACAO,KAAK,OACLC,MAAM,SACNC,SAAUX,KAAKL,eACfiB,MAAM,OACNC,OAAO,GACPhC,KAAK,cACLuB,UAAU,cACVU,MAAOlC,EAAKoB,KAAKtB,MAAMW,aAAaS,QACpCiB,SAAUf,KAAKtB,MAAMsC,YACrBC,YAAa,CAACC,gBAAiBC,eAlEXC,aAuFVC,cAdM,SAAA/D,GACpB,MAAO,CACNsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIG,SAACiC,EAAUC,GAAX,MAAyB,CAChD7D,UAAW,SAACC,GAAD,OAAQ2D,EAAS5D,EAAUC,KACtCC,UAAW,SAACC,EAAOC,GAAR,OAAgBwD,EAAS1D,EAAUC,EAAOC,KACrD4B,UAAW,SAAC/B,GAAD,OAAQ2D,EDpDK,SAAA3D,GAAE,MAAK,CAC5BJ,KAAMH,EACNO,MCkDyB+B,CAAU/B,KACtCI,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAaoD,EAASvD,EAAmBC,EAAGC,EAAGC,OAGrDmD,CAGZ9C,UChGGiD,EACI,EAOJC,mLAEJ,IAAIC,EAAe,GACb5D,EAAOkC,KAAKtB,MAAME,KAAKoB,KAAKtB,MAAMW,aAYxC,OAVIvB,IACCA,EAAI6D,gBAAkBH,IACzBE,EAAe,mBATS,IAYrB5D,EAAI8D,qBACPF,GAAgB,4BAKjBzB,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,aAAayC,UAAU,cAC9BH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMmD,mBAAmB5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,yBACzDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMqD,kBAAkB9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,wBACxDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMsD,eAAe/B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,yBACrDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMuD,eAAehC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,uBACrDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMwD,mBAAmBjC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,6BACzDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAMyD,aAAalC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,2BACnDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAM0D,aAAanC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,6BAGrDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAM2D,cAAcpC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,oBACpDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAM4D,UAAUrC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,gBAChDsC,EAAAC,EAAAC,cAAA,MAAIG,QAASN,KAAKtB,MAAM6D,WAAWtC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,kBAGlDsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAS,WAAcE,QAASN,KAAKtB,MAAM8D,WACnDvC,EAAAC,EAAAC,cAAA,UAAQC,UAAS,WAAAqC,OAAaf,GAAgBpB,QAASN,KAAKtB,MAAMgE,WAClEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAS,gBAAAqC,OAAkBf,GAAgBpB,QAASN,KAAKtB,MAAMiE,sBArCnDvB,aAyDVwB,cACdvB,YAdoB,SAAA/D,GACpB,MAAO,CACNsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIM,SAACiC,EAAUC,GAAX,MAAyB,CACnDe,SAAU,SAACO,GAAD,OAAavB,EAAS9D,EAAeqF,KAC/CN,UAAW,SAACM,GAAD,OAAavB,EAAS7D,EAAgBoF,KACjDR,aAAc,SAACQ,GAAD,OAAavB,EAASjE,EAAmBwF,OAIvDxB,CAECI,ICvEmBqB,cACjB,SAAAA,EAAYpE,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA8C,IACfrE,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAnD,KAAMtB,KAYV0E,WAAa,WACT,OACInD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTiD,IAAMC,SAASjD,IAAI5B,EAAKC,MAAM6E,SAAU,SAACC,EAAOtF,GAAR,OACrC+B,EAAAC,EAAAC,cAAA,MAAIC,UAAY3B,EAAKnB,MAAM8B,WAAalB,EAAK,WAAY,GAAIqC,IAAKiD,EAAMjG,KAAKkG,aAAcnD,QAAS,SAACoD,GAAD,OAAOjF,EAAKkF,eAAeD,EAAGxF,KAC7HsF,EAAMjG,KAAKkG,kBAf5BhF,EAAKnB,MAAQ,CACT8B,SAAU,GAJCX,8EAQJiF,EAAGnD,GACdmD,EAAEE,iBACF5D,KAAK6D,SAAS,CAACzE,SAAUmB,qCAepB,IAAAR,EAAAC,KACGuD,EAAavD,KAAKtB,MAAlB6E,SACFO,EAAgBT,IAAMC,SAASjD,IAAIkD,EAAU,SAACC,EAAO7F,GACvD,OAAQoC,EAAKzC,MAAM8B,WAAazB,GAAO0F,IAAMU,aAAaP,KAE9D,OACIvD,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,kBAAkByC,UAAS,mBAAAqC,OAAqBzC,KAAKtB,MAAM0B,YAC/DH,EAAAC,EAAAC,cAAA,OAAK6D,YAAahE,KAAKtB,MAAMuF,gBAAiB7D,UAAU,eACvDJ,KAAKoD,aACLU,UAnC2B1C,aCAvB8C,mLAEb,OACIjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQQ,SAAUX,KAAKtB,MAAMiC,SAAUG,MAAOd,KAAKtB,MAAMoC,MAAOqD,MAAO,CAACC,gBAAe,iDAAA3B,OAAmDzC,KAAKtB,MAAM2F,KAA9D,OAClFrE,KAAKtB,MAAM6E,UAEhBtD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeJ,KAAKtB,MAAM4F,qBAPvBlD,aCF7B,SAASmD,EAAUC,EAAK/E,GAE3B,IADA,IAAIgF,EAASD,EACJtG,EAAI,EAAGA,EAAIuB,EAAS+E,EAAI/E,OAAQvB,IAErCuG,EAAS,IAAMA,EAEnB,OAAOA,EAGJ,SAASC,EAAaC,GACzB,OAAOA,MCLLC,cAGF,SAAAA,EAAYlG,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA4E,IACfnG,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAnD,KAAMtB,KAMVmG,WAAa,SAAC3F,GACVT,EAAKoF,SAAS,CAACiB,cAAeC,SAAS7F,EAAM8F,OAAOlE,MAAO,OAR5CrC,EAWnBwG,kBAAoB,SAACC,GACjB,OAAOzG,EAAKnB,MAAMwH,eACd,QACA,KAAK,EACD,OAAOP,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,GAAI,GAChD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,GAAI,KAnBpD1G,EAAKnB,MAAQ,CACTwH,cAAe,GAHJrG,wEAyBV,IAAAsB,EAAAC,KACDpB,EAAOoB,KAAKtB,MAAME,KACtB,GAAoB,IAAhBA,EAAKa,OACL,OAAOQ,EAAAC,EAAAC,cAAA,YAEX,IAAIiF,EAASxG,EAAKoB,KAAKtB,MAAMW,aAAaP,KAAKsG,OAC3CC,EAA0B,IAAlBD,EAAO3F,OACnB,OACIQ,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,eAAeyC,UAAU,sBAC5BiF,GAASpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,iBACRiF,GAASpF,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAK6E,WAAYR,KAAK,8BAA8BC,YAAY,eAAeiB,aAAa,KACrHtF,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,YAGFuE,GAASD,EAAO/E,IAAI,SAACmF,EAAMtH,GACzB,IAAI0B,EAAMG,EAAKkF,kBAAkBO,GACjC,OAAQvF,EAAAC,EAAAC,cAAA,QAAMI,IAAKrC,GAAI0B,EAAf,eA/CFwB,aAApBwD,EACKnB,aAAe,SAqD1B,IAOepC,cAPM,SAAA/D,GACpB,MAAO,CACAsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIZgC,CAAsBuD,GC/D/BpD,EACI,EAKJiE,mLAIE,IAAI3H,EAAMkC,KAAKtB,MAAME,KAAKoB,KAAKtB,MAAMW,aACrC,IAAKvB,EACD,OAAOmC,EAAAC,EAAAC,cAAA,YAEX,IAAIuF,EAAM5H,EAAI6H,QACVN,EAAuB,IAAfK,EAAIjG,OAEVmG,EAAU9H,EAAI6D,gBAAkBH,EAEtC,OAAQvB,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,gBAAgByC,UAAU,uBACrCiF,GAASpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,kBACRiF,GAASK,EAAIrF,IAAI,SAACwF,EAAM3H,GACtB,OAAQ+B,EAAAC,EAAAC,cAAA,OAAKI,IAAKrC,GAAI2H,KAEzB7F,KAAKtB,MAAMoH,YAAc7F,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAW,MAAjC,IAA+CJ,KAAKtB,MAAMwG,OACnFU,GAAW3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,6CAnBGgB,aAArBqE,EACKhC,aAAe,UAuB1B,IAOepC,cAPM,SAAA/D,GACpB,MAAO,CACAsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIZgC,CAAsBoE,GCrC/BM,mLAIE,IAAIV,EAAuC,IAA/BrF,KAAKtB,MAAMI,KAAK4G,IAAIjG,OAChC,OAAQQ,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,YAAYyC,UAAU,mBACjCiF,GAASpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,0BACRiF,GAASrF,KAAKtB,MAAMI,KAAK4G,IAAIrF,IAAI,SAAC2F,EAAa9H,GAC7C,OAAQ+B,EAAAC,EAAAC,cAAA,OAAKI,IAAKrC,GAAI8H,aARf5E,aAAjB2E,EACKtC,aAAe,MAa1B,IChBIwC,EA8FAC,EDxEW7E,cANM,SAAA/D,GACpB,MAAO,CACNwB,KAAMxB,EAAMsB,KAAKtB,EAAM+B,eAIVgC,CAAsB0E,GEjB/BI,6MACFC,YAAc,SAAC1C,GACXA,EAAEE,iBACFnF,EAAKC,MAAMlB,gBAAe,MAG9B6I,gBAAkB,SAACnH,GACfA,EAAMC,2FAIN,OACIc,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,OAAO2C,QAASN,KAAKoG,YAAahG,UAAS,iCAAAqC,OAAmCzC,KAAKtB,MAAMmE,QAAU,eAAiB,KACxH5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,QAASN,KAAKqG,iBAC9CpG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,QAASN,KAAKoG,cACjDnG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,gBAClBsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,YAAY2I,QAAS,CAAEC,iBAAiB,KACtDtG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKoG,aAAzC,mBAlBLhF,aAoCJwB,cACXvB,YAXiB,SAAA/D,GACjB,MAAO,CACHuF,QAASvF,EAAMkJ,iBAAiBC,OAIhB,SAACnF,EAAUC,GAAX,MAAyB,CAC7C/D,eAAgB,SAACqF,GAAD,OAAavB,EAAS9D,EAAeqF,OAIrDxB,CAEE8E,IC7CSO,EAAA,CACX5H,KAAM,CACF,CACI6H,YAAe,wCACfC,IAAO,WACP/H,KAAQ,uBACRgI,IAAO,kCACPC,KAAQ,0BACRC,KAAQ,yBAEZ,CACIJ,YAAe,wCACfC,IAAO,cACP/H,KAAQ,oBACRgI,IAAO,kCACPC,KAAQ,6BACRC,KAAQ,+EAGhBC,WAAY,CACR,CACIL,YAAe,wCACfC,IAAO,iBACP/H,KAAQ,aACRgI,IAAO,oBACPC,KAAQ,4BACRC,KAAQ,kFAEZ,CACIJ,YAAe,0CACfC,IAAO,aACP/H,KAAQ,qBACRgI,IAAO,UACPC,KAAQ,4BACRC,KAAQ,8DAGhBE,YAAa,IC9BXC,6MACFd,YAAc,SAAC1C,GACXA,EAAEE,iBACFnF,EAAKC,MAAMjB,iBAAgB,MAG/B4I,gBAAkB,SAACnH,GACfA,EAAMC,qBAGVgI,SAAW,SAACC,GACR,OAAOA,EAAI/G,IAAI,SAACgH,EAASnJ,GACrB,OAAO+B,EAAAC,EAAAC,cAAA,KAAGI,IAAKrC,EAAGoJ,KAAMD,EAAQP,MAC5B7G,EAAAC,EAAAC,cAAA,OAAKoH,IAAG,gBAAA9E,OAAkB4E,EAAQT,OAClC3G,EAAAC,EAAAC,cAAA,UAAKkH,EAAQxI,MACboB,EAAAC,EAAAC,cAAA,YAAOkH,EAAQR,KACf5G,EAAAC,EAAAC,cAAA,YAAOkH,EAAQV,aACf1G,EAAAC,EAAAC,cAAA,SAAIkH,EAAQN,kFAMpB,OACI9G,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,QAAQ2C,QAASN,KAAKoG,YAAahG,UAAS,iCAAAqC,OAAmCzC,KAAKtB,MAAMmE,QAAU,eAAiB,KACzH5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,QAASN,KAAKqG,iBAC9CpG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,QAASN,KAAKoG,cACjDnG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,iBAClBsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,qBAEdqC,KAAKmH,SAASK,EAAK1I,OAG3BmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,2BAEdqC,KAAKmH,SAASK,EAAKR,aAG1BQ,EAAKP,YAAYxH,OAAS,GAAMQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAC5CH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,uBAEd6J,EAAKP,YAAY5G,IAAI,SAACgH,EAASnJ,GAC3B,OAAO+B,EAAAC,EAAAC,cAAA,KAAGI,IAAKrC,EAAGoJ,KAAMD,EAAQP,MAC5B7G,EAAAC,EAAAC,cAAA,UAAKkH,EAAQxI,MACboB,EAAAC,EAAAC,cAAA,YAAOkH,EAAQI,WAMnCxH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKoG,aAAzC,kBArDAhF,aAsELwB,cACXvB,YAXiB,SAAA/D,GACjB,MAAO,CACHuF,QAASvF,EAAMkJ,iBAAiBkB,QAIhB,SAACpG,EAAUC,GAAX,MAAyB,CAC7C9D,gBAAiB,SAACoF,GAAD,OAAavB,EAAS7D,EAAgBoF,OAIvDxB,CAEE6F,IC9EeS,eACjB,SAAAA,EAAYjJ,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA2H,IACflJ,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA4E,GAAAxE,KAAAnD,KAAMtB,KAYVkJ,YAAc,SAAC1I,GACXT,EAAKoF,SAAS,CAACgE,WAAW,IAChCC,OAAOC,iBAAiB,UAAWtJ,EAAKuJ,YAfnBvJ,EAkBnBuJ,UAAY,SAAC9I,GACT,GAAIT,EAAKnB,MAAMuK,UAAW,CACtB3I,EAAMC,kBACND,EAAM0E,iBAEN,IAAIrD,EAAMrB,EAAMqB,IAAI0H,cACpB,GAAY,YAAR1H,GAA6B,UAARA,GAA2B,QAARA,EACxC,OAAO,EAEX9B,EAAKoF,SAAS,CACVqE,MAAOhJ,EAAMiJ,SACbC,KAAMlJ,EAAMmJ,QACZC,IAAKpJ,EAAMqJ,OACXC,SAAUjI,EACVsH,WAAW,IAGfC,OAAOW,oBAAoB,UAAWhK,EAAKuJ,WAC3CvJ,EAAKC,MAAMgK,SApCAjK,EAwCnBkK,QAAU,SAACC,EAAUC,EAASC,EAAWN,GACrC,OAAQM,IAAcrK,EAAKnB,MAAM4K,OAC7BW,IAAWpK,EAAKnB,MAAMgL,KACtBM,IAAanK,EAAKnB,MAAM8K,MACxBI,IAAa/J,EAAKnB,MAAMkL,UA5Cb/J,EA+CnBsK,OAAS,SAACH,EAAUC,EAASC,EAAWN,GAA8B,IAApBQ,EAAoBC,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAb,aACrDxK,EAAKoF,SAAS,CACVuE,KAAMQ,EACNN,IAAKO,EACLX,MAAOY,EACPN,SAAUA,GACXQ,IArDYvK,EAwDnB0K,OAAS,WACL,IAAI5I,EAAM,IAAM9B,EAAKnB,MAAMkL,SAU3B,OATI/J,EAAKnB,MAAM4K,QACX3H,EAAM,IAAMA,GAEZ9B,EAAKnB,MAAMgL,MACX/H,EAAM,IAAMA,GAEZ9B,EAAKnB,MAAM8K,OACX7H,EAAM,IAAMA,GAETA,GAnEQ9B,EAsEnB2K,UAAY,SAAC5E,GACT,IAAI6E,EAAO7E,EAAI8E,QAAQ,KACnBC,EAAO/E,EAAIgF,OAAO,EAAGH,GAE3BnB,GAA8B,IAArBqB,EAAKD,QAAQ,KACtBhB,GAA4B,IAArBiB,EAAKD,QAAQ,KACpBlB,GAA6B,IAArBmB,EAAKD,QAAQ,KACf/I,EAAMiE,EAAIgF,OAAOH,EAAO,GAE5B5K,EAAKsK,OAAOX,EAAME,EAAKJ,EAAO3H,IA5E9B9B,EAAKnB,MAAQ,CACTuK,WAAW,EACX4B,MAAO,QACPvB,OAAO,EACPI,KAAK,EACLF,MAAM,EACNI,SAAU,KATC/J,wEAmFf,IAAIiL,GAAK1J,KAAK1C,MAAMuK,UACpB,OAAQ5H,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAqC,OAAYzC,KAAK1C,MAAMuK,UAAY,aAAe,IAAMvH,QAASN,KAAK4H,YAAa+B,SAAU,IACrGD,GAAKzJ,EAAAC,EAAAC,cAAA,yBACNuJ,GAAK1J,KAAK1C,MAAM8K,MAAQnI,EAAAC,EAAAC,cAAA,oBACxBuJ,GAAK1J,KAAK1C,MAAMgL,KAAOrI,EAAAC,EAAAC,cAAA,mBACvBuJ,GAAK1J,KAAK1C,MAAM4K,OAASjI,EAAAC,EAAAC,cAAA,qBACzBuJ,GAAKzJ,EAAAC,EAAAC,cAAA,YAAOH,KAAK1C,MAAMkL,kBA1FHpH,aCMnCwI,GAAS,CACX,cACA,aACA,YACA,gBAGEC,eACF,SAAAA,EAAYnL,GAAO,IAAAD,EAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA6J,IACfpL,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA8G,GAAA1G,KAAAnD,KAAMtB,KAoBV0H,YAAc,SAAC1C,GACXA,EAAEE,iBACFnF,EAAKC,MAAMrB,oBAAmB,IAvBfoB,EA0BnB4H,gBAAkB,SAACnH,GACfA,EAAMC,mBA3BSV,EA8BnBuJ,UAAY,SAAC9I,GACT,GAAIT,EAAKC,MAAMoL,eAAgB,CAC3B,IAAItB,EAAWtJ,EAAMqB,IAAI0H,cACzB,GAAiB,YAAbO,GAAuC,UAAbA,GAAqC,QAAbA,EAClD,OAAO,EAyBX,IAvBA,IAAII,EAAW1J,EAAMmJ,QACjBQ,EAAU3J,EAAMqJ,OAChBO,EAAY5J,EAAMiJ,SAClB4B,GAAS,EAETC,EAAS,CACTvL,EAAKwL,SAASC,QACdzL,EAAK0L,UAAUD,QACfzL,EAAK2L,UAAUF,QACfzL,EAAK4L,cAAcH,QACnBzL,EAAK6L,UAAUJ,QACfzL,EAAK8L,SAASL,SAGdM,EAAY,CACZ/L,EAAKC,MAAM+L,OACXhM,EAAKC,MAAMgM,QACXjM,EAAKC,MAAMiM,QACXlM,EAAKC,MAAMkM,OACXnM,EAAKC,MAAMmM,QACXpM,EAAKC,MAAMoM,QAGN5M,EAAI,EAAGA,EAAI8L,EAAOvK,SAAUvB,EAC7B8L,EAAO9L,GAAGyK,QAAQC,EAAUC,EAASC,EAAWN,KAChDgC,EAAUtM,KACV6L,GAAS,GAIbA,IACA7K,EAAM0E,iBACN1E,EAAMC,qBApECV,EAyEnBsM,YAAc,WAAqB,IAApB/B,EAAoBC,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAb,aAClBxK,EAAKwL,SAASC,QAAQnB,QAAO,GAAO,GAAM,EAAO,IAAK,WAClDtK,EAAK0L,UAAUD,QAAQnB,QAAO,GAAM,GAAO,EAAO,IAAK,WACnDtK,EAAK2L,UAAUF,QAAQnB,QAAO,GAAM,GAAO,EAAO,IAAK,WACnDtK,EAAK4L,cAAcH,QAAQnB,QAAO,GAAO,GAAM,EAAO,KAAM,WACxDtK,EAAK8L,SAASL,QAAQnB,QAAO,GAAO,GAAM,EAAO,KAAM,WACnDtK,EAAK6L,UAAUJ,QAAQnB,QAAO,GAAO,GAAM,EAAO,KAAM,WACpDtK,EAAKuM,SAAS,cAAehC,gBAhFtCvK,EAyFnBwM,gBAAkB,WACdxM,EAAKsM,YAAYtM,EAAKyM,eA1FPzM,EA4GnByM,aAAe,WACX,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAa,QACzB,IACIC,EAAM,aADIJ,EAAEK,cACmB,WAEnCC,SAASC,OAAS,kBAAoBjN,EAAKwL,SAASC,QAAQf,SAAWoC,EACvEE,SAASC,OAAS,mBAAqBjN,EAAK0L,UAAUD,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,mBAAqBjN,EAAK2L,UAAUF,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,kBAAoBjN,EAAK4L,cAAcH,QAAQf,SAAWoC,EAC5EE,SAASC,OAAS,kBAAoBjN,EAAK8L,SAASL,QAAQf,SAAWoC,EACvEE,SAASC,OAAS,mBAAqBjN,EAAK6L,UAAUJ,QAAQf,SAAWoC,EACzEE,SAASC,OAAS,aAAejN,EAAKnB,MAAMoD,MAAQ6K,GAxHrC9M,EA2HnBuM,SAAW,SAACpL,GAA+B,IAA1B+L,EAA0B1C,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAb,aACrBW,GAAOgC,SAAShM,KACjBA,EAAMgK,GAAO,IAGjBA,GAAOiC,QAAQ,SAASxE,GACpBoE,SAASK,eAAezE,GAAS0E,SAAY1E,IAAYzH,IAG7DnB,EAAKoF,SAAS,CAACnD,MAAOd,GAAM+L,IApIblN,EA0LnBuN,UAAY,SAAC9M,GACTT,EAAKoF,SAAS,CAACoI,YAAa/M,EAAM8F,OAAOlE,SA3L1BrC,EA8LnByN,YAAc,SAAChN,GACXT,EAAKuM,SAAS9L,EAAM8F,OAAOlE,MAAOrC,EAAKyM,eA/LxBzM,EAkMnB0N,cAAgB,SAACzI,GACbA,EAAEE,iBAEFnF,EAAKoF,SAAS,CAACuI,aAAa,IAC5B3N,EAAKwM,mBAtMUxM,EAyMnB4N,iBAAmB,WAGf,IAFA,IAAIC,EAAUb,SAASC,OAAOa,MAAM,MAE3BrO,EAAI,EAAGA,EAAIoO,EAAQ7M,OAAQvB,IAAK,CACrC,IAAIwN,EAASY,EAAQpO,GACjBsO,EAAQd,EAAOpC,QAAQ,KACvBzK,EAAO2N,GAAS,EAAId,EAAOlC,OAAO,EAAGgD,GAASd,EAEjC,QADF7M,EAAK2K,OAAO,EAAG,KAE1BiC,SAASC,OAAS7M,EAAO,2CAIjCJ,EAAKoF,SAAS,CAACuI,aAAa,IAC5B3N,EAAKsM,eArNLtM,EAAKnB,MAAQ,CACT2O,YAAa,SACbvL,MAAO,cACP0L,aAAa,GAGvBtE,OAAOC,iBAAiB,UAAWtJ,EAAKuJ,WAElC,IAAK,IAAI9J,EAAI,EAAGA,EAAI0L,GAAOnK,SAAUvB,EACjCuN,SAASK,eAAelC,GAAO1L,IAAI6N,UAAW,EAXnC,OAarBtN,EAAKwL,SAAW5G,IAAMoJ,YACtBhO,EAAK0L,UAAY9G,IAAMoJ,YACvBhO,EAAK2L,UAAY/G,IAAMoJ,YACvBhO,EAAK4L,cAAgBhH,IAAMoJ,YAC3BhO,EAAK8L,SAAWlH,IAAMoJ,YAChBhO,EAAK6L,UAAYjH,IAAMoJ,YAlBRhO,mFA6If,IALA,IAAIiO,GAAc,EAEdC,EAAKlB,SAASC,OAAOa,MAAM,MAE3BrO,EAAI,EACDA,EAAIyO,EAAGlN,OAAQvB,IAAK,CAGvB,IAFA,IAAIwL,EAAIiD,EAAGzO,GAEY,MAAhBwL,EAAEkD,OAAO,IACZlD,EAAIA,EAAEmD,UAAU,GAGpB,IAAIC,EAAKpD,EAAEJ,QAAQ,KACf9E,EAAMkF,EAAEF,OAAO,EAAGsD,GAClBlN,EAAM8J,EAAEF,OAAOsD,EAAG,GACV,mBAARtI,GACAxE,KAAKiK,SAASC,QAAQd,UAAUxJ,GAChC8M,GAAc,GAED,oBAARlI,GACLxE,KAAKmK,UAAUD,QAAQd,UAAUxJ,GACjC8M,GAAc,GAED,oBAARlI,GACLxE,KAAKoK,UAAUF,QAAQd,UAAUxJ,GACjC8M,GAAc,GAED,mBAARlI,GACLxE,KAAKqK,cAAcH,QAAQd,UAAUxJ,GACrC8M,GAAc,GAED,mBAARlI,GACLxE,KAAKuK,SAASL,QAAQd,UAAUxJ,GAChC8M,GAAc,GAED,oBAARlI,GACLxE,KAAKsK,UAAUJ,QAAQd,UAAUxJ,GACjC8M,GAAc,GAED,cAARlI,IACLxE,KAAKgL,SAASpL,GACd8M,GAAc,GAIlBA,GACA1M,KAAK6D,SAAS,CAACuI,aAAa,qCAqChC,OACInM,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,WAAW2C,QAASN,KAAKoG,YAAahG,UAAS,iCAAAqC,OAAmCzC,KAAKtB,MAAMmE,QAAU,eAAiB,KAC5H5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,QAASN,KAAKqG,iBAC9CpG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,QAASN,KAAKoG,cACjDnG,EAAAC,EAAAC,cAAA,uBACEH,KAAK1C,MAAM8O,aACTnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,gOACAF,EAAAC,EAAAC,cAAA,UAAQG,QAASN,KAAKmM,cAAe/L,UAAU,UAA/C,iCACAH,EAAAC,EAAAC,cAAA,UAAQG,QAASN,KAAKoG,YAAahG,UAAU,oBAA7C,iBAGRH,EAAAC,EAAAC,cAAA,OAAKgE,MAAO,CAAC4I,QAAU/M,KAAK1C,MAAM8O,YAAc,QAAU,OAASY,SAAU,aACzE/M,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAI8M,QAAS,GAAb,sBAGRhN,EAAAC,EAAAC,cAAA,aASIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAI8M,QAAS,GACThN,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAKkM,YAAa7H,KAAK,8BAA8BC,YAAY,QAAQxD,MAAOd,KAAK1C,MAAMoD,OACzGT,EAAAC,EAAAC,cAAA,UAAQW,MAAM,eAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAd,QACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,aAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,gBAAd,gBAKhBb,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAI8M,QAAS,GAAb,aAGRhN,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKiK,SAAUvB,KAAM1I,KAAKkL,iBAGpDjL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKoK,UAAW1B,KAAM1I,KAAKkL,iBAGrDjL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKmK,UAAWzB,KAAM1I,KAAKkL,iBAGrDjL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKqK,cAAe3B,KAAM1I,KAAKkL,iBAGzDjL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKsK,UAAW5B,KAAM1I,KAAKkL,iBAGrDjL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+M,GAAD,CAAaC,IAAKnN,KAAKuK,SAAU7B,KAAM1I,KAAKkL,mBAK5DjL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKoG,aAAzC,kBACAnG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBE,QAASN,KAAKiL,iBAAnD,oBACAhL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBE,QAASN,KAAKqM,kBAAnD,4BAlTDjL,aAoURwB,eACXvB,YAXiB,SAAA/D,GACjB,MAAO,CACHuF,QAASvF,EAAMkJ,iBAAiB4G,WAIhB,SAAC9L,EAAUC,GAAX,MAAyB,CAC7ClE,mBAAoB,SAACwF,GAAD,OAAavB,EAASjE,EAAmBwF,OAI7DxB,CAEEwI,KCpVewD,oLAEb,OACIpN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOQ,SAAUX,KAAKtB,MAAMiC,SAAUG,MAAOd,KAAKtB,MAAMoC,MAAOqD,MAAO,CAACC,gBAAe,OAAA3B,OAASzC,KAAKtB,MAAM2F,KAApB,MAA8B9G,KAAMyC,KAAKtB,MAAMnB,KAAM+G,YAAatE,KAAKtB,MAAM4F,cACnKrE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeJ,KAAKtB,MAAM4F,qBALxBlD,cNAnC,SAAW6E,GAMP,SAASqH,EAAQxM,EAAOyM,GACpB,IAAIC,EAAe1M,EAInB,OAH2C,KAAtC0M,EAAgB,GAAMD,EAAO,KAC9BC,GAAiB,IAASD,GAASA,EAAQzM,GAExC0M,EAEXvH,EAAMqH,QAAUA,EAkBhBrH,EAAMwH,WAZN,SAAoB3M,EAAOyM,GACvB,GAAIA,GAAQ,GACR,OAAO,KAEX,IACI/N,GAAO,GAAK+N,EAAO,GAAK,EAE5B,QAHY,GAAKA,EAAO,KAExBzM,EAAQwM,EAAQxM,EAAOyM,KACD,GAASzM,GAAS,GAAMtB,GAwBlDyG,EAAMyH,SAbN,SAAkBC,GAA0B,IAAnBC,EAAmB3E,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,IAAAA,UAAA,GACxC,GAAI0E,EAAMlO,OAAS,EACf,OAAO,KAEPmO,GACAD,EAAME,UAGV,IADA,IAAIC,EAAU,EACL5P,EAAI,EAAGA,EAAIyP,EAAMlO,OAAQvB,IAC9B4P,GAAqBH,EAAMzP,IAAO,EAAIA,EAE1C,OAAO4P,GAeX7H,EAAM8H,IAPN,SAAaC,EAAQC,EAAQC,GAEzB,IADA,IAAIzJ,EAASuJ,EAAO7I,SAAS+I,GACtBD,EAASxJ,EAAOhF,QACnBgF,EAAS,IAAMA,EAEnB,OAAOA,GAcXwB,EAAMkI,IAXN,SAAaC,GAET,IADA,IAAIC,EAAc,GACTnQ,EAAI,EAAGA,EAAIkQ,EAAM3O,OAAQvB,IAAK,CACnC,IAAIoQ,EAAoBF,EAAMlQ,GAAGiH,SAAS,IAAIoJ,cACb,IAA7BD,EAAkB7O,SAClB6O,EAAoB,IAAMA,GAE9BD,GAAeC,EAAoB,IAEvC,OAAOD,GAzEf,CA4EGpI,IAAUA,EAAQ,KAErBuI,OAAOC,UAAUC,iBAAmB,WAGhC,IAFA,IAAIC,EAAQ3O,KAAKuM,MAAM,KACnBoB,EAAQ,GACHzP,EAAI,EAAGA,EAAIyQ,EAAMlP,OAAQvB,IAAK,CACnC,IAAI4C,EAAQiE,SAAS4J,EAAMzQ,GAAI,IAC1B0Q,MAAM9N,IACP6M,EAAMkB,KAAK/N,GAGnB,OAAO6M,GAGXa,OAAOC,UAAUK,UAAY,SAAUC,GACnC,OAAO/O,KAAKwJ,OAAO,EAAGuF,EAAOtP,UAAYsP,GAG7C,SAAW7I,GACPA,EAAKA,EAAI,YAAkB,GAAK,cAChCA,EAAKA,EAAI,KAAW,GAAK,OACzBA,EAAKA,EAAI,UAAgB,GAAK,YAC9BA,EAAKA,EAAI,MAAY,GAAK,QAJ9B,CAKGA,IAASA,EAAO,SAigBf8I,GAUAC,GAOAC,GAcAC,GA9hBEC,cACF,SAAAA,EAAYC,EAAKrB,GAASjL,OAAAC,EAAA,EAAAD,CAAA/C,KAAAoP,GACtBpP,KAAKsP,gBAAkB,KACvBtP,KAAKuP,WAAY,EACjBvP,KAAKwP,YAAc,GACnBxP,KAAKqP,IAAMA,EACXrP,KAAKgO,OAASA,EACdhO,KAAKyP,KAAOvJ,EAAKwJ,MACjB1P,KAAK2P,gBAAkB,GACvB3P,KAAK4P,qBAAuB,8DAKjBC,GAAwB,IAAApR,EAAAuB,KAAb8P,IAAa7G,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,KAAAA,UAAA,GAE/B8G,EADUF,EAAUG,eAAed,GAAQe,SAC7BC,KAAKlQ,KAAKqP,KAAK,GAE7Bc,EADQN,EAAUG,eAAed,GAAQkB,OAC1BF,KAAKH,GAGxB,GAFA/P,KAAKoQ,MAAQD,EAAO,GACpBnQ,KAAKqQ,UAAYF,EAAO,IAAM,GACM,OAAhC,OAAOD,KAAKlQ,KAAKqQ,WACjB,OAAOP,EAEX,GAAmD,MAA/CD,EAAUG,eAAed,GAAQoB,WAAoB,CACrD,IAAIC,EAAWC,OAAOX,EAAUG,eAAed,GAAQoB,YAAYJ,KAAKlQ,KAAKqQ,WAC5D,OAAbE,IACAvQ,KAAKsQ,UAAYT,EAAUY,WAAWF,EAAS,IAC/CvQ,KAAK0Q,cAAgBH,EAAS,IAGtC,GAAIT,EAAM,CACN,QAAuB5G,IAAnBlJ,KAAKsQ,UAAyB,CAC9B,OAAQtQ,KAAKsQ,WACT,KAAKnB,GAAUwB,KAEX,OADA3Q,KAAKyP,KAAOvJ,EAAKoK,WACV,EACX,KAAKnB,GAAUW,KACX9P,KAAKyP,KAAOvJ,EAAKoK,UACjB,MACJ,QACItQ,KAAK4Q,cAAgB,4BAE7B,OAAO,EAUX,GARA5Q,KAAKyP,KAAOvJ,EAAKF,YACjB6J,EAAUgB,eAAeC,aAAajF,QAAQ,SAAA7F,GAC1C,IAAI+K,EAAQ/K,EAAYgL,OAAOC,MAAMf,KAAKzR,EAAK4R,WAI/C,OAHc,OAAVU,GAAkBA,EAAM,GAAGxC,gBAAkBvI,EAAYkL,UACzDzS,EAAKmR,qBAAqBf,KAAK,CAAC7I,EAAa+K,EAAMI,MAAM,GAAI,GAAI,OAEpD,OAAVJ,IAE8B,IAArC/Q,KAAK4P,qBAAqBnQ,OAE1B,OADAO,KAAK4Q,cAAgB,+BACd,EAEX,IAAIQ,EAAUpR,KAAK4P,qBAAqB,GAAG,GAAGjC,MAG9C,OAFC3N,KAAKwP,YAAc,IAAI/P,OAAS2R,EACjCpR,KAAKwP,YAAY6B,KAAK,IACf,EAGP,IAAIC,EAAQ,KACRC,EAAsB,EAC1B,QAAuBrI,IAAnBlJ,KAAKsQ,UAEL,OADAtQ,KAAKyP,KAAOvJ,EAAKyK,KACT3Q,KAAKsQ,WACT,KAAKnB,GAAUwB,KACX3Q,KAAKyP,KAAOvJ,EAAKoK,UACjB,MACJ,KAAKnB,GAAUW,KAEX,OADA9P,KAAKyP,KAAOvJ,EAAKoK,WACV,EACX,KAAKnB,GAAUqC,OACXF,EAAQA,GAAS,EAErB,KAAKnC,GAAUsC,OACXH,EAAQA,GAAS,EAErB,KAAKnC,GAAUuC,MACXJ,EAAQA,GAAS,EACjB,IAAIK,EAAW3R,KAAK0Q,cAAcnE,MAAM,YACvCvM,KAAKwP,YAAc,IAAI/P,OAAUkS,EAASlS,OAAS6R,EACpDtR,KAAKwP,YAAY6B,KAAK,GACtBrR,KAAKyP,KAAOvJ,EAAKyK,KACjB,MACJ,KAAKxB,GAAUyC,QACXL,EAAsB,EAE1B,KAAKpC,GAAU0C,OACsC,OAA7ChC,EAAUG,eAAed,GAAQ2C,UACjC7R,KAAK4Q,cAAgB,4BAEzB,IAAIG,EAAQlB,EAAUG,eAAed,GAAQ2C,QAAQ3B,KAAKlQ,KAAK0Q,eAC/D,GAAc,OAAVK,EACA/Q,KAAK4Q,cAAgB,yBAEpB,CAID,IAHA,IAAIK,EAAQT,OAAOX,EAAUiC,kBAAmB,KAC5CC,EAAa,GACbC,EAAQ,KACJA,EAAQf,EAAMf,KAAKa,EAAM,KAC7BgB,EAAWlD,KAAKmD,GAGpB,IAAK,IAAItI,KADR1J,KAAKwP,YAAc,IAAI/P,OAAUsS,EAAWtS,OAAS8R,EACxCQ,EAAY,CACtB,IAAIE,EAAYzD,OAAOuD,EAAWrI,IAC9B5I,EAAQmR,EAAUC,WAAW,GAC7BD,EAAUxS,OAAS,IACnBqB,EAAQqR,GAAUC,kBAAkBH,EAAU,KAElDjS,KAAKwP,YAAY9F,GAAK5I,EAEE,IAAxByQ,IACAvR,KAAKwP,YAAYxP,KAAKwP,YAAY/P,OAAS,GAAK,GAGxDO,KAAKyP,KAAOvJ,EAAKyK,KACjB,MACJ,QACI3Q,KAAK4Q,cAAgB,iCAG5B,CACD,IAAIyB,GAAgB,EACpBxC,EAAUgB,eAAeC,aAAajF,QAAQ,SAAA7F,GAC1C,IAAI+K,EAAQ/K,EAAYgL,OAAOC,MAAMf,KAAKzR,EAAK4R,WACjC,OAAVU,GAAkBA,EAAM,GAAGxC,gBAAkBvI,EAAYkL,WACzDmB,GAAgB,KAIpBrS,KAAK4Q,cADLyB,EACqB,mBAGA,oBAG7B,OAAO,uCAGFxC,EAAWyC,EAAOC,GAC3B,IAAIC,GAAa,EACjBC,EAAqB,IAAK,IAAIvU,KAAK8B,KAAK4P,qBAAsB,CAC1D,IAAI8C,EAAsB1S,KAAK4P,qBAAqB1R,GAChD8H,EAAc0M,EAAoB,GAClCC,EAAOD,EAAoB,GAC3BlD,EAAcxJ,EAAY4M,SAC9B,IAAK,IAAIC,KAAK7M,EAAYgL,OAAO8B,OAAQ,CACrC,IAAIC,EAAQ/M,EAAYgL,OAAO8B,OAAOD,GACtC,QAAwB3J,IAApB6J,EAAMC,UAAV,CAGA,IAAIC,EAAUF,EAAMG,UAChB3F,EAAO0F,GAAWF,EAAMxF,KACxB4F,EAAQ,KAOZ,GAA2B,QALvBA,EADAJ,EAAMK,eAAiBpE,GAAUqE,QACzBrN,EAAYgL,OAAOsC,wBAAwBX,EAAKI,EAAMC,WAAYhE,GAAUqE,QAAS9F,EAAMgF,EAAS1C,GAGpGA,EAAU0D,QAAQZ,EAAKI,EAAMC,WAAYD,EAAMK,cAAe7F,EAAMgF,EAASvM,EAAY2H,QAE3F6F,aAAuB,CAC7Bd,EAAoB,GAAKS,EAAMK,aAC/B,SAASf,EAER,GAAsB,OAAlBU,EAAMM,SAAoC,OAAhBN,EAAMrS,MAAgB,CACrDqS,EAAMM,QAAQ9D,gBAAgBd,KAAK7O,MACnCA,KAAKuP,WAAY,EACjB,MAAMkD,EAGN,IAAIiB,EAAWP,EAAMrS,MACjB6S,EAAWZ,EAAMa,WACjBC,EAASd,EAAMe,cACH5K,IAAZ+J,QAAsC/J,IAAbyK,QAAqCzK,IAAX2K,IACnDH,IAAaC,EAEbD,IAAa,GADDG,EAASF,EAAW,GACN,GAG9BnE,IADakE,GAAY,GAAKnG,GAAQ,IACbwF,EAAMgB,OAGvC,IAAK,IAAI7V,EAAI,EAAGA,EAAI8H,EAAY2H,MAAOzP,GAAK,EACxCwU,EAAoB,GAAG7D,KAAmB,IAAdW,GAC5BA,KAAiB,EAErBgD,GAAa,EAEjB,GAAIA,EAAY,CAEZ,IAAIwB,EAA8BhU,KAAK4P,qBAAqBqE,OAAO,SAAAC,GAAE,OAAc,OAAVA,EAAG,KAAa,GACzFlU,KAAKwP,YAAcwE,EAA4B,GAGnD,IAAIR,EAAe,KAKnB,QAJsBhB,GAAcxS,KAAKuP,aAErCiE,EAAexT,KAAK4P,qBAAqB5P,KAAK4P,qBAAqBnQ,OAAS,GAAG,IAE5E+T,uCAEE3D,EAAWyC,EAAOC,GAC3B,IAAIiB,EAAe,KACflC,EAAQ,KACZ,OAAQtR,KAAKsQ,WACT,KAAKnB,GAAUqC,OACXF,EAAQA,GAAS,EAErB,KAAKnC,GAAUsC,OACXH,EAAQA,GAAS,EAErB,KAAKnC,GAAUuC,MACXJ,EAAQA,GAAS,EAEjB,IADA,IAAIK,EAAW3R,KAAK0Q,cAAcnE,MAAM,WAC/BrO,EAAI,EAAGA,EAAIyT,EAASlS,OAAQvB,GAAK,EAAG,CACzC,IAAImJ,EAAUsK,EAASzT,GACnBqP,EAAO+D,GAAS,EAChB6B,EAAQtD,EAAU0D,QAAQlM,EAAS2H,GAAUmF,UAAW5G,EAAMgF,EAAS,GAC3E,GAA2B,OAAvBY,EAAMK,aAAuB,CAC7BA,EAAeL,EAAMK,aACrB,MAEC,GAAsB,OAAlBL,EAAMM,SAAoC,OAAhBN,EAAMrS,MAAgB,CACrDqS,EAAMM,QAAQ9D,gBAAgBd,KAAK7O,MACnCA,KAAKuP,WAAY,EACjB,MAIA,IADA,IAAI6E,EAASjB,EAAMrS,MACV+R,EAAI,EAAGA,EAAIvB,EAAOuB,GAAK,EAAG,CAC/B,IAAIwB,EAAU/C,EAAQpT,EACtB8B,KAAKwP,YAAYqD,EAAIwB,GAAmB,IAATD,EAC/BA,KAAY,GAIxB,MACJ,KAAKjF,GAAUyC,QACf,KAAKzC,GAAU0C,OAEX,MACJ,QACI7R,KAAK4Q,cAAgB,6BAE7B,OAAO4C,mCAEF3D,EAAWyC,EAAOC,GACvBvS,KAAKuP,WAAY,EACjB,IAAI+E,EAAS,CAAC,MAAM,GACpB,OAAQtU,KAAKyP,MACT,KAAKvJ,EAAKF,YACNsO,EAAO,GAAKtU,KAAKuU,aAAa1E,EAAWyC,EAAOC,GAChD,MACJ,KAAKrM,EAAKyK,KACN2D,EAAO,GAAKtU,KAAKwU,aAAa3E,EAAWyC,EAAOC,GAKxD,IAAIkC,EAAc5E,EAAU6E,aAAa1U,KAAKoQ,OAI9C,QAHoBlH,IAAhBuL,IACAA,EAAY,GAAKlC,GAEH,OAAd+B,EAAO,GACP,IAAK,IAAIpW,KAAK8B,KAAK2P,gBAAiB,CAChC,IAAIgF,EAAS3U,KAAK2P,gBAAgBzR,GAClC,GAA+B,OAA3ByW,EAAOrF,gBAA0B,CACjC,IAAIsF,EAAeD,EAAOnF,YAAY/P,OAClCoV,EAAcF,EAAOnS,SAASqN,EAAWyC,EAAOqC,EAAOrF,iBAC3D,GAAIqF,EAAOpF,eAGN,CACD,GAAIsF,EAAY,GAAI,CAChBP,EAAO,IAAK,EACZ,MAEJ,GAAIK,EAAOnF,YAAY/P,SAAWmV,EAAc,CAC5CN,EAAO,IAAK,EACZ,cAOhBtU,KAAK4Q,cAAgB0D,EAAO,GAEhC,OAAOA,0CAxRUQ,GACjB,OAAOA,EAAKvI,MAAM,MAAMlM,IAAI,SAACwF,EAAMhI,GAAP,OAAiB,IAAIuR,EAAKvJ,EAAMhI,cA0R9DsU,cACF,SAAAA,EAAYtB,EAAgBkE,GAA8B,IAAlBC,EAAkB/L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAKhD,GALsDlG,OAAAC,EAAA,EAAAD,CAAA/C,KAAAmS,GACtDnS,KAAK0U,aAAe,GACpB1U,KAAKiV,iBAAmBpE,EAAeoE,iBACvCjV,KAAKgQ,eAAiB,GACtBhQ,KAAKgV,UAAYA,EACbnE,EAAeb,eACfhQ,KAAKgQ,eAAiBa,EAAeb,oBAEpC,GAAIa,EAAeqE,SAAU,CAC9B,IAAIC,EAAQtE,EAAeqE,SAE3B,GADAlV,KAAKgQ,eAAiB,GAClBmF,EAAMjG,GAAQoB,WAAY,CAC1B,IAAIhK,EAAU6L,EAAU7L,QAAQuK,EAAeqE,SAAShG,GAAQoB,YAC5DhK,IACAtG,KAAKgQ,eAAed,GAAQoB,WAAaE,OAAOlK,EAAU,uBAGlE,GAAI6O,EAAMjG,GAAQe,SAAU,CACxB,IAAI3J,EAAU6L,EAAU7L,QAAQ6O,EAAMjG,GAAQe,UAC1C3J,IACAtG,KAAKgQ,eAAed,GAAQe,SAAWO,OAAO,UAAYlK,EAAU,UAG5E,GAAI6O,EAAMjG,GAAQkB,OAAQ,CACtB,IAAI9J,EAAU6L,EAAU7L,QAAQ6O,EAAMjG,GAAQkB,QAC1C9J,IACAtG,KAAKgQ,eAAed,GAAQkB,OAASI,OAAO,+BAAiClK,EAAU,iBAG/F,GAAI6O,EAAMjG,GAAQwE,UAAW,CACzB,IAAIpN,EAAU6L,EAAU7L,QAAQ6O,EAAMjG,GAAQwE,WAC1CpN,IACAtG,KAAKgQ,eAAed,GAAQwE,UAAYlD,OAAOlK,EAAU,aAIjE,GADAtG,KAAKgQ,eAAed,GAAQkG,SAAW5E,OAAO,YAAc2B,EAAUkD,UAAY,kBAC9EF,EAAMjG,GAAQoG,YAAa,CAC3B,IAAIhP,EAAU6L,EAAU7L,QAAQ6O,EAAMjG,GAAQoG,aAC9C,GAAIhP,EAAS,CACT,IAAIiP,EAAYjP,EAAQ7G,OAAS,EAAI,GAAK,KAAO6G,EAEjDtG,KAAK8R,kBAAoB,kBAAoBK,EAAUqD,qBAAuBD,EAAY,mCAC1FvV,KAAKgQ,eAAed,GAAQuG,MAAQjF,OAAOlK,EAAU,IAAMtG,KAAK8R,kBAAoB,IAAMxL,SAI9FtG,KAAK8R,kBAAoB,kBAAoBK,EAAUqD,qBAAuB,mCAElF,GAAIL,EAAMjG,GAAQwG,cAAe,CAC7B,IAAIpP,EAAU6L,EAAU7L,QAAQ6O,EAAMjG,GAAQwG,eAC1CpP,IACAtG,KAAKgQ,eAAed,GAAQ2C,QAAUrB,OAAOlK,EAAU,IAAMtG,KAAK8R,kBAAoB,KAAOxL,UAKrGX,QAAQD,IAAI,8EAEhB1F,KAAKyQ,WAAaI,EAAeJ,WACjCzQ,KAAK+U,WAAcA,GAA2BlE,EAAekE,WAC7D/U,KAAK6Q,eAAiBA,sDAGlBf,EAAMvS,EAAMgQ,EAAMgF,EAASoD,GAC/B,IAAIrB,EAAS,CACTd,aAAc,KACd1S,MAAO,KACP2S,QAAS,MAEb,OAAQlW,GACJ,KAAKyR,GAAU0E,SACX,IAAI7V,EAAQmC,KAAK6Q,eAAe+E,SAAStM,QAAQwG,GACjD,IAAe,IAAXjS,EAEA,OADAyW,EAAOxT,MAAQjD,EACRyW,EAEX,IAAIuB,EAAa,KACjB,GAAI7V,KAAKgQ,eAAed,GAAQwE,UAAW,CACvC,IAAI3C,EAAQ/Q,KAAKgQ,eAAed,GAAQwE,UAAUxD,KAAKJ,GACzC,OAAViB,IACA8E,EAAa9E,EAAM,IAG3B,OAAmB,OAAf8E,GACAvB,EAAOd,aAAP,6BAAA/Q,OAAmDqN,EAAnD,KACOwE,GAGyB,MADpCuB,EAAa9Q,SAAS8Q,EAAY,MACf,GAAMtI,IACrB+G,EAAOd,aAAP,6BAAA/Q,OAAmDqN,EAAnD,KACOwE,IAEXA,EAAOxT,MAAQ+U,EACRvB,GACX,KAAKtF,GAAUqF,OACf,KAAKrF,GAAUmF,UAEX,IAAIrT,EAAQ,KACRgV,EAAY9V,KAAK0U,aAAa5E,GAClC,QAAkB5G,IAAd4M,EAAyB,CAEzB,GADAxB,EAAOb,QAAUqC,EAAU,GACN,OAAjBA,EAAU,GACV,OAAOxB,EAEXxT,EAAQgV,EAAU,GAEtB,GAAc,OAAVhV,GAAkBd,KAAKgQ,eAAed,GAAQuG,MAAO,CACrD,IAAIM,EAAavF,OAAOxQ,KAAKgQ,eAAed,GAAQuG,OAAOvF,KAAKJ,GAChE,GAAmB,OAAfiG,QAAyC7M,IAAlB6M,EAAW,KAClCjV,EAAQiV,EAAW,GAAG7D,WAAW,IACrB,IAER,OADAoC,EAAOd,aAAe,uBAAyBuC,EAAW,GAAK,gBACxDzB,EAInB,GAAc,OAAVxT,QAA2DoI,IAAzClJ,KAAKgQ,eAAed,GAAQkG,SAAwB,CACtE,IAAIhH,EAAQoC,OAAOxQ,KAAKgQ,eAAed,GAAQkG,UAAUlF,KAAKJ,GAC9D,GAAc,OAAV1B,EAAgB,CAChB,IAAIF,EAAQiE,EAAU6D,QAAQ5H,EAAM,KAAO,GACvC6H,EAAgB7H,EAAM,GAC1BtN,EAAQiE,SAASkR,EAAe/H,IASxC,OANc,OAAVpN,GAAkBvD,IAASyR,GAAUqF,SACrCvT,GAASyR,EACLvS,KAAKiV,mBACLnU,GAAS6U,IAGH,OAAV7U,GAAkB8N,MAAM9N,IACxBwT,EAAOd,aAAP,0BAAA/Q,OAAgDqN,EAAhD,KACOwE,IAEgC,IAAlCrO,EAAMwH,WAAW3M,EAAOyM,IAC7B+G,EAAOd,aAAP,mBAAA/Q,OAAyCqN,EAAzC,KACOwE,IAEXA,EAAOxT,MAAQA,EACRwT,GACX,QAEI,OADAA,EAAOd,aAAe,uBACfc,oCAwBVhC,EAAO4D,GACZ5D,EAAMjS,IAAI,SAAAwF,GAAI,OAAIA,EAAKyJ,gBAAkB,OACzC,IAAI6G,EAAS,GACTC,GAAoB,EACpB7D,EAAU,EACd,IAAK,IAAIrU,KAAKoU,EAAO,CACjB,IAAIzM,EAAOyM,EAAMpU,GACjB,OAAQgY,GACJ,KAAK,EACDE,EAAoBvQ,EAAKwQ,eAAerW,KAAMoW,QACnBlN,IAAvBrD,EAAK+K,eACLuF,EAAOtH,KAAKhJ,QAEGqD,IAAfrD,EAAKuK,QACLpQ,KAAK0U,aAAa7O,EAAKuK,OAAS,CAACvK,EAAM,OAE3C,MACJ,QACIA,EAAKyJ,gBAAkBiD,EACvB,IAAI+D,EAAMzQ,EAAKrD,SAASxC,KAAMsS,EAAOC,GAIrC,GAHe,OAAX+D,EAAI,IACJH,EAAOtH,KAAKhJ,GAEZyQ,EAAI,GACJ,OAAO,KAEX/D,GAAW1M,EAAK2J,YAAY/P,QAGxC,OAAO0W,oCAlDII,GACX,GAAoB,IAAhBA,EAAK9W,OACL,OAAO,KAGX,IADA,IAAI6G,EAAU,GACLpI,EAAI,EAAGA,EAAIqY,EAAK9W,OAAQvB,IAAK,CAClC,IAAIsY,EAAUD,EAAKrY,GACnB,GAAgB,OAAZsY,EAEA,OADA7Q,QAAQD,IAAI,8EACL,KAEK,KAAZY,EACAA,EAAU,MAGVA,GAAW,IAEfA,GAAWkQ,EAEf,OAAOlQ,EAAU,aAkCzB6L,GAAU6D,QAAU,CAChBS,EAAK,EACLC,EAAK,EACLvL,EAAK,GACLwL,EAAK,IAETxE,GAAUkD,UAAYtS,OAAO6T,KAAKzE,GAAU6D,SAASa,KAAK,IAC1D1E,GAAUC,kBAAoB,CAC1B0E,EAAK,EACLC,EAAK,EACL/Y,EAAK,GACLgZ,EAAK,GACLC,IAAM,GACNC,IAAK,IAET/E,GAAUqD,qBAAuBzS,OAAO6T,KAAKzE,GAAUC,mBAAmByE,KAAK,IAI/E,SAAW7H,GACPA,EAAUA,EAAS,UAAgB,GAAK,YACxCA,EAAUA,EAAS,SAAe,GAAK,WACvCA,EAAUA,EAAS,UAAgB,GAAK,YACxCA,EAAUA,EAAS,OAAa,GAAK,SACrCA,EAAUA,EAAS,QAAc,GAAK,UACtCA,EAAUA,EAAS,YAAkB,GAAK,cAN9C,CAOGA,KAAcA,GAAY,KAG7B,SAAWC,GACPA,EAAWA,EAAU,OAAa,GAAK,SACvCA,EAAWA,EAAU,IAAU,GAAK,MACpCA,EAAWA,EAAU,GAAS,GAAK,KAHvC,CAIGA,KAAeA,GAAa,KAG/B,SAAWC,GACPA,EAAQA,EAAO,UAAgB,GAAK,YACpCA,EAAQA,EAAO,QAAc,GAAK,UAClCA,EAAQA,EAAO,MAAY,GAAK,QAChCA,EAAQA,EAAO,aAAmB,GAAK,eACvCA,EAAQA,EAAO,WAAiB,GAAK,aACrCA,EAAQA,EAAO,SAAe,GAAK,WAEnCA,EAAQA,EAAO,OAAa,GAAK,SACjCA,EAAQA,EAAO,KAAW,GAAK,OAC/BA,EAAQA,EAAO,QAAc,GAAK,UAVtC,CAWGA,KAAYA,GAAU,KAGzB,SAAWC,GACPA,EAAUA,EAAS,KAAW,GAAK,OACnCA,EAAUA,EAAS,KAAW,GAAK,OACnCA,EAAUA,EAAS,OAAa,GAAK,SACrCA,EAAUA,EAAS,QAAc,GAAK,UAEtCA,EAAUA,EAAS,MAAY,GAAK,QACpCA,EAAUA,EAAS,OAAa,GAAK,SACrCA,EAAUA,EAAS,OAAa,GAAK,SACrCA,EAAUA,EAAS,OAAa,GAAK,SAErCA,EAAUA,EAAS,WAAiB,GAAK,aACzCA,EAAUA,EAAS,cAAoB,GAAK,gBAE5CA,EAAUA,EAAS,OAAa,IAAM,SAd1C,CAeGA,KAAcA,GAAY,SAEvBgI,cAIF,SAAAA,EAAYC,EAAOrD,EAAOxG,GAAuC,IAAjC8J,EAAiCpO,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAtB,KAAMqO,EAAgBrO,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,IAAAA,UAAA,GAAAlG,OAAAC,EAAA,EAAAD,CAAA/C,KAAAmX,GAC7DnX,KAAKoX,MAAQA,EACbpX,KAAK+T,MAAQA,EACb/T,KAAKuN,KAAOA,EACZvN,KAAKqX,SAAWA,EAChBrX,KAAKsX,OAASA,kDAPd,OAAOtX,KAAK+T,MAAQ/T,KAAKuN,KAAO,mDAS5B2F,GAA+C,IAApCU,EAAoC3K,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAvB,KAAM6K,EAAiB7K,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAI7C,OAHAjJ,KAAKkT,UAAYA,EACjBlT,KAAK4T,WAAaA,EAClB5T,KAAK8T,SAAWA,EACT9T,2CAEGgT,EAAWI,GAA6C,IAA9BmE,EAA8BtO,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAI5D,OAHAjJ,KAAKgT,UAAYA,EACjBhT,KAAKuX,sBAAwBA,EAC7BvX,KAAKoT,cAAgBA,EACdpT,cAITwX,GACF,SAAAA,EAAY1E,EAAQ7B,EAAOwG,GAA4E,IAA/DnE,EAA+DrK,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAArC,KAAMyO,EAA+BzO,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAAMlG,OAAAC,EAAA,EAAAD,CAAA/C,KAAAwX,GACnGxX,KAAK8S,OAASA,EACd9S,KAAKiR,MAAQA,EACbjR,KAAKyX,YAAcA,EACnBzX,KAAKsT,wBAA0BA,EAC/BtT,KAAK0X,uBAAyBA,GAIhCC,cACF,SAAAA,EAAYzG,EAAUF,EAAQ4G,EAAWC,EAAaC,GAA+D,IAArDC,EAAqD9O,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAjC,KAAM+O,EAA2B/O,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAa7G,IAAK,IAAI/K,KAbwG6E,OAAAC,EAAA,EAAAD,CAAA/C,KAAA2X,GACjH3X,KAAKiY,aAAe,KAOpBjY,KAAKkY,aAAe,KACpBlY,KAAKmY,iBAAmB,KACxBnY,KAAKkR,SAAWA,EAChBlR,KAAKgR,OAASA,EACdhR,KAAK4X,UAAY,GACHA,EACV5X,KAAK4X,UAAUA,EAAU1Z,IAAM2Z,EAAY3Z,GAE/C8B,KAAK8X,SAAWA,EAChB9X,KAAK+X,kBAAoBA,EACzB/X,KAAKgY,qBAAuBA,kDAE5BxT,EAAK/E,GAEL,IADA,IAAIgF,EAASD,EACJtG,EAAI,EAAGA,EAAIuB,EAAS+E,EAAI/E,OAAQvB,IACrCuG,EAAS,IAAMA,EAEnB,OAAOA,gCAyCL+K,GAGF,IAFA,IAAI4I,EAAqB5I,IAAgB,EACrC6I,EAAWrY,KAAKsY,KAAK/L,MAAM,IACtBrO,EAAI8B,KAAKuN,KAAO,EAAGrP,GAAK,EAAGA,IAAK,CACrC,IAAIqa,EAA4B,EAArBH,EAEX,GADAA,IAAuB,EACH,MAAhBC,EAASna,IAGT6G,SAASsT,EAASna,GAAI,MAAQqa,EAC9B,OAAO,EAGf,OAAO,+BAnDP,GAA0B,OAAtBvY,KAAKiY,aACL,OAAOjY,KAAKiY,aAEhB,IAAI3G,EAAQ,EACZ,IAAK,IAAIpT,KAAK8B,KAAKgR,OAAO8B,OACtBxB,GAAStR,KAAKgR,OAAO8B,OAAO5U,GAAGqP,KAGnC,OADAvN,KAAKiY,aAAe3G,EACbtR,KAAKiY,2CAGZ,OAAO3Y,KAAKkZ,KAAKxY,KAAKuN,KAAO,gCAG7B,GAA0B,OAAtBvN,KAAKkY,aACL,OAAOlY,KAAKkY,aAGhB,IADA,IAAIrG,EAAS,GACJ3T,EAAI,EAAGA,EAAI8B,KAAKuN,KAAMrP,GAAK,EAChC2T,GAAU,IAEd,IAAK,IAAI3T,KAAK8B,KAAKgR,OAAO8B,OAAQ,CAC9B,IAAIC,EAAQ/S,KAAKgR,OAAO8B,OAAO5U,GAC3BmZ,EAAWrX,KAAK4X,UAAU7E,EAAMqE,OAIpC,GAHiB,OAAbC,IACAA,EAAWtE,EAAMsE,UAEL,MAAZA,EAAkB,CAClB,IAAIoB,EAAS5G,EAAOrI,OAAO,EAAGxJ,KAAKuN,KAAOwF,EAAM2F,IAAM,GAClDC,EAAW1S,EAAM8H,IAAIsJ,EAAUtE,EAAMxF,KAAM,GAC3CqL,EAAwB,IAAhB7F,EAAMgB,MAAc,GAAKlC,EAAOrI,QAAQuJ,EAAMgB,OAC1DlC,EAAS4G,EAASE,EAAWC,GAIrC,OADA5Y,KAAKkY,aAAerG,EACb7R,KAAKkY,8CAmBZ,GAA6B,MAAzBlY,KAAKmY,iBACL,OAAOnY,KAAKmY,iBAEhB,IAAIU,EAAO,EACX,IAAK,IAAI3a,KAAK8B,KAAKgR,OAAO8B,OAAQ,CAC9B,IAAIC,EAAQ/S,KAAKgR,OAAO8B,OAAO5U,GAC3BmZ,EAAWrX,KAAK4X,UAAU7E,EAAMqE,OACnB,OAAbC,IACAA,EAAWtE,EAAMsE,UAEL,MAAZA,IACAwB,GAASxB,GAAYtE,EAAMgB,OAInC,OADA/T,KAAKmY,iBAAmBU,EACjBA,WAQTC,cA0CF,SAAAA,EAAYvL,EAAMwL,EAASjI,EAAckI,EAAoBpD,EAAUV,EAAUzE,EAAYwE,EAAkBgE,GAAclW,OAAAC,EAAA,EAAAD,CAAA/C,KAAA8Y,GACzH9Y,KAAKuN,KAAOA,EACZvN,KAAK+Y,QAAUA,EACf/Y,KAAK8Q,aAAeA,EACpBA,EAAaoI,KAAK,SAAChZ,EAAGuW,GAAJ,OAAUvW,EAAEyN,MAAQ8I,EAAE9I,QACxC3N,KAAKgZ,mBAAqBA,EAC1BhZ,KAAK4V,SAAWA,EAChB5V,KAAKkV,SAAWA,EAChBlV,KAAKyQ,WAAaA,EAClBzQ,KAAKiV,iBAAmBA,EACxBjV,KAAKiZ,YAAcA,mEAlDF/H,GACjB,OAAQ,yCAGGA,GACX,IAAK,IAAIhT,EAAI,EAAGA,EAAI8B,KAAK8Q,aAAarR,OAAQvB,IAC1C,GAAI8B,KAAK8Q,aAAa5S,GAAGgT,WAAaA,EAClC,OAAOhT,EAGf,OAAQ,gDAEU2H,GAClB,IAAIyO,EAAS,GACb,IAAK,IAAIpW,KAAK8B,KAAK8Q,aAAc,CAC7B,IAAI9K,EAAchG,KAAK8Q,aAAa5S,GACpC,GAAI2H,EAAK0I,cAAcO,UAAU9I,EAAYkL,UAAW,CACpD,IAAIX,EAAWvK,EAAYgL,OAAOC,MAAMf,KAAKrK,GACzC0K,GAAYA,EAAS,GAAGhC,gBAAkBvI,EAAYkL,UACtDoD,EAAOzF,KAAK7I,IAIxB,OAAOsO,sCAECtO,EAAa2M,GACrB,IAAIwG,EAASnT,EAAYgL,OAAOyG,YAChC0B,EAASA,EAAOC,QAAQ,QAASpT,EAAYkL,UAC7C,IAAK,IAAIhT,EAAI,EAAGA,EAAI8H,EAAYgL,OAAO8B,OAAOrT,OAAQvB,IAAK,CACvD,IAAI6U,EAAQ/M,EAAYgL,OAAO8B,OAAO5U,GAClC8U,EAAYD,EAAMC,UACL,MAAbA,IACAmG,EAASA,EAAOC,QAAQ,OAASrG,EAAMC,UAAYD,EAAMK,gBAAkBpE,GAAU0E,SAAY1T,KAAK4V,SAASjD,EAAKK,IAAcL,EAAKK,GAAW7N,aAG1J,OAAOgU,WAqBTE,cACF,SAAAA,IAAetW,OAAAC,EAAA,EAAAD,CAAA/C,KAAAqZ,GACXrZ,KAAKsZ,oBAAsB,SAACxa,EAAMc,GAI9B,IAHA,IAAI2Z,EAAMza,EAAK0a,6BACXC,EAAM3a,EAAK4a,aAAaC,KAAKJ,GAC7BnL,EAAQ,GACHlQ,EAAI,EAAGA,EAAI0B,EAAIH,SAAUvB,EAC9BkQ,EAAMS,KAAKjP,EAAIsS,WAAWhU,IAE9BY,EAAK8a,OAAOH,EAAKrL,IAErBpO,KAAK6Z,iBAAmB,SAAC/a,EAAMc,GAC3B,IAAI2Z,EAAMza,EAAK0a,6BACf1a,EAAK4a,aAAaI,MAAMP,EAAK3Z,sDAG/Bd,GACF,IAAIib,EAAUjb,EAAK4a,aAAaC,KAAK7a,EAAKkb,0BACpCjG,EAAQjV,EAAK0a,6BACnB,OAAQO,GACJ,KAAK,EACD,IAAIna,EAAMd,EAAK4a,aAAaC,KAAK5F,GACjC/T,KAAKia,UAAUra,GACf,MAEJ,KAAK,EAID,IAHA,IAAIsa,EAAWpb,EAAK4a,aAAaC,KAAK5F,GAClC3F,EAAQ,GACRqH,EAAO,KACqC,KAAxCA,EAAO3W,EAAKqb,OAAOD,EAAU,GAAG,KACpC9L,EAAMS,KAAK4G,GACXyE,GAAY,EAEhB,IAAIE,EAAShM,EAAM/N,IAAI,SAAAqJ,GAAC,OAAI8E,OAAO6L,aAAa3Q,KAAImN,KAAK,IAEzD,OADA7W,KAAKsa,aAAaF,GACX,KAEX,KAAK,EAED,OADApa,KAAKua,WACE,OAEX,KAAK,EAED,OADAva,KAAKwa,cACE,OAEX,KAAK,GAED,OADAxa,KAAKya,aACE,OACX,QACI,MAAO,YAEf,OAAO,cAMTC,kGAEKnI,EAAS5E,GACZ,GAAM4E,EAAU5E,IAAW,EAAK3N,KAAKjB,WACjC,OAAO,KAGX,IADA,IAAIuV,EAAS,GACJpW,EAAI,EAAGA,EAAIyP,EAAOzP,IACvBoW,EAAOzF,KAAK7O,KAAKoF,OAAOmN,EAAUrU,IAEtC,OAAOoW,iCAIJ/B,EAAS5E,GACZ,GAAI4E,EAAU,EACV,OAAO,EAEX,GAAIA,EAAU5E,EAAMlO,OAASO,KAAKjB,WAC9B,OAAO,EAEX,IAAK,IAAIb,EAAI,EAAGA,EAAIyP,EAAMlO,OAAQvB,IAC9B8B,KAAKoF,OAAOmN,EAAUrU,GAAKyP,EAAMzP,GAErC,OAAO,mCAGP,IAAIyc,EAAQ3a,KAAK6Q,eAAeC,aAChC9Q,KAAK4a,QAAU,KACf5a,KAAKiJ,UAAY,GACjB,IAAK,IAAI/K,EAAI,EAAGA,EAAIyc,EAAMlb,OAAQvB,IAC9B,GAAIyc,EAAMzc,GAAG6S,MAAM/Q,KAAK6a,SAAU,CAC9B7a,KAAK4a,QAAUD,EAAMzc,GACrB,MAGR,GAAqB,OAAjB8B,KAAK4a,QACL,OAAO,KAEX,IAAIE,EAAY9a,KAAK4a,QAAQ5J,OAAO8B,OACpC,IAAK,IAAI5U,KAAK4c,EAAW,CACrB,IAAI/H,EAAQ+H,EAAU5c,GACtB,GAAuB,MAAnB6U,EAAMC,UAAmB,CACzB,IAAI+H,EAAQhI,EAAMa,WACd9S,GAAUd,KAAK6a,UAAY9H,EAAMgB,OAAW,GAAKhB,EAAMxF,MAAQ,IAAOwN,EACtEhI,EAAMK,gBAAkBpE,GAAUqE,UAClCvS,EAAQd,KAAK4a,QAAQ5J,OAAO0G,uBAAuB5W,EAAOd,KAAKgb,KAEnEhb,KAAKiJ,UAAU8J,EAAMC,WAAahT,KAAKiJ,UAAU8J,EAAMC,YAAc,EACrEhT,KAAKiJ,UAAU8J,EAAMC,WAAahT,KAAKiJ,UAAU8J,EAAMC,WAAalS,EAChEd,KAAK4a,QAAQ5J,OAAO8B,OAAO5U,GAAGoZ,QAAUvE,EAAMK,gBAAkBpE,GAAU0E,WAC1E1T,KAAKiJ,UAAU8J,EAAMC,WAAa/M,EAAMqH,QAAQtN,KAAKiJ,UAAU8J,EAAMC,WAAYD,EAAMG,UAAYH,EAAMG,UAAYH,EAAMxF,QAIvI,OAAOvN,KAAK6Q,eAAeoK,YAAYjb,KAAK4a,QAAS5a,KAAKiJ,6CAI1D,OAAOjJ,KAAK4a,QAAQ9C,SAAS9X,eAI/Bkb,8GAEE,OAAOnY,OAAO6T,KAAK5W,KAAKmb,sCAEbC,EAAcrc,EAAYsc,EAAW/U,GAChD,IAAIhI,EAAM0B,KAAKmb,KAAKC,GACpB,QAAYlS,IAAR5K,EACA,KAAM,sBAEV,IAAK,IAAIiC,KAAO+F,EACZ,QAAyB4C,IAArB5K,EAAIgI,QAAQ/F,GACZ,KAAM,yBAGd,IAAIsQ,EAAiBvS,EAAIgd,UAAUhV,GACnC,OAAO,IAAIhI,EAAIQ,KAAKC,EAAYsc,EAAWxK,YAGnDqK,GAAYC,KAAO,OAuabI,cAqCF,SAAAA,EAAYxc,EAAY6W,GAAW7S,OAAAC,EAAA,EAAAD,CAAA/C,KAAAub,GAC/Bvb,KAAKwb,aAAe,GACpBxb,KAAKyb,kBAAoB,GACzB,IAAK,IAAIvd,EAAI,EAAGA,EAAI,GAAIA,IACpB8B,KAAKwb,aAAa3M,KAAK,GACvB7O,KAAKyb,kBAAkB5M,MAAK,GAEhC7O,KAAKjB,WAAaA,EAClBiB,KAAKwb,aAAa,GAAKzc,EACvBiB,KAAK4V,SAAWA,sDA5ChBjQ,QAAQD,IAAI,qBACZ,IAAK,IAAIxH,EAAI,EAAGA,EAAI,GAAIA,IACpByH,QAAQD,IAAI,IAAMxH,EAAEiH,WAAYnF,KAAK4V,SAAS1X,GAAI8B,KAAKwb,aAAatd,GAAGiH,YAAanF,KAAKwb,aAAatd,KAAO,GAAGiH,SAAS,IAAIoJ,eAEjI5I,QAAQD,IAAI,uCAEXgW,GACD,OAAuB,IAAnBA,EACO,EAGA1b,KAAKwb,aAAaE,iCAG3BA,EAAgB5a,GAClBd,KAAKwb,aAAaE,GAAkB5a,EACpCd,KAAKyb,kBAAkBC,IAAkB,6CAGzC,OAAO,kDAIP,IADA,IAAIC,EAAS3b,KAAKyb,kBAAkBtK,QAC3BjT,EAAI,EAAGA,EAAI8B,KAAK4b,mBAAoB1d,IACzC8B,KAAKyb,kBAAkBvd,IAAK,EAEhC,OAAOyd,kCAGP,IAAK,IAAIzd,EAAI,EAAGA,EAAI,GAAIA,IACpB8B,KAAKwb,aAAatd,GAAK,EACvB8B,KAAKyb,kBAAkBvd,IAAK,EAEhC8B,KAAKwb,aAAa,GAAKxb,KAAKjB,oBAe9B8c,eAoBF,SAAAA,EAAY9c,EAAYsc,EAAWxK,GAAgB,IAAA9Q,EAAAgD,OAAAC,EAAA,EAAAD,CAAA/C,KAAA6b,IAC/C9b,EAAAgD,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA8Y,GAAA1Y,KAAAnD,QACKga,yBAA2B,GAChCja,EAAKyZ,6BAA+B,GACpCzZ,EAAK+b,2BAA6B,GAClC/b,EAAKib,GAAK,EACVjb,EAAKhB,WAAaA,EAClBgB,EAAKsb,UAAYA,EACjBtb,EAAK8Q,eAAiBA,EACtB9Q,EAAK2Z,aAAe,IAAI6B,GAAkBxc,EAAY8R,EAAe+E,UACrE7V,EAAKqF,OAAS,IAAI2W,MAAMhd,GACxB,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAYb,IAC5B6B,EAAKqF,OAAOlH,GAAK,EAZ0B,OAAA6B,uEAlB/CC,KAAKgb,GAAK,EACVhb,KAAKoF,OAAS,GACd,IAAK,IAAIlH,EAAI,EAAGA,EAAI8B,KAAKjB,WAAYb,IACjC8B,KAAKoF,OAAOlH,GAAK,EAErB8B,KAAK0Z,aAAasC,wCAGlB,GAAIhc,KAAKgb,GAAK,EACV,MAAO,mBAEX,IAAI5T,EAAMpH,KAAKma,OAAOna,KAAKgb,GAAI,GAC/B,OAAY,OAAR5T,EACO,6BAEXpH,KAAK6a,QAAU5U,EAAMyH,SAAStG,GACvB,aAlBSsT,IAoCxBQ,GAAYC,KAAZ,MAA4B,CACxBG,UA1fJ,SAAehV,GAEX,IAAIyS,EAAU,GACVjI,EAAe,GAGnBiI,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,iFAAkF,8BACrF,IAAI+E,EAAQnD,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC9HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAO,EAAI,GACzInK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGtH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAM,EAAI,GACzJnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAIrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC/HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC9HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,KAAMuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGpH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7HnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUpd,GAGrH,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7HnK,EAAKkc,IAAM,EACJ,QAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WACnE,IAAIgD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,iFAAkF,8BACrF,IAAIgF,EAAQpD,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,SAAU,UAAW,CAAC,IAAW,GAAQ,SAAUrd,GAGjG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAKkc,GAAK,GACrDlc,EAAKkc,GAAMlc,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMhD,EAAMqH,QAAQxO,EAAKmK,UAAU,GAAI,IACjF,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGjG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,IACtGnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGjG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAM,EAAI,GACjHnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,QAASwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGlG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAMnK,EAAKmK,UAAU,KAAO,EAAK,EAAI,GAChInK,EAAKkc,IAAM,EACJ,OACR,IACHlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGjG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IAC9GnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGhG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IAC9GnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUrd,GAGjG,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IAC/GnK,EAAKkc,IAAM,EACJ,QAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WACnE,IAAIgD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,+FAAgG,8BACnG,IAAIiF,EAAYrD,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMyE,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,GAAQ,SAAUtd,GACnG,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMqH,QAAQK,EAAM,GAAI,IACnE7O,EAAKkc,IAAM,EACJ,SAEXlK,EAAajC,KAAK,IAAI8I,GAAY,KAAMyE,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,GAAQ,SAAUtd,GACnG,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMqH,QAAQrH,EAAMyH,SAASC,GAAQ,KAChF7O,EAAKkc,IAAM,EACJ,SAEXlK,EAAajC,KAAK,IAAI8I,GAAY,KAAMyE,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,GAAQ,SAAUtd,GACnG,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMyH,SAASC,IAC1D7O,EAAKkc,IAAM,EACJ,SAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOyE,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,GAAQ,SAAUtd,GACpG,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAI0E,EAAM,IACjD7O,EAAKkc,IAAM,EACJ,SAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAOyE,EAAW,CAAC,SAAU,UAAW,CAAC,EAAW,GAAQ,SAAUtd,GACpG,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMyH,SAASC,IAC1D7O,EAAKkc,IAAM,EACJ,SAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,QAAS,GAAI,GAAG8E,cAAc,EAAGjN,GAAUmF,WACxD,IAAIgD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,sFAAuF,8BAC1F,IAAIkF,EAAYtD,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,OAAQ0E,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUvd,GAG1H,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAKmK,UAAU,IACvGnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQ0E,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,GAAY,SAAUvd,GAG1H,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAKmK,UAAU,IACxGnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQ0E,EAAW,CAAC,SAAU,SAAU,UAAW,CAAC,GAAW,EAAO,IAAY,SAAUvd,GAG1H,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAKmK,UAAU,IACvGnK,EAAKkc,IAAM,EACJ,QAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WAAWlB,QAAQ,GAAI,EAAG,IAC5F,IAAIkE,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WAAWlB,QAAQ,GAAI,EAAG,GAC3F,IAAIkE,GAAS,SAAU,EAAG,IAC3B,4FAA6F,8BAChG,IAAImF,EAAQvD,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAM2E,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUxd,GAC/F,IAAI6O,EAAQ,GAEZ,OADAA,EAAMkB,KAAiD,IAA5C/P,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAC7CnK,EAAK8a,OAAO9a,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI0E,IAC3E7O,EAAKkc,IAAM,EACJ,MAEJ,4BAEXlK,EAAajC,KAAK,IAAI8I,GAAY,KAAM2E,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUxd,GAC/F,IAAI6O,EAAQ,GACR7M,EAAQhC,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAIlD,OAHA0E,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACPhC,EAAK8a,OAAO9a,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI0E,IAC3E7O,EAAKkc,IAAM,EACJ,MAEJ,4BAEXlK,EAAajC,KAAK,IAAI8I,GAAY,KAAM2E,EAAO,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAUxd,GAC/F,IAAI6O,EAAQ,GACR7M,EAAQhC,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAQlD,OAPA0E,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACPhC,EAAK8a,OAAO9a,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI0E,IAC3E7O,EAAKkc,IAAM,EACJ,MAEJ,4BAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WACnE,IAAIgD,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAUqF,QACpD,IAAI8C,GAAS,SAAU,EAAG,IAC3B,6DAA8D,uBACjE,IAAIoF,EAAQxD,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAO4E,EAAO,CAAC,UAAW,CAAC,IAAY,SAAUzd,GAG/E,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAKmK,UAAU,IAAM,IACjEnK,EAAKkc,IAAM,EACJ,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,QAAS4E,EAAO,CAAC,UAAW,CAAC,IAAY,SAAUzd,GAGjF,OAFAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,IAAKnK,EAAKmK,UAAU,IAAM,IAAMnK,EAAKkc,IAC5Elc,EAAKkc,IAAM,EACJ,QAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,GAAI,IAC1F,IAAIkE,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,EAAG,IACzF,IAAIkE,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,EAAG,GACxF,IAAIkE,GAAS,MAAO,EAAG,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,GAAI,IACzF,IAAIkE,GAAS,SAAU,EAAG,IAC3B,kFAAmF,8BACtF,IAAIqF,EAASzD,EAAQA,EAAQtZ,OAAS,GACtCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAO6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOjG,OANIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IACpFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAO6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOjG,OANIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IACpFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAO6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOjG,OANIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAClFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,MAAO6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOjG,OANIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IACnFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQ6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOlG,OANKA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EACnGnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAEXlK,EAAajC,KAAK,IAAI8I,GAAY,OAAQ6E,EAAQ,CAAC,SAAU,UAAW,CAAC,GAAW,GAAQ,SAAU1d,GAOlG,OANKA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,GAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EACpGnK,EAAKkc,IAAMlc,EAAKmK,UAAU,GAG1BnK,EAAKkc,IAAM,EAER,QAGXjC,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,GAAI,IAC1F,IAAIkE,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,EAAG,IAC1F,IAAIkE,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,GAAI,IAC1F,IAAIkE,GAAS,MAAO,GAAI,EAAG,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,GAAI,IAC1F,IAAIkE,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,6DAA8D,uBACjE,IAAIsF,EAAS1D,EAAQA,EAAQtZ,OAAS,GACtCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAO8E,EAAQ,CAAC,UAAW,CAAC,KAAY,SAAU3d,GAKhF,OAJAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAKkc,GAAK,GAErDlc,EAAKkc,IAAM/U,EAAMqH,QAAQxO,EAAKmK,UAAU,GAAI,IAErC,QAIX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,QAAS,EAAG,KAC1B,sBAAuB,UAC1B,IAAIuF,EAAkB3D,EAAQA,EAAQtZ,OAAS,GAC/CqR,EAAajC,KAAK,IAAI8I,GAAY,QAAS+E,EAAiB,CAAC,SAAU,CAAC,KAAqC,SAAC5d,GAC1G,IAAIwV,EAASxV,EAAKuc,UAAUsB,MAAM7d,GAElC,OADAA,EAAKkc,IAAM,EACJ1G,KAKXyE,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,MAAO,GAAI,GACxB,IAAIA,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,4DAA6D,uBAChE,IAAIyF,EAAW7D,EAAQA,EAAQtZ,OAAS,GACxCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMiF,EAAU,CAAC,SAAU,SAAU,MAAO,UAAW,CAAC,GAAW,EAAO,EAAS,GAAY,SAAU9d,GACvI,OAAO,OACR,EAAO,CAAC,SAEXia,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,WACnE,IAAIgD,GAAS,MAAO,GAAI,GACxB,IAAIA,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GAAG8E,cAAc,EAAGjN,GAAU0E,UACpD,IAAIyD,GAAS,SAAU,EAAG,IAC3B,+DAAgE,uBACnE,IAAI0F,EAAW9D,EAAQA,EAAQtZ,OAAS,GACxCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMkF,EAAU,CAAC,SAAU,SAAU,OAAQ,CAAC,GAAW,EAAO,GAAU,SAAU/d,GAClH,OAAO,OACR,EAAO,CAAC,UACXgS,EAAajC,KAAK,IAAI8I,GAAY,KAAMkF,EAAU,CAAC,SAAU,SAAU,OAAQ,CAAC,GAAW,EAAO,GAAU,SAAU/d,GAClH,OAAO,OACR,EAAO,CAAC,UAEXia,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,MAAO,GAAI,GAAI,MAAM,GAClC,IAAIA,GAAS,MAAO,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACtD,IAAIyD,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,EAAG,GACtB,IAAIA,GAAS,SAAU,EAAG,IAC3B,uCAAwC,gBAC3C,IAAI2F,EAAW/D,EAAQA,EAAQtZ,OAAS,GACxCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMmF,EAAU,CAAC,SAAU,KAAM,SAAU,OAAQ,CAAC,IAAW,EAAS,EAAO,GAAiB,SAAUhe,GACxI,OAAO,OACR,EAAO,CAAC,UAEXgS,EAAajC,KAAK,IAAI8I,GAAY,QAAS+E,EAAiB,CAAC,SAAU,CAAC,KAAqC,SAAU5d,GACnH,OAAO,OACR,EAAO,CAAC,WACXgS,EAAajC,KAAK,IAAI8I,GAAY,UAAW+E,EAAiB,CAAC,SAAU,CAAC,KAAqC,SAAU5d,GACrH,OAAO,OACR,EAAO,CAAC,WACX,IACIoW,EAAW,GACfA,EAAShG,GAAQoB,WAAa,CAAC,OAC/B4E,EAAShG,GAAQe,SAAW,CAAC,KAC7BiF,EAAShG,GAAQkB,OAAS,CAAC,OAC3B8E,EAAShG,GAAQwG,cAAgB,CAAC,OAClCR,EAAShG,GAAQoG,YAAc,CAAC,OAChCJ,EAAShG,GAAQwE,UAAY,CAAC,KAC9B,IAAIjD,EAAa,GAOjB,OANAA,EAAU,KAAWtB,GAAUW,KAC/BW,EAAU,KAAWtB,GAAUwB,KAC/BF,EAAU,OAAatB,GAAUyC,QACjCnB,EAAU,KAAWtB,GAAUuC,MAC/BjB,EAAU,KAAWtB,GAAUsC,OAC/BhB,EAAU,KAAWtB,GAAUqC,OACxB,IAAIsH,GAAe,GAAIC,EAASjI,EAvZd,GAwYV,CAAC,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,MAe3HoE,EAAUzE,GAAY,EAAlG,6MAgGP3R,KAAM+c,GACNvV,QAAS,QAoYPyW,cAqCF,SAAAA,EAAYhe,EAAY6W,GAAW7S,OAAAC,EAAA,EAAAD,CAAA/C,KAAA+c,GAC/B/c,KAAKwb,aAAe,GACpBxb,KAAKyb,kBAAoB,GACzB,IAAK,IAAIvd,EAAI,EAAGA,EAAI,GAAIA,IACpB8B,KAAKwb,aAAa3M,KAAK,GACvB7O,KAAKyb,kBAAkB5M,MAAK,GAEhC7O,KAAKjB,WAAaA,EAClBiB,KAAKwb,aAAa,IAAMzc,EACxBiB,KAAK4V,SAAWA,sDA5ChBjQ,QAAQD,IAAI,qBACZ,IAAK,IAAIxH,EAAI,EAAGA,EAAI,GAAIA,IACpByH,QAAQD,IAAI,IAAMxH,EAAEiH,WAAYnF,KAAK4V,SAAS1X,GAAI8B,KAAKwb,aAAatd,GAAGiH,YAAanF,KAAKwb,aAAatd,KAAO,GAAGiH,SAAS,IAAIoJ,eAEjI5I,QAAQD,IAAI,uCAEXgW,GACD,OAAuB,IAAnBA,EACO,EAGA1b,KAAKwb,aAAaE,iCAG3BA,EAAgB5a,GAClBd,KAAKwb,aAAaE,GAAkB5a,EACpCd,KAAKyb,kBAAkBC,IAAkB,6CAGzC,OAAO,kDAIP,IADA,IAAIC,EAAS3b,KAAKyb,kBAAkBtK,QAC3BjT,EAAI,EAAGA,EAAI8B,KAAK4b,mBAAoB1d,IACzC8B,KAAKyb,kBAAkBvd,IAAK,EAEhC,OAAOyd,kCAGP,IAAK,IAAIzd,EAAI,EAAGA,EAAI,GAAIA,IACpB8B,KAAKwb,aAAatd,GAAK,EACvB8B,KAAKyb,kBAAkBvd,IAAK,EAEhC8B,KAAKwb,aAAa,IAAMxb,KAAKjB,oBAe/Bie,eAkBF,SAAAA,EAAYje,EAAYsc,EAAWxK,GAAgB,IAAAoM,EAAAla,OAAAC,EAAA,EAAAD,CAAA/C,KAAAgd,IAC/CC,EAAAla,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAAia,GAAA7Z,KAAAnD,QACKga,yBAA2B,EAChCiD,EAAKzD,6BAA+B,EACpCyD,EAAKnB,2BAA6B,EAClCmB,EAAKpM,eAAiBA,EACtBoM,EAAKjC,GAAK,EACViC,EAAKle,WAAaA,EAClBke,EAAK5B,UAAYA,EACjB4B,EAAKvD,aAAe,IAAIqD,GAAiBhe,EAAY8R,EAAe+E,UACpEqH,EAAK7X,OAAS,IAAI2W,MAAMhd,GACxB,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAYb,IAC5B+e,EAAK7X,OAAOlH,GAAK,EAZ0B,OAAA+e,uEAhB/Cjd,KAAKgb,GAAK,EACVhb,KAAKoF,OAAS,GACd,IAAK,IAAIlH,EAAI,EAAGA,EAAI8B,KAAKjB,WAAYb,IACjC8B,KAAKoF,OAAOlH,GAAK,EAErB8B,KAAK0Z,aAAasC,wCAGlB,IAAI5U,EAAMpH,KAAKma,OAAOna,KAAKgb,GAAI,GAC/B,OAAY,OAAR5T,EACO,8BAEXpH,KAAKgb,IAAM,EACXhb,KAAK6a,QAAU5U,EAAMyH,SAAStG,GACvB,aAhBQsT,IAkCvBQ,GAAYC,KAAZ,KAA2B,CACvBG,UArdJ,SAAchV,GAEV,IAAIyS,EAAU,GACVjI,EAAe,GAGnBiI,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,uFAAwF,8BAC3F,IAAI+E,EAAQnD,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAEzF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAEzF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,KAAMuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAEvF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,KAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MACxH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACtH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAUpd,GAExF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAO,EAAI,GAClI,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUpd,GAEzF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACvH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUpd,GAEzF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACxH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQuE,EAAO,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUpd,GAEzF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACvH,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,yCAA0C,gBAC7C,IAAI+F,EAAYnE,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMuF,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUpe,GAE3F,OADAA,EAAKkc,GAAKlc,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IACzC,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,QAAS,EAAG,GAAG8E,cAAc,EAAGjN,GAAUmF,WACvD,IAAIgD,GAAS,QAAS,EAAG,IAC1B,+EAAgF,8BACnF,IAAIgG,EAAYpE,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAOwF,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUre,GAE5F,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAKmK,UAAU,IAChG,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOwF,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUre,GAE5F,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAKmK,UAAU,IACjG,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOwF,EAAW,CAAC,SAAU,SAAU,CAAC,EAAK,GAAO,SAAUre,GAE5F,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KAAOnK,EAAKmK,UAAU,IAChG,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,QAAS,EAAG,KAC1B,sBAAuB,UAC1B,IAAIiG,EAAYrE,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,UAAWyF,EAAW,CAAC,SAAU,CAAC,IAAM,SAAUte,GAChF,OAAOA,EAAKuc,UAAUsB,MAAM7d,MAGhCia,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,YACnE,wFAAyF,8BAC5F,IAAIgI,EAAQpD,EAAQA,EAAQtZ,OAAS,GAErCqR,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,UAAW,CAAC,GAAM,SAAUrd,GAE1E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,IAC/F,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,QAASwE,EAAO,CAAC,UAAW,CAAC,GAAM,SAAUrd,GAE3E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAInK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,IAC/F,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,UAAW,CAAC,IAAO,SAAUrd,GAE3E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAM,EAAI,GAC1G,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,QAASwE,EAAO,CAAC,UAAW,CAAC,IAAO,SAAUrd,GAE5E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAMnK,EAAKmK,UAAU,KAAO,EAAK,EAAI,GACzH,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,UAAW,CAAC,IAAO,SAAUrd,GAE3E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAMnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IACxG,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAOwE,EAAO,CAAC,UAAW,CAAC,IAAO,SAAUrd,GAE1E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IACvG,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,OAAQwE,EAAO,CAAC,UAAW,CAAC,IAAO,SAAUrd,GAE3E,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQ,EAAKnK,EAAKmK,UAAU,IACvG,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUqF,QAAQpB,QAAQ,GAAI,EAAG,KAC1F,wFAAyF,8BAC5F,IAAIoK,EAAYtE,EAAQA,EAAQtZ,OAAS,GACzCqR,EAAajC,KAAK,IAAI8I,GAAY,MAAO0F,EAAW,CAAC,UAAW,CAAC,GAAO,SAAUve,GAI9E,OAHIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MACpFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,IAEvB,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAO0F,EAAW,CAAC,UAAW,CAAC,GAAO,SAAUve,GAI9E,OAHIA,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MAAQnK,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,MACpFnK,EAAKkc,IAAMlc,EAAKmK,UAAU,IAEvB,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAU0E,WACnE,iEAAkE,uBACrE,IAAI4J,EAAcvE,EAAQA,EAAQtZ,OAAS,GAC3CqR,EAAajC,KAAK,IAAI8I,GAAY,MAAO2F,EAAa,CAAC,UAAW,CAAC,IAAO,SAAUxe,GAEhF,OADAA,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAKnK,EAAKmK,UAAU,IAAM,IAC1D,QAGX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,YACnE,gGAAiG,8BACpG,IAAIoJ,EAAaxE,EAAQA,EAAQtZ,OAAS,GAE1CqR,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMqH,QAAQK,EAAM,GAAI,IAC5D,SAEXmD,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMqH,QAAQrH,EAAMyH,SAASC,GAAQ,KACzE,SAEXmD,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMyH,SAASC,IACnD,SAEXmD,EAAajC,KAAK,IAAI8I,GAAY,MAAO4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC/E,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAI0E,EAAM,IAC1C,SAEXmD,EAAajC,KAAK,IAAI8I,GAAY,MAAO4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC/E,IAAI6O,EAAQ7O,EAAKqb,OAAOrb,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI,GACvF,OAAc,OAAV0E,EACO,0BAEX7O,EAAK4a,aAAaI,MAAMhb,EAAKmK,UAAU,GAAIhD,EAAMyH,SAASC,IACnD,SAEXmD,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ,GACZA,EAAMkB,KAAiD,IAA5C/P,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,KACjD,IAAIuU,EAAe1e,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAC9E,OAAInK,EAAK8a,OAAO4D,EAAc7P,GAInB,KAEJ,4BAEXmD,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ,GACR7M,EAAQhC,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAIlD,OAHA0E,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACPhC,EAAK8a,OAAO9a,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI0E,GACpE,KAEJ,4BAEXmD,EAAajC,KAAK,IAAI8I,GAAY,KAAM4F,EAAY,CAAC,UAAW,CAAC,IAAO,SAAUze,GAC9E,IAAI6O,EAAQ,GACR7M,EAAQhC,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAQlD,OAPA0E,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACXA,KAAkB,EAClB6M,EAAMkB,KAAa,IAAR/N,GACPhC,EAAK8a,OAAO9a,EAAK4a,aAAaC,KAAK7a,EAAKmK,UAAU,IAAMnK,EAAKmK,UAAU,GAAI0E,GACpE,KAEJ,4BAGXoL,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,MAAO,EAAG,IAAI8E,cAAc,EAAGjN,GAAUqE,UACvD,wCAAyC,cAAe,SAAUvD,EAAMvS,EAAMgQ,EAAMgF,EAAS1C,GAC5F,IAAIyE,EAAS,CACTd,aAAc,KACdC,QAAS,KACT3S,MAAO,MAGPA,EAAQ,KACRgV,EAAYjG,EAAU6E,aAAa5E,GACvC,QAAkB5G,IAAd4M,EAAyB,CAEzB,GADAxB,EAAOb,QAAUqC,EAAU,GACN,OAAjBA,EAAU,GACV,OAAOxB,EAEXxT,EAAQgV,EAAU,GAEtB,GAAc,OAAVhV,GAAkB+O,EAAUG,eAAed,GAAQuG,MAAO,CAC1D,IAAIM,EAAalG,EAAUG,eAAed,GAAQuG,MAAMvF,KAAKJ,GAC7D,GAAmB,OAAfiG,QAAyC7M,IAAlB6M,EAAW,KAClCjV,EAAQiV,EAAW,GAAG7D,WAAW,IACrB,IAER,OADAoC,EAAOd,aAAe,uBAAyBuC,EAAW,GAAK,gBACxDzB,EAInB,GAAc,OAAVxT,QAAgEoI,IAA9C2G,EAAUG,eAAed,GAAQkG,SAAwB,CAC3E,IAAIhH,EAAQyB,EAAUG,eAAed,GAAQkG,SAASlF,KAAKJ,GAC3D,GAAc,OAAV1B,EAAgB,CAChB,IAAIF,EAAQiE,GAAU6D,QAAQ5H,EAAM,KAAO,GACvC6H,EAAgB7H,EAAM,GAC1BtN,EAAQiE,SAASkR,EAAe/H,IAGxC,OAAc,OAAVpN,GAAkB8N,MAAM9N,IACxBwT,EAAOd,aAAP,0BAAA/Q,OAAgDqN,EAAhD,KACOwE,IAENxT,IAAU,KAASyR,IAAY,GACZ,KAAP,EAARzR,GACDwT,EAAOxT,OAAiB,UAARA,KAAwB,EAGxCwT,EAAOd,aAAP,yBAAA/Q,OAA+CqN,EAA/C,KAIJwE,EAAOd,aAAP,mBAAA/Q,OAAyCqN,EAAzC,KAEGwE,IACR,SAAUxT,EAAOyR,GAChB,OAAQzR,GAAS,EAAgB,WAAVyR,KAE3B,IAAIkL,EAAQ1E,EAAQA,EAAQtZ,OAAS,GACrCqR,EAAajC,KAAK,IAAI8I,GAAY,IAAK8F,EAAO,CAAC,UAAW,CAAC,GAAM,SAAU3e,GAEvE,OADAA,EAAKkc,GAAKlc,EAAKmK,UAAU,GAClB,QAEX6H,EAAajC,KAAK,IAAI8I,GAAY,MAAO8F,EAAO,CAAC,UAAW,CAAC,GAAM,SAAU3e,GAGzE,OAFAA,EAAK4a,aAAaI,MAAM,GAAIhb,EAAKkc,IACjClc,EAAKkc,GAAKlc,EAAKmK,UAAU,GAClB,QAIX8P,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,QAAS,EAAG,EAAG,GAC5B,IAAIA,GAAS,QAAS,EAAG,IAC1B,gEAAiE,uBACpE,IAAIyF,EAAW7D,EAAQA,EAAQtZ,OAAS,GACxCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMiF,EAAU,CAAC,SAAU,SAAU,CAAC,EAAK,IAAO,SAAU9d,GAE1F,OAAO,QAGXia,EAAQlK,KAAK,IAAI2I,GAAO,CACpB,IAAIL,GAAS,SAAU,GAAI,GAC3B,IAAIA,GAAS,KAAM,GAAI,EAAG,GAC1B,IAAIA,GAAS,KAAM,GAAI,GAAG8E,cAAc,EAAGjN,GAAU0E,UACrD,IAAIyD,GAAS,MAAO,EAAG,GAAI,MAAM,GAAM8E,cAAc,EAAGjN,GAAUmF,YACnE,iEAAkE,uBACrE,IAAI0I,EAAW9D,EAAQA,EAAQtZ,OAAS,GACxCqR,EAAajC,KAAK,IAAI8I,GAAY,KAAMkF,EAAU,CAAC,UAAW,CAAC,GAAM,SAAU/d,GAE3E,OAAO,QAEXgS,EAAajC,KAAK,IAAI8I,GAAY,KAAMkF,EAAU,CAAC,UAAW,CAAC,GAAM,SAAU/d,GAE3E,OAAO,QAEX,IAAIoW,EAAW,GACfA,EAAShG,GAAQoB,WAAa,CAAC,OAC/B4E,EAAShG,GAAQe,SAAW,CAAC,KAC7BiF,EAAShG,GAAQkB,OAAS,CAAC,OAC3B8E,EAAShG,GAAQwG,cAAgB,CAAC,OAClCR,EAAShG,GAAQoG,YAAc,CAAC,OAChCJ,EAAShG,GAAQwE,UAAY,CAAC,KAC9B,IAAIjD,EAAa,GAQjB,OAPAA,EAAU,KAAWtB,GAAUW,KAC/BW,EAAU,KAAWtB,GAAUwB,KAC/BF,EAAU,OAAatB,GAAUyC,QACjCnB,EAAU,KAAWtB,GAAUuC,MAC/BjB,EAAU,KAAWtB,GAAUsC,OAC/BhB,EAAU,KAAWtB,GAAUqC,OAExB,IAAIsH,GAAe,GAAIC,EAASjI,EApXd,GAmXV,CAAC,QAAS,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxJoE,EAAUzE,GAAY,EAAlG,oNA8FP3R,KAAMke,GACN1W,QAAS,IAME,IAAAoX,GAAA,CACXrE,UAAWA,GACXpK,WAAYA,GACZkD,UAAWA,GACX/C,KAAMA,GACN8L,YAAaA,IOr8DXyC,8MAGFC,eAAiB,SAAC1e,GACdT,EAAKC,MAAMX,mBAAmBmB,EAAM8F,OAAOlE,MAAOrC,EAAKC,MAAMmf,iBAAiBxf,YAAaI,EAAKC,MAAMmf,iBAAiBvf,QAG3H0N,UAAY,SAAC9M,GACTT,EAAKC,MAAMX,mBAAmBU,EAAKC,MAAMmf,iBAAiBzf,UAAWK,EAAKC,MAAMmf,iBAAiBxf,YAAaa,EAAM8F,OAAOlE,UAG/Hgd,iBAAmB,SAAC5e,IAGW,KAAvBA,EAAM8F,OAAOlE,OAFN,aAEyBid,KAAK7e,EAAM8F,OAAOlE,SAClDrC,EAAKC,MAAMX,mBAAmBU,EAAKC,MAAMmf,iBAAiBzf,UAAWc,EAAM8F,OAAOlE,MAAOrC,EAAKC,MAAMmf,iBAAiBvf,QAI7H0f,aAAe,SAAC9e,GACZA,EAAM0E,iBACNnF,EAAKC,MAAMuf,yFAIX,IAAIC,EAAOC,GAAMjD,YAAYkD,cAE7B,OACIne,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,iBAAiByC,UAAU,wBAC/BH,EAAAC,EAAAC,cAAA,QAAMke,SAAUre,KAAKge,cACjB/d,EAAAC,EAAAC,cAACme,GAAD,CAAO3d,SAAUX,KAAK4d,eAAgB9c,MAAOd,KAAKtB,MAAMmf,iBAAiBzf,UAAWiG,KAAK,8BAA8BC,YAAY,YAAY3G,GAAG,aAClJsC,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAKgM,UAAWlL,MAAOd,KAAKtB,MAAMmf,iBAAiBvf,IAAK+F,KAAK,8BAA8BC,YAAY,mBACpH4Z,EAAK7d,IAAI,SAAC/B,EAAKJ,GACZ,OAAO+B,EAAAC,EAAAC,cAAA,UAAQI,IAAKjC,EAAKwC,MAAOxC,GAAMA,MAG9C2B,EAAAC,EAAAC,cAACme,GAAD,CAAO3d,SAAUX,KAAK8d,iBAAkBhd,MAAOd,KAAKtB,MAAMmf,iBAAiBxf,YAAagG,KAAK,gCAAgCC,YAAY,sBAAsB/G,KAAK,WAEpK0C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASU,MAAM,iBAAiBvD,KAAK,oBAtC9C6D,aAAtBuc,GACKla,aAAe,WA4C1B,IAYeb,eACdvB,YAbuB,SAAA/D,GACvB,MAAO,CACAsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,YACzBwe,iBAAkBvgB,EAAMugB,mBAIC,SAACvc,EAAUC,GAAX,MAAyB,CACnDxD,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAaoD,EAASvD,EAAmBC,EAAGC,EAAGC,OAInEmD,CAEEsc,KChEkBY,eAGjB,SAAAA,EAAY7f,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAAue,IACf9f,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAAwb,GAAApb,KAAAnD,KAAMtB,KAUV8f,gBAAkB,SAAC5e,EAAK6e,EAASC,GAC7B,IAqBIvF,EArBAjU,EAAQtF,EACZ,OAAO6e,GACH,KAAK,EACDvZ,EAAQH,SAASG,EAAO,IACxB,MACJ,QACA,KAAK,EACL,KAAK,EACDA,EAAQH,SAASG,EAAO,IACxB,MACJ,KAAK,EACDA,EAAQH,SAASG,EAAO,GACxB,MACJ,KAAK,EACDA,EAAoBA,EAI5B,GAAyB,QAArBA,EAAMC,WACN,MAAO,GAGX,OAAOuZ,GACH,KAAK,EACDvF,EAAS,KAAK5U,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACpD,MACJ,KAAK,EACDgU,GAAUjU,IAAU,GAAGC,SAAS,IAChC,MACJ,QACA,KAAK,GACDgU,EAASjU,EAAMC,SAAS,KACX,aAAcgU,GAAkB,YAC7C,MACJ,KAAK,EACDA,EAAS,KAAK5U,GAAWW,IAAU,GAAGC,SAAS,GAAI,IACnD,MACJ,KAAK,EACDgU,EAASzU,EAAaQ,GAI9B,OAAOiU,GAtDQ1a,EAyDnBkgB,cAAgB,SAACzf,GACb,IAAIU,EAAMV,EAAM8F,OAAOlE,MACnB2d,EAAUhgB,EAAKnB,MAAMshB,WACrBF,EAAWjgB,EAAKnB,MAAMuhB,YACtBC,EAAMrgB,EAAK+f,gBAAgB5e,EAAK6e,EAASC,GAC7CjgB,EAAKoF,SAAS,CAACqB,MAAOtF,EAAKmf,UAAoB,KAARnf,EAAauZ,OAAQ2F,KA9D7CrgB,EAiEnBugB,kBAAoB,SAAC9f,GACjB,IAAIU,EAAMnB,EAAKnB,MAAM4H,MACjBuZ,EAAU1Z,SAAS7F,EAAM8F,OAAOlE,MAAO,IACvC4d,EAAWjgB,EAAKnB,MAAMuhB,YACtBC,EAAMrgB,EAAK+f,gBAAgB5e,EAAK6e,EAASC,GAC7CjgB,EAAKoF,SAAS,CAACqB,MAAOtF,EAAKgf,WAAYH,EAASM,UAAoB,KAARnf,EAAauZ,OAAQ2F,KAtElErgB,EAyEnBwgB,mBAAqB,SAAC/f,GAClB,IAAIU,EAAMnB,EAAKnB,MAAM4H,MACjBuZ,EAAUhgB,EAAKnB,MAAMshB,WACrBF,EAAW3Z,SAAS7F,EAAM8F,OAAOlE,MAAO,IACxCge,EAAMrgB,EAAK+f,gBAAgB5e,EAAK6e,EAASC,GAC7CjgB,EAAKoF,SAAS,CAACqB,MAAOtF,EAAKif,YAAaH,EAAUK,UAAoB,KAARnf,EAAauZ,OAAQ2F,KA5EnFrgB,EAAKnB,MAAQ,CACT4H,MAAO,EACP0Z,WAAY,EACZC,YAAa,EACb1F,OAAQ,GACR4F,WAAW,GAPAtgB,wEAkFf,OACIwB,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,mBAAmByC,UAAU,0BACjCH,EAAAC,EAAAC,cAACme,GAAD,CAAO3d,SAAUX,KAAK2e,cAAeta,KAAK,4BAA4BC,YAAY,QAAQ/G,KAAK,SAC/F0C,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAKgf,kBAAmB3a,KAAK,8BAA8BC,YAAY,cACrFrE,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,WAGJb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAKif,mBAAoB5a,KAAK,8BAA8BC,YAAY,eACtFrE,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,oBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,kBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,WAGJb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACU,KAArBJ,KAAK1C,MAAM6b,OAAenZ,KAAK1C,MAAM6b,OAAS,oBAvGtB/X,aAAxBmd,GACV9a,aAAe,aCD1B,IAAMyb,GAAsB,EACtBC,GAAoB,EACpBC,GAAuB,EAEvBC,eAGF,SAAAA,EAAY3gB,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAAqf,IACf5gB,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAAsc,GAAAlc,KAAAnD,KAAMtB,KAMVmG,WAAa,SAAC3F,GACVT,EAAKoF,SAAS,CAACiB,cAAeC,SAAS7F,EAAM8F,OAAOlE,MAAO,OAR5CrC,EAWnBwG,kBAAoB,SAACC,GACjB,OAAOzG,EAAKnB,MAAMwH,eACd,KAAK,EACD,MAAO,KAAKP,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACtD,KAAK,EACD,OAAQD,IAAU,GAAGC,SAAS,IAClC,QACA,KAAK,EACD,IAAIgU,EAASjU,EAAMC,SAAS,IAE5B,OADIgU,EAAS,aAAcA,GAAkB,YACtCA,EACX,KAAK,EACD,MAAO,KAAK5U,GAAWW,IAAU,GAAGC,SAAS,GAAI,IACrD,KAAK,EACD,OAAgBT,EAAaQ,KAzBtBzG,EA6BnB6gB,wBAA0B,SAAC1f,GACvB,OAAOA,GACH,QACA,KAAKsf,GACD,MAAO,aACX,KAAKC,GACD,MAAO,eACX,KAAKC,GACD,MAAO,YAnCf3gB,EAAKnB,MAAQ,CACTwH,cAAe,GAHJrG,wEAyCV,IAAAsB,EAAAC,KACDlC,EAAMkC,KAAKtB,MAAME,KAAKoB,KAAKtB,MAAMW,aACrC,IAAMvB,IAAOA,EAAIgB,KACb,OAAOmB,EAAAC,EAAAC,cAAA,YAEX,IAAIrB,EAAOhB,EAAIgB,KACXygB,EAAYzgB,EAAK4a,aAAa8B,aAC9BgE,EAAmB1hB,EAAI0hB,iBACvBC,EAAiB3gB,EAAK4a,aAAa9D,SAEvC,OACI3V,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,kBAAkByC,UAAU,yBAChCH,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAK6E,WAAYR,KAAK,8BAA8BC,YAAY,eAAeiB,aAAa,KAC1GtF,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,oBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,kBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,UAEJb,EAAAC,EAAAC,cAAA,SAAOuf,YAAY,IAAIC,YAAY,KAC/B1f,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iBAAYF,EAAAC,EAAAC,cAAA,qBAEpBF,EAAAC,EAAAC,cAAA,aAEQof,EAAUlf,IAAI,SAACqT,EAAUxV,GACrB,IAAI0hB,EAAe7f,EAAKkF,kBAAkByO,GAC1C,OAAQzT,EAAAC,EAAAC,cAAA,MAAII,IAAKrC,EAAGkC,UAAWL,EAAKuf,wBAAwBE,EAAiBthB,KACzE+B,EAAAC,EAAAC,cAAA,UACKsf,EAAevhB,IAEpB+B,EAAAC,EAAAC,cAAA,MAAI0f,YAAWnM,GACVkM,gBA5EZxe,aAAvBie,GACK5b,aAAe,YAuF1B,IAOepC,eAPM,SAAA/D,GACpB,MAAO,CACAsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIZgC,CAAsBge,IClG/BS,eAGF,SAAAA,EAAYphB,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA8f,IACfrhB,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA+c,GAAA3c,KAAAnD,KAAMtB,KAMVmG,WAAa,SAAC3F,GACVT,EAAKoF,SAAS,CAACiB,cAAeC,SAAS7F,EAAM8F,OAAOlE,MAAO,OAR5CrC,EAWnBwG,kBAAoB,SAACC,GACjB,OAAOzG,EAAKnB,MAAMwH,eACd,QACA,KAAK,EACD,OAAOP,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,IAAK,GACjD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,GAAI,GAChD,KAAK,EACD,OAAOZ,GAAWW,IAAU,GAAGC,SAAS,GAAI,KAnBpD1G,EAAKnB,MAAQ,CACTwH,cAAe,GAHJrG,wEAyBV,IAAAsB,EAAAC,KACDpB,EAAOoB,KAAKtB,MAAME,KACtB,GAAoB,IAAhBA,EAAKa,OACL,OAAOQ,EAAAC,EAAAC,cAAA,YAEX,IAAI4f,EAAcnhB,EAAKoB,KAAKtB,MAAMW,aAAa2gB,aAC3C3a,EAA+B,IAAvB0a,EAAYtgB,OACxB,OACIQ,EAAAC,EAAAC,cAAA,OAAKxC,GAAG,qBAAqByC,UAAU,4BAClCiF,GAASpF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,uBACRiF,GAASpF,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3E,SAAUX,KAAK6E,WAAYR,KAAK,8BAA8BC,YAAY,eAAeiB,aAAa,KACrHtF,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,OACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,YAGFuE,GAAS0a,EAAY1f,IAAI,SAACmF,EAAMtH,GAC9B,IAAI0B,EAAMG,EAAKkF,kBAAkBO,GACjC,OAAOvF,EAAAC,EAAAC,cAAA,QAAMI,IAAKrC,GAAI0B,EAAf,eA/CIwB,aAAzB0e,GACKrc,aAAe,eAqD1B,IAOepC,eAPM,SAAA/D,GACpB,MAAO,CACAsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,cAIZgC,CAAsBye,sBC3C/Bte,GAAmB,CACxBye,QAAS,EACTC,KAAO,EACPC,KAAO,GAGFjB,GAAsB,EACtBC,GAAoB,EACpBC,GAAuB,EAEvBgB,GAAoB,EACpBC,GAAoB,EACpBC,GAAoB,EAEpBC,GAAmBtgB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,oBAAN,iKAEnBqgB,GAAc,CACnBC,IAAK,EACLpT,MAAO,EACPqT,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,MAAO,GAGFC,eAGL,SAAAA,EAAYpiB,GAAO,IAAAD,EAAA,OAAAsE,OAAAC,EAAA,EAAAD,CAAA/C,KAAA8gB,IAClBriB,EAAAsE,OAAAE,EAAA,EAAAF,CAAA/C,KAAA+C,OAAAG,EAAA,EAAAH,CAAA+d,GAAA3d,KAAAnD,KAAMtB,KA4DPqiB,eAAiB,SAAC7hB,GACjB,IAAIW,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAE1B,GAAI/B,GAAOA,EAAI8D,qBAAuBwe,GAAoB,CACzDlhB,EAAM0E,iBAEN,IAAIsB,EAAQpH,EAAIkjB,cACZC,EAASnjB,EAAIojB,WAEjB,GAAkB,UAAdhiB,EAAMqB,IACT9B,EAAK0iB,qBAAqBjc,GAC1BpH,EAAIkjB,cAAgB,QAEhB,GAAoB,IAAhB9hB,EAAMkiB,OACd,GAAIH,EAAS,EAAG,CACf,IAAIrhB,EAAMsF,EAAMiM,MAAM,EAAG8P,EAAS,GAAK/b,EAAMiM,MAAM8P,GAEnDnjB,EAAIojB,WAAaD,EAAS,EAC1BnjB,EAAIkjB,cAAgBphB,QAGjB,GAAsB,KAAlBV,EAAMmiB,SACd,GAAIJ,EAAS/b,EAAMzF,OAAQ,CAC1B,IAAIG,EAAMsF,EAAMiM,MAAM,EAAG8P,GAAU/b,EAAMiM,MAAM8P,EAAS,GAExDnjB,EAAIojB,WAAaD,EAAS,EAC1BnjB,EAAIkjB,cAAgBphB,QAGjB,GAAsB,KAAlBV,EAAMmiB,QACdJ,EAAUA,GAAU,EAAK,EAAIA,EAAS,EACtCnjB,EAAIojB,WAAaD,OAEb,GAAsB,KAAlB/hB,EAAMmiB,QAAgB,CAC9B,IAAIC,EAAIxjB,EAAIkjB,cAAcvhB,OAC1BwhB,EAAUA,GAAUK,EAAKA,EAAIL,EAAS,EACtCnjB,EAAIojB,WAAaI,MAEb,CACJ,IAAIxC,EAAM5f,EAAMqB,IAEVghB,EAAUriB,EAAMmiB,QAChBG,EAAQ1jB,EAAI8D,qBAAuBye,IAGxCkB,EAAU,IAAMA,EAAU,KACzBC,IAAsB,KAAZD,GAA8B,KAAZA,GAC7BA,EAAU,IAAMA,EAAU,IAC1BA,EAAU,IAAMA,EAAU,KAC1BA,EAAU,KAAOA,EAAU,KAC3BA,EAAU,KAAOA,EAAU,QAG3BzC,EAAM5Z,EAAMiM,MAAM,EAAG8P,GAAUnC,EAAM5Z,EAAMiM,MAAM8P,GACjDnjB,EAAIkjB,cAAgBlC,EACpBhhB,EAAIojB,WAAcD,EAAS,GAM7B,OAFAxiB,EAAKC,MAAMd,UAAUiC,EAAa/B,IAE3B,IA3HUW,EA+HnBgjB,kBAAoB,SAACC,EAAU/Q,GAC9B,IAIIvQ,EAJAP,EAAcpB,EAAKC,MAAMW,YAEzBvB,EADOW,EAAKC,MAAME,KACPiB,GAIdO,EADGshB,IAAalB,GAAYK,MAChB,gBACJa,IAAalB,GAAYI,QACrB,kBACJc,IAAalB,GAAYG,QACrB,kBACJe,IAAalB,GAAYE,OACrB,iBACJgB,IAAalB,GAAYnT,MACrB,gBAEA,cAEbvP,EAAI6H,QAAQkJ,KAAK5O,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GAAYuQ,IAC7ClS,EAAKC,MAAMd,UAAUiC,EAAa/B,IAnJhBW,EAsJnB0iB,qBAAuB,SAACjc,GACvB,IAAI9F,EAAWX,EAAKC,MAAMW,YACtBvB,EAAMW,EAAKC,MAAME,KAAKQ,GAEtBN,EAAOhB,EAAIgB,KAEXhB,EAAI8D,qBAAuBye,IAC9Bnb,EAAQH,SAASG,EAAO,IACxBzG,EAAKkjB,WAAW9H,iBAAiB/a,EAAMoG,GACvCzG,EAAKgjB,kBAAkBjB,GAAYC,IAAK,MAAQvb,IACtCpH,EAAI8D,qBAAuB0e,KACrC7hB,EAAKkjB,WAAWrI,oBAAoBxa,EAAMoG,GAC1CzG,EAAKgjB,kBAAkBjB,GAAYC,IAAK,MAAQvb,IAGjDpH,EAAI8D,mBAAqBwe,GAEzB3hB,EAAKmjB,mBACLnjB,EAAKC,MAAMd,UAAUwB,EAAUtB,IAxKbW,EA2KnBmjB,iBAAmB,WAKlB,IAJA,IAAI9jB,EAAMW,EAAKC,MAAME,KAAKH,EAAKC,MAAMW,aAEjCwiB,EAAU/jB,EAAIgB,KAAK4a,aAAaoI,uBAE5B5jB,EAAI,EAAGA,EAAIJ,EAAI0hB,iBAAiB/f,SAAUvB,EAC7C2jB,EAAQ3jB,GACXJ,EAAI0hB,iBAAiBthB,GAAKkhB,GAClBthB,EAAI0hB,iBAAiBthB,KAAQkhB,KACrCthB,EAAI0hB,iBAAiBthB,GAAKihB,KApLV1gB,EAwLnBsjB,WAAa,SAACljB,EAAMmjB,EAAMhC,EAAciC,EAAU3jB,EAAK4jB,GACtD,IAAI9iB,EAAWX,EAAKC,MAAME,KAAKa,OAE3BX,EAAOqf,GAAMjD,YAAYiH,QAAQ7jB,EAAK2jB,EAAUxjB,EAAKkjB,WAAY,IAEjES,EAAU,CACbvjB,KAAMA,EACNiB,QAASoiB,EAAmBpjB,EAAK+R,eAAeoI,YAAc+I,EAC9Dtc,IAAK,GACLC,QAAS,GACTqa,aAAcA,EACdlhB,KAAMA,EACN0gB,iBAAkB,GAClB7d,cAAeH,GAAiBye,QAChCjhB,gBAAiBV,EACjB0iB,cAAe,GACfpf,mBAAoBwe,GACpBc,WAAY,GAGbkB,EAAQ5C,iBAAmBzD,MAAMsG,KAAK,CAAE5iB,OAAQX,EAAK4a,aAAa8B,aAAa/b,QAAU,kBAAMyf,KAG/FzgB,EAAKC,MAAMX,mBAAmBc,EAAMojB,EAAU3jB,GAE9CG,EAAKC,MAAMF,OAAO4jB,GAClB3jB,EAAKC,MAAMhB,UAAU0B,IAlNHX,EAqNnBD,OAAS,SAACK,EAAMmjB,EAAMhC,GACrBvhB,EAAKsjB,WAAWljB,EAAMmjB,EAAMhC,EAAc,KAAMvhB,EAAK6jB,iBAAiB,IAtNpD7jB,EAyNnB8jB,cAAgB,WACf9jB,EAAKsjB,WAAW,UAAW,GAAI,GAAI,KAAMtjB,EAAK6jB,iBAAiB,IA1N7C7jB,EA6NnB+jB,mBAAqB,WACpB/jB,EAAKsjB,WAAW,UAAW,GAAI,GAAI,KAAM,SAAS,IA9NhCtjB,EAiOnBgkB,kBAAoB,WACnBhkB,EAAKsjB,WAAW,UAAW,GAAI,GAAI,KAAM,QAAQ,IAlO/BtjB,EAqOnB6jB,cAAgB,WACf,OAAOnE,GAAMjD,YAAYkD,cAAc,IAtOrB3f,EAyOnBikB,aAAe,SAACxjB,GACf,IAAIyjB,EAAQlkB,EAAKmkB,gBAAgB1Y,QAAQyY,MACzC,KAAIA,EAAMljB,QAAU,GAApB,CAEA,IAAIqV,EAAO6N,EAAM,GACjB,GAAIlkB,EAAKokB,cAAe,CACvB,IAAIhkB,EAAOiW,EAAKjW,KACZikB,EAAOhO,EAAK3D,MAAM,EAAG2D,EAAKiO,MAC1BC,EAAK,IAAIC,WACTC,EAAEngB,OAAAogB,EAAA,EAAApgB,QAAAogB,EAAA,EAAApgB,CAAAtE,IACNukB,EAAGjb,iBAAiB,OAAQ,WAE3B,IAAI4F,EAAQ,IAAIyV,WAAWpjB,KAAKsU,QAChC4O,EAAG1kB,OAAOK,EAAM,GAAIkd,MAAMsG,KAAK1U,MAEhCqV,EAAGK,kBAAkBP,OAEjB,CACJ,IAAIjkB,EAAOiW,EAAKjW,KACZikB,EAAOhO,EAAK3D,MAAM,EAAG2D,EAAKiO,MAC1BC,EAAK,IAAIC,WACTC,EAAEngB,OAAAogB,EAAA,EAAApgB,QAAAogB,EAAA,EAAApgB,CAAAtE,IACNukB,EAAGjb,iBAAiB,OAAQ,WAE3B,IAAIub,EAAMtjB,KAAKsU,OAEf4O,EAAG1kB,OAAOK,EAAMykB,EAAK,MAEtBN,EAAGO,WAAWT,MArQGrkB,EAyQnBuD,cAAgB,WACfvD,EAAKokB,eAAgB,EACrBpkB,EAAKmkB,gBAAgB1Y,QAAQsZ,SA3QX/kB,EA8QnBwD,cAAgB,WACfxD,EAAKokB,eAAgB,EACrBpkB,EAAKmkB,gBAAgB1Y,QAAQsZ,SAhRX/kB,EAmRnByD,kBAAoB,WACnB,IAAMrC,EAAcpB,EAAKC,MAAMW,YAC3BvB,EAAMW,EAAKC,MAAME,KAAKiB,GAEtB8Q,EAAO7S,EAAIgC,QACf,GAAoB,IAAhB6Q,EAAKlR,OAAT,CAGA,IAAIgkB,EAAKhY,SAAStL,cAAc,KAC5B2iB,EAAO,IAAIY,KAAK,CAAC/S,GACrB,CACCpT,KAAM,eAEHomB,EAAWC,IAAIC,gBAAgBf,GAC/BjkB,EAAOf,EAAIe,KAAO,KACtB4kB,EAAGK,aAAa,OAAQH,GACxBF,EAAGK,aAAa,WAAYjlB,GAC5B4kB,EAAGtf,MAAM4I,QAAU,OACnBtB,SAASsY,KAAKC,YAAYP,GAC1BA,EAAGD,QACH/X,SAASsY,KAAKE,YAAYR,KAvSRhlB,EA0SnB0D,YAAc,WACb,IAAMtC,EAAcpB,EAAKC,MAAMW,YAC3BvB,EAAMW,EAAKC,MAAME,KAAKiB,GAEtB8Q,EAAO7S,EAAIkiB,aACXkE,EAAY,IAAId,WAAWzS,GAC3BmS,EAAO,IAAIY,KAAK,CAACQ,GACrB,CACC3mB,KAAM,6BAEHomB,EAAWC,IAAIC,gBAAgBf,GAC/Bzb,EAAUoE,SAAStL,cAAc,KACjCtB,EAAOf,EAAIe,KAAO,OACtBwI,EAAQyc,aAAa,OAAQH,GAC7Btc,EAAQyc,aAAa,WAAYjlB,GACjCwI,EAAQlD,MAAM4I,QAAU,OACxBtB,SAASsY,KAAKC,YAAY3c,GAC1BA,EAAQmc,QACR/X,SAASsY,KAAKE,YAAY5c,IA5TR5I,EA+TnB2D,YAAc,WACb,IAAMvC,EAAcpB,EAAKC,MAAMW,YAC3BvB,EAAMW,EAAKC,MAAME,KAAKiB,GAEtB8Q,EAAO7S,EAAIgB,KAAKsG,OAChB8e,EAAY,IAAId,WAAWzS,GAC3BmS,EAAO,IAAIY,KAAK,CAACQ,GACrB,CACC3mB,KAAM,6BAEHomB,EAAWC,IAAIC,gBAAgBf,GAC/Bzb,EAAUoE,SAAStL,cAAc,KACjCtB,EAAOf,EAAIe,KAAO,OACtBwI,EAAQyc,aAAa,OAAQH,GAC7Btc,EAAQyc,aAAa,WAAYjlB,GACjCwI,EAAQlD,MAAM4I,QAAU,OACxBtB,SAASsY,KAAKC,YAAY3c,GAC1BA,EAAQmc,QACR/X,SAASsY,KAAKE,YAAY5c,IAjVR5I,EAoVnB0lB,QAAU,WACT,IAAItkB,EAAcpB,EAAKC,MAAMW,YAEzBvB,EADOW,EAAKC,MAAME,KACPiB,GACf/B,EAAI4H,IAAM,GACV5H,EAAI6H,QAAU,GACd7H,EAAI0hB,iBAAmBzD,MAAMsG,KAAK,CAAE5iB,OAAQ3B,EAAI0hB,iBAAiB/f,QAAU,kBAAMyf,KACjFphB,EAAI6D,cAAgBH,GAAiBye,QAErCniB,EAAIkjB,cAAgB,GACpBljB,EAAI8D,mBAAqBwe,GACzBtiB,EAAIojB,WAAa,EAEjBziB,EAAKC,MAAMd,UAAUiC,EAAa/B,IAjWhBW,EAoWnBud,MAAQ,WACP,IAAInc,EAAcpB,EAAKC,MAAMW,YAClBZ,EAAKC,MAAME,KACPiB,GAEXf,KAAKkd,QACTvd,EAAK0lB,WA1Wa1lB,EA6WnB2lB,WAAa,WACZ,IAAIvkB,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAE1B,GAAI/B,EAAI8D,qBAAuBwe,GAA/B,CAGItiB,EAAI6D,gBAAkBH,GAAiBye,SAC1CxhB,EAAK4lB,aAEN,IAAIvlB,EAAQhB,EAAIgB,KAIhB,IAFAhB,EAAI6D,cAAgBH,GAAiB2e,OAExB,CACZ,IAAImE,EAAQxlB,EAAKwlB,QACjB,GAAc,OAAVA,EAAgB,CACnB7lB,EAAKgjB,kBAAkBjB,GAAYK,MAAOyD,GAC1CxmB,EAAI6D,cAAgBH,GAAiBye,QACrC,MAGD,IAAIsE,EAASzlB,EAAKylB,SAElB,GAAe,OAAXA,EAAiB,CACpB9lB,EAAKgjB,kBAAkBjB,GAAYK,MAAON,IAC1CziB,EAAI6D,cAAgBH,GAAiBye,QACrC,MAGAniB,EAAI4H,IAAImJ,KAAK0V,GAGd,IAAIC,EAAU1lB,EAAK0lB,UACnB,GAAgB,OAAZA,EAAkB,CACL,SAAZA,GAAkC,SAAZA,IACzB/lB,EAAKgjB,kBAAkBjB,GAAYK,MAAO2D,GAC1C1mB,EAAI6D,cAAgBH,GAAiBye,SAEtC,OAIFxhB,EAAKmjB,mBACLnjB,EAAKC,MAAMd,UAAUiC,EAAa/B,KAzZhBW,EA4ZnBgmB,aAAe,WACd,IAAI5kB,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAE1B,GAAI/B,EAAI8D,qBAAuBwe,GAA/B,CAGItiB,EAAI6D,gBAAkBH,GAAiBye,SAC1CxhB,EAAK4lB,aAEN,IAAIvlB,EAAOhB,EAAIgB,KAEfhB,EAAI6D,cAAgBH,GAAiB0e,KAErC,IAAIoE,EAAQxlB,EAAKwlB,QACjB,GAAc,OAAVA,EAIH,OAHA7lB,EAAKgjB,kBAAkBjB,GAAYK,MAAOyD,GAC1CxmB,EAAI6D,cAAgBH,GAAiBye,aACrCxhB,EAAKC,MAAMd,UAAUiC,EAAa/B,GAInC,IAAIymB,EAASzlB,EAAKylB,SAElB,GAAe,OAAXA,EAIH,OAHA9lB,EAAKgjB,kBAAkBjB,GAAYK,MAAON,IAC1CziB,EAAI6D,cAAgBH,GAAiBye,aACrCxhB,EAAKC,MAAMd,UAAUiC,EAAa/B,GAIlCA,EAAI4H,IAAImJ,KAAK0V,GAGd,IAAIC,EAAU1lB,EAAK0lB,UACH,OAAZA,GACa,SAAZA,GAAkC,SAAZA,IACzB/lB,EAAKgjB,kBAAkBjB,GAAYK,MAAO2D,GAC1C1mB,EAAI6D,cAAgBH,GAAiBye,SAIvCxhB,EAAKmjB,mBACLnjB,EAAKC,MAAMd,UAAUiC,EAAa/B,KAvchBW,EA0cnB4lB,WAAa,WACZ,IAAIxkB,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GACtBD,EAAM9B,EAAIgC,QACd,GAAY,KAARF,EAAJ,CAIA,IAAId,EAAOhB,EAAIgB,KACfL,EAAKud,QACL,IAAInM,EAAY,IAAIsO,GAAMhM,UAAUrT,EAAK+R,eAAgBsN,GAAMlP,WAAWyV,QAEtEpS,EAAQ6L,GAAM/O,KAAKuV,cAAc/kB,GAEjCglB,EAAW/U,EAAUrN,SAAS8P,EAAO,GACzC,GAAwB,IAApBsS,EAASnlB,OACZ,IAAK,IAAIvB,KAAK0mB,EAAU,CACvB,IAAI/e,EAAO+e,EAAS1mB,GAEpB,YADAO,EAAKgjB,kBAAkBjB,GAAYK,MAAO5gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mCAA2B0F,EAAKmI,OAAhC,KAAN,IAAoDnI,EAAK+K,cAAzD,MAI5C,IAAIsF,EAAO,KACP2O,EAAc,EAClB,EAAG,CAEF,GAAoB,KADpB3O,EAAOrG,EAAUrN,SAAS8P,EAAOuS,IACxBplB,OACR,IAAK,IAAIvB,KAAKgY,EAAM,CACnB,IAAIrQ,EAAOqQ,EAAKhY,GAEhB,YADAO,EAAKgjB,kBAAkBjB,GAAYK,MAAO5gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mCAA2B0F,EAAKmI,OAAhC,KAAN,IAAoDnI,EAAK+K,cAAzD,MAI5CiU,GAAe,QACE,OAAT3O,GAET,IAAI1G,EAAc8C,EAAMjS,IAAI,SAAAwF,GAAI,OAAGA,EAAK2J,cAAasV,OAAO,SAAC5kB,EAAGuW,GAAJ,OAASvW,EAAEuC,OAAOgU,IAAI,IAClF3X,EAAK8a,OAAO,EAAGpK,GAEf/Q,EAAKmjB,mBAIJ9jB,EAAIkiB,aAAexQ,EACnB/Q,EAAKgjB,kBAAkBjB,GAAYG,QAAS1gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,sBAAN,yBAM7C1B,EAAKC,MAAMd,UAAUiC,EAAa/B,KA5fhBW,EA+fnBsmB,qBAAuB,WACtB,IAAIllB,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAE1B,GAAK/B,EAAL,CAGA,IAAIM,EAAYK,EAAKC,MAAMmf,iBAAiBzf,UACxC4mB,EAAWvmB,EAAKC,MAAMmf,iBAAiBvf,IACvCD,EAAcI,EAAKC,MAAMmf,iBAAiBxf,YAE9CP,EAAIe,KAAOT,EAEX,IAAI6mB,EAAWD,IAAalnB,EAAIkB,gBAC5BkmB,EAAW7mB,IAAgBP,EAAIgB,KAAKC,WAEpComB,GAAgB,EAEpB,GAAIF,GAAYC,EACQ/G,GAAMjD,YAAYC,KACpB6J,KACpBG,GAAgB,EAChBrnB,EAAIgB,KAAOqf,GAAMjD,YAAYiH,QAAQ6C,EAAU3mB,EAAaI,EAAKkjB,WAAY,IAC7E7jB,EAAIkB,gBAAkBgmB,EACtBvmB,EAAK0lB,WAGDgB,GACJ1mB,EAAKgjB,kBAAkBjB,GAAYK,MAAO5gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,oBAAN,sBAAwC6kB,EAAxC,MAI5CvmB,EAAKC,MAAMd,UAAUiC,EAAa/B,GAE9BqnB,IACCF,GACHxmB,EAAKgjB,kBAAkBjB,GAAYG,QAAS1gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAAN,+BAAoD6kB,EAApD,MAEzCE,GACHzmB,EAAKgjB,kBAAkBjB,GAAYG,QAAS1gB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAAN,uCAA4D9B,EAA5D,SAtiB5BI,EA0iBnB2mB,iBAAmB,SAAClmB,GACnB4I,OAAOC,iBAAiB,YAAatJ,EAAK4mB,aAC1Cvd,OAAOC,iBAAiB,UAAWtJ,EAAK6mB,kBA5iBtB7mB,EA+iBnB8mB,QAAU,SAACrmB,GACV,IAAIsmB,EAAItmB,EAAMumB,MACVC,EAAI5d,OAAO6d,YAAcla,SAASma,gBAAgBC,aAAepa,SAASsY,KAAK8B,aACnFL,EAAIE,EAAIF,GAEA,IACPA,EAAI,IAEIA,EAAIE,EAAI,MAChBF,EAAIE,EAAI,KAGTjnB,EAAKoF,SAAS,CAACiiB,QAASN,KA3jBN/mB,EA8jBnB8mB,QAAU,SAACrmB,GACV,IAAIsmB,EAAItmB,EAAMumB,MACVC,EAAI5d,OAAO6d,YAAcla,SAASma,gBAAgBC,aAAepa,SAASsY,KAAK8B,aACnFL,EAAIE,EAAIF,GAEA,IACPA,EAAI,IAEIA,EAAIE,EAAI,MAChBF,EAAIE,EAAI,KAGTjnB,EAAKoF,SAAS,CAACiiB,QAASN,KA1kBN/mB,EA6kBnBsnB,QAAU,SAAC7mB,GACV,IAAI8mB,EAAI9mB,EAAM+mB,MAAQ,GAClBtP,EAAI7O,OAAOoe,aAAeza,SAASma,gBAAgBO,cAAgB1a,SAASsY,KAAKoC,cACrFH,EAAKrP,EAAIqP,GAED,GACPA,EAAI,GAEIA,EAAIrP,EAAI,KAChBqP,EAAIrP,EAAI,IAGTlY,EAAKoF,SAAS,CAACuiB,QAASJ,KAzlBNvnB,EA4lBnB4mB,YAAc,SAACnmB,GACdT,EAAK8mB,QAAQrmB,IA7lBKT,EAgmBnB6mB,gBAAkB,SAACpmB,GAClBT,EAAK8mB,QAAQrmB,GACb4I,OAAOW,oBAAoB,YAAahK,EAAK4mB,aAC7Cvd,OAAOW,oBAAoB,UAAWhK,EAAK6mB,kBAnmBzB7mB,EAsmBnB4nB,iBAAmB,SAACnnB,GACnB4I,OAAOC,iBAAiB,YAAatJ,EAAK6nB,aAC1Cxe,OAAOC,iBAAiB,UAAWtJ,EAAK8nB,kBAxmBtB9nB,EA2mBnB6nB,YAAc,SAACpnB,GACdT,EAAKsnB,QAAQ7mB,IA5mBKT,EA+mBnB8nB,gBAAkB,SAACrnB,GAClBT,EAAKsnB,QAAQ7mB,GACb4I,OAAOW,oBAAoB,YAAahK,EAAK6nB,aAC7Cxe,OAAOW,oBAAoB,UAAWhK,EAAK8nB,kBAlnBzB9nB,EAqnBnB4D,aAAe,WACd5D,EAAKC,MAAMrB,oBAAmB,IAtnBZoB,EAynBnB6D,SAAW,WACV7D,EAAKC,MAAMlB,gBAAe,IA1nBRiB,EA6nBnB8D,UAAa,WACZikB,MAAM,GACN/nB,EAAKC,MAAMjB,iBAAgB,IA5nB3BgB,EAAKC,MAAM+nB,WAAW,CACrBC,UAAW,CACT,CAAE7nB,KAAM,UAAWmjB,KAAM,OAE3B1b,QAAS,CAAEqgB,gDAGZloB,EAAKnB,MAAQ,CACZwoB,QAAS,IACTM,QAAS,KAGV3nB,EAAKmkB,gBAAkBvf,IAAMoJ,YAE7B3E,OAAOC,iBAAiB,QAAStJ,EAAKsiB,gBAEtCtiB,EAAKC,MAAMkoB,0BAA0BC,GAAgB,MAErDpoB,EAAKkjB,WAAa,IAAIxD,GAAM9E,UAC5B5a,EAAKkjB,WAAWpH,SAAW,WAC1B,IAAIzc,EAAMW,EAAKC,MAAME,KAAKH,EAAKC,MAAMW,aACjCvB,IACHA,EAAI8D,mBAAqBye,KAI3B5hB,EAAKkjB,WAAWnH,YAAc,WAC7B,IAAI1c,EAAMW,EAAKC,MAAME,KAAKH,EAAKC,MAAMW,aACjCvB,IACHA,EAAI8D,mBAAqB0e,KAI3B7hB,EAAKkjB,WAAW1H,UAAY,SAACjM,GAC5BvP,EAAKgjB,kBAAkBjB,GAAYE,OAAQ,MAAQ1S,IAGpDvP,EAAKkjB,WAAWrH,aAAe,SAACzI,GAC/BpT,EAAKgjB,kBAAkBjB,GAAYE,OAAQ,MAAQ7O,IAGpDpT,EAAKkjB,WAAWlH,WAAa,WAC5B,IAAI5a,EAAcpB,EAAKC,MAAMW,YACzBvB,EAAMW,EAAKC,MAAME,KAAKiB,GAErB/B,IAGLA,EAAI6D,cAAgBH,GAAiBye,QAErCxhB,EAAKgjB,kBAAkBjB,GAAYG,QAAS,gCAE5CliB,EAAKC,MAAMd,UAAUiC,EAAa/B,KAGnCW,EAAK8jB,gBA1Da9jB,wEAmoBlB,IAAIoB,EAAcG,KAAKtB,MAAMW,YACzBvB,EAAMkC,KAAKtB,MAAME,KAAKiB,GAEtBinB,EAAW9mB,KAAKtB,MAAME,KAAKa,OAAS,EACpCqG,GAAa,EAKjB,OAHIhI,IACHgI,EAAahI,EAAI8D,qBAAuBwe,IAGxCngB,EAAAC,EAAAC,cAACF,EAAAC,EAAM6mB,SAAP,KACC9mB,EAAAC,EAAAC,cAACuH,EAAD,MACAzH,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAACiN,GAAD,CACCtD,gBAAiBhE,EACjB2E,OAAQzK,KAAKuiB,cACb7X,QAAS1K,KAAKgC,cACd2I,QAAS3K,KAAKkC,kBACd0I,OAAQ5K,KAAKqkB,WACbvZ,OAAQ9K,KAAKokB,WACbvZ,QAAS7K,KAAKykB,eACfxkB,EAAAC,EAAAC,cAAC6mB,EAAD,CAAYxkB,SAAUxC,KAAKqkB,WAAY3hB,SAAU1C,KAAKokB,WAAYzhB,WAAY3C,KAAKykB,aAAcriB,YAAapC,KAAKoC,YAAaD,YAAanC,KAAKmC,YAAaN,kBAAmB7B,KAAKwiB,mBAAoBzgB,iBAAkB/B,KAAKyiB,kBAAmBzgB,cAAehC,KAAKgC,cAAeC,cAAejC,KAAKiC,cAAeC,kBAAmBlC,KAAKkC,qBACjV4kB,GAAY7mB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC5BH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,iBAAd,sBACJsC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,oBAAd,+HACHsC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKuiB,eAAetiB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,iBAAd,cACxDsC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKgC,eAAe/B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,uBAAd,kBACxDsC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASE,QAASN,KAAKiC,eAAehC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWnE,GAAG,qBAAd,kBAGzDmpB,GAAY7mB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+D,MAAO,CAAC8iB,oBAAmB,QAAAxkB,OAAUzC,KAAK1C,MAAMwoB,QAArB,MAAkCoB,iBAAgB,aAAAzkB,OAAezC,KAAK1C,MAAM8oB,QAA1B,SAC/GnmB,EAAAC,EAAAC,cAACgnB,EAAD,CAAYnmB,YAAa8E,EAAYtH,OAAQwB,KAAKuiB,gBAClDtiB,EAAAC,EAAAC,cAACinB,EAAD,CAAgBnjB,gBAAiBjE,KAAKqmB,iBAAkBjmB,UAAU,gBACjEH,EAAAC,EAAAC,cAACknB,EAAD,CAAcvhB,WAAYA,EAAYZ,MAAOpH,EAAIkjB,gBACjD/gB,EAAAC,EAAAC,cAACmnB,GAAD,MACArnB,EAAAC,EAAAC,cAAConB,EAAD,MACAtnB,EAAAC,EAAAC,cAACqnB,EAAD,OAEDvnB,EAAAC,EAAAC,cAACinB,EAAD,CAAgBnjB,gBAAiBjE,KAAKolB,iBAAkBhlB,UAAU,cACjEH,EAAAC,EAAAC,cAACsnB,GAAD,CAAexJ,cAAeje,KAAK+kB,uBACnC9kB,EAAAC,EAAAC,cAACunB,GAAD,MACAznB,EAAAC,EAAAC,cAACwnB,GAAD,QAGF1nB,EAAAC,EAAAC,cAAA,SAAO5C,KAAK,OAAOoD,SAAUX,KAAK0iB,aAAcvV,IAAKnN,KAAK4iB,0BAnrB5CxhB,aA2sBHwB,eACdvB,YAnBuB,SAAA/D,GACvB,MAAO,CACNsB,KAAMtB,EAAMsB,KACZS,YAAa/B,EAAM+B,YACnBwe,iBAAkBvgB,EAAMugB,mBAIC,SAACvc,EAAUC,GAAX,MAAyB,CACnD/C,OAAQ,SAACV,GAAD,OAASwD,EpBptBI,SAAAxD,GAAG,MAAK,CAC1BP,KAAMH,EACNU,OoBktBuBU,CAAOV,KACjCF,UAAW,SAACC,EAAOC,GAAR,OAAgBwD,EAAS1D,EAAUC,EAAOC,KACrDJ,UAAW,SAACC,GAAD,OAAQ2D,EAAS5D,EAAUC,KACtCI,mBAAoB,SAACC,EAAGC,EAAGC,GAAP,OAAaoD,EAASvD,EAAmBC,EAAGC,EAAGC,KACnEV,eAAgB,SAACqF,GAAD,OAAavB,EAAS9D,EAAeqF,KACrDpF,gBAAiB,SAACoF,GAAD,OAAavB,EAAS7D,EAAgBoF,KACvDxF,mBAAoB,SAACwF,GAAD,OAAavB,EAASjE,EAAmBwF,OAI7DxB,CAEEyf,uBCruBY8G,GA1BI,WAAwB,IAAvBtqB,EAAuB2L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI4e,EAAW5e,UAAAxJ,OAAA,EAAAwJ,UAAA,QAAAC,EACvC,OAAQ2e,EAAOtqB,MACX,IAAK,UACD,SAAAkF,OAAAM,OAAA+kB,GAAA,EAAA/kB,CACOzF,GADP,CAEIuqB,EAAO/pB,MAEf,IAAK,aACD,OAAOR,EAAM+C,IAAI,SAAC0W,EAAGlZ,GACjB,OAAIA,IAAUgqB,EAAOhqB,MACVkF,OAAOglB,OAAO,GAAIhR,EAAG8Q,EAAO/pB,KAGlCiZ,IAGb,IAAK,aACD,SAAAtU,OAAAM,OAAA+kB,GAAA,EAAA/kB,CACOzF,EAAM6T,MAAM,EAAG0W,EAAOlqB,KAD7BoF,OAAA+kB,GAAA,EAAA/kB,CAEOzF,EAAM6T,MAAM0W,EAAOlqB,GAAK,KAEnC,QACI,OAAOL,ICbJ0qB,GATY,WAAuB,IAAtB1qB,EAAsB2L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAd,EAAG4e,EAAW5e,UAAAxJ,OAAA,EAAAwJ,UAAA,QAAAC,EAC9C,OAAQ2e,EAAOtqB,MACX,IAAK,aACD,OAAOsqB,EAAOlqB,GAClB,QACI,OAAOL,ICDJ2qB,GAJe,WAAwB,IAAvB3qB,EAAuB2L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAeA,UAAAxJ,OAAA,GAAAwJ,UAAA,GAClD,OAAO3L,GCQI4qB,GATgB,WAAwB,IAAvB5qB,EAAuB2L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI4e,EAAW5e,UAAAxJ,OAAA,EAAAwJ,UAAA,QAAAC,EACnD,OAAQ2e,EAAOtqB,MACX,IAAK,0BACD,OAAOsqB,EAAO1pB,QAClB,QACI,OAAOb,aCoBJ0qB,GAzBY,WAGb,IAHc1qB,EAGd2L,UAAAxJ,OAAA,QAAAyJ,IAAAD,UAAA,GAAAA,UAAA,GAHsB,CAChCmE,UAAU,EACV3G,MAAM,GACPohB,EAAW5e,UAAAxJ,OAAA,EAAAwJ,UAAA,QAAAC,EACV,OAAQ2e,EAAOtqB,MACX,IAAK,mBACD,OAAOwF,OAAAolB,GAAA,EAAAplB,CAAA,GACAzF,EADP,CAEImJ,KAAMohB,EAAOvqB,QAErB,IAAK,oBACD,OAAOyF,OAAAolB,GAAA,EAAAplB,CAAA,GACAzF,EADP,CAEIoK,MAAOmgB,EAAOvqB,QAEtB,IAAK,uBACD,OAAOyF,OAAAolB,GAAA,EAAAplB,CAAA,GACAzF,EADP,CAEI8P,SAAUya,EAAOvqB,QAEzB,QACI,OAAOA,ICbJ8qB,gBAAgB,CAC3BxpB,QACAS,eACAgpB,mBACAxK,oBACArX,oBACA8hB,SAAUC,MCARpV,GAAQqV,aAEVC,GACA,GAEA3gB,OAAO4gB,8BAAgC5gB,OAAO4gB,gCAKlDC,IAASC,OACL3oB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAkBqR,MAAOA,IACrBlT,EAAAC,EAAAC,cAAC0oB,EAAA,EAAD,CAAU1V,MAAOA,IACblT,EAAAC,EAAAC,cAAC2oB,GAAD,QAIRrd,SAASK,eAAe","file":"static/js/main.18e2bbaf.chunk.js","sourcesContent":["export const Actions = {\n    SELECT_TAB: 'SELECT_TAB',\n    ADD_TAB: 'ADD_TAB',\n    UPDATE_TAB: 'UPDATE_TAB',\n    DELETE_TAB: 'DELETE_TAB',\n    UPDATE_PROJECT_SETTINGS: 'UPDATE_PROJECT_SETTINGS',\n    SET_HELP_VISIBLE: 'SET_HELP_VISIBLE',\n    SET_ABOUT_VISIBLE: 'SET_ABOUT_VISIBLE',\n    SET_SETTINGS_VISIBLE: 'SET_SETTINGS_VISIBLE'\n};\n\nexport const setSettingsVisible = (state) => ({\n    type: Actions.SET_SETTINGS_VISIBLE,\n    state\n});\n\nexport const setHelpVisible = (state) => ({\n    type: Actions.SET_HELP_VISIBLE,\n    state\n});\n\nexport const setAboutVisible = (state) => ({\n    type: Actions.SET_ABOUT_VISIBLE,\n    state\n});\n\nexport const selectTab = id => ({\n    type: Actions.SELECT_TAB,\n    id\n});\n\nexport const addTab = tab => ({\n    type: Actions.ADD_TAB,\n    tab\n});\n\nexport const updateTab = (index, tab) => ({\n    type: Actions.UPDATE_TAB,\n    index,\n    tab\n});\n\nexport const deleteTab = id => ({\n    type: Actions.DELETE_TAB,\n    id\n});\n\nexport const setProjectSettings = (n, s, i) => ({\n    type: Actions.UPDATE_PROJECT_SETTINGS,\n    payload: {\n        file_name: n,\n        memory_size: s,\n        isa: i\n    }\n})","import React, { Component } from 'react'\n//import brace from 'brace';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/java';\nimport 'brace/theme/github';\n//import './ace_theme';\n\nimport { selectTab, deleteTab, updateTab, setProjectSettings } from \"../actions\"\nimport { connect } from 'react-redux';\n\nclass TextEditor extends Component {\n\taddTab = () => {\n\t\tthis.props.addTab();\n\t}\n\t\n\thandleTabChange = (id) => {\n\t\tthis.props.selectTab(id);\n\t\tlet tab = this.props.tabs[id];\n\n\t\tif (tab) {\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\n\t\t}\n\t}\n\n\thandleTabClose = (event, id) => {\n\t\tevent.stopPropagation();\n\n\t\tlet selected = this.props.selectedtab;\n\t\tif (selected >= id)\n\t\t\tselected -= 1;\n\n\t\tselected = Math.min(Math.max(selected, 0), this.props.tabs.length - 1);\n\n\t\tthis.props.selectTab(selected);\n\n\t\tlet tab = this.props.tabs[selected];\n\n\t\tif (tab) {\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\n\t\t}\n\n\t\tthis.props.deleteTab(id);\n\t}\n\n\tsetEditorValue = (val) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\t\ttab.content = val;\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\trender() {\n\t\tlet tabs = this.props.tabs;\n\t\t\n\t\treturn (\n\t\t\t<main id=\"text_editor\" className=\"text_editor\">\n\t\t\t\t<ul className=\"page_tabs\">\n\t\t\t\t\t{tabs.map((tab, id) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t<li onClick={() => this.handleTabChange(id)} key={id} className={(this.props.selectedtab === id) ? \"selected\" : \"\"}>\n\t\t\t\t\t\t\t<span>{tab.name}</span>\n\t\t\t\t\t\t\t<div onClick={(event) => this.handleTabClose(event, id)}></div>\n\t\t\t\t\t\t</li>);\n\t\t\t\t\t})}\n\t\t\t\t\t<li className=\"add_tab\" onClick={this.addTab}></li>\n\t\t\t\t</ul>\n\t\t\t\t{<AceEditor\n\t\t\t\t\tmode=\"java\"\n\t\t\t\t\ttheme=\"github\"\n\t\t\t\t\tonChange={this.setEditorValue}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"\"\n\t\t\t\t\tname=\"editor_area\"\n\t\t\t\t\tclassName=\"editor_area\"\n\t\t\t\t\tvalue={tabs[this.props.selectedtab].content}\n\t\t\t\t\treadOnly={this.props.is_disabled}\n\t\t\t\t\teditorProps={{$blockScrolling: Infinity}}\n\t\t\t\t/>}\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nconst stateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab\n\t};\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n\tselectTab: (id) => dispatch(selectTab(id)),\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\n\tdeleteTab: (id) => dispatch(deleteTab(id)),\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\n})\n\nexport default connect(\n\tstateToProps,\n\tdispatchToProps\n\t)(TextEditor);","import React, { Component } from 'react';\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport { connect } from 'react-redux';\nimport { setSettingsVisible, setHelpVisible, setAboutVisible } from \"../actions\"\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nconst CONSOLE_INPUT_NONE  = 0;\n\nclass Navigation extends Component {\n\trender() {\n\t\tlet assemble_css = \"\";\n\t\tconst tab  = this.props.tabs[this.props.selectedtab];\n\n\t\tif (tab) {\n\t\t\tif (tab.runningStatus === SimulatingStatus.Stopped) {\n\t\t\t\tassemble_css = \" assemble_ready\";\n\t\t\t}\n\n\t\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE) {\n\t\t\t\tassemble_css += \" simulate_prevent_input\";\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<nav id=\"navigation\" className=\"navigation\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"oak_logo\">\n\t\t\t\t\t\t<ul className=\"drop_down\">\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabRiscv}><Translate id=\"menus.add_tab_riscv\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabMips}><Translate id=\"menus.add_tab_mips\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadAsm}><Translate id=\"menus.load_assembly\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadBin}><Translate id=\"menus.load_binary\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.handleDownloadAsm}><Translate id=\"menus.download_assembly\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.downloadBin}><Translate id=\"menus.download_binary\" /></li>\n\t\t\t\t\t\t\t<li onClick={this.props.downloadRam}><Translate id=\"menus.download_memory\" /></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onClick={this.props.showSettings}><Translate id=\"menus.settings\" /></li>\n\t\t\t\t\t<li onClick={this.props.showHelp}><Translate id=\"menus.help\" /></li>\n\t\t\t\t\t<li onClick={this.props.showAbout}><Translate id=\"menus.about\" /></li>\n\t\t\t\t</ul>\n\n\t\t\t\t<div className=\"buttons_right\">\n\t\t\t\t\t<button className={`assemble`} onClick={this.props.assemble}></button>\n\t\t\t\t\t<button className={`simulate${assemble_css}`} onClick={this.props.simulate}></button>\n\t\t\t\t\t<button className={`simulate_step${assemble_css}`} onClick={this.props.stepbystep}></button>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n};\n\nconst stateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\tshowHelp: (visible) => dispatch(setHelpVisible(visible)),\n\tshowAbout: (visible) => dispatch(setAboutVisible(visible)),\n\tshowSettings: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n\tconnect(stateToProps,\n\t\tappDispatchToProps)\n\t(Navigation));","import React, { Component } from 'react'\n\nexport default class PanelContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: 0\n        };\n    }\n    \n    handleClickTab(e, key) {\n        e.preventDefault();\n        this.setState({selected: key});\n    }\n\n    renderTabs = () => {\n        return (\n            <ul className=\"panel_tabs\">\n                {React.Children.map(this.props.children, (child, i) => \n                    <li className={(this.state.selected === i) ? \"selected\": \"\"} key={child.type.display_name} onClick={(e) => this.handleClickTab(e, i)}>\n                        {child.type.display_name}\n                    </li>\n                )}\n            </ul>\n        );\n    }\n    \n    render() {\n        const { children } = this.props;\n        const childrenProps = React.Children.map(children, (child, id) => {\n            return (this.state.selected === id) && React.cloneElement(child);\n        });\n        return (\n            <div id=\"panel_container\" className={`panel_container ${this.props.className}`}>\n                <div onMouseDown={this.props.handleStartDrag} className=\"panel_drag\"></div>\n                {this.renderTabs()}\n                {childrenProps}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Select extends Component {\n    render() {\n        return (\n            <div className=\"select_group\">\n                <select onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(images/icons/input_select_arrow.svg), url(${this.props.icon})`}}>\n                    {this.props.children}\n                </select>\n                <label className=\"group_label\">{this.props.placeholder}</label>\n            </div>\n        );\n    }\n}\n","export function padNumber(str, length) {\n    var padded = str;\n    for (var i = 0; i < length - str.length; i++)\n    {\n        padded = \"0\" + padded;\n    }\n    return padded;\n};\n    \nexport function parseToFloat(num) {\n    return num;\n};\n\n// From Jonas Raoni Soares Silva, JSFromHell states\n//          that code can be redistributed and modified\n//          as long as original credits are kept.\n// http://jsfromhell.com/classes/binary-parser\nexport function encodeFloat(number) {\n    return number;\n    /*var n = +number,\n        status = (n !== n) || n === -Infinity || n == +Infinity ? n : 0,\n        exp = 0,\n        len = 281, // 2 * 127 + 1 + 23 + 3,\n        bin = new Array(len),\n        signal = (n = status !== 0 ? 0 : n) < 0,\n        n = Math.abs(n),\n        intPart = Math.floor(n),\n        floatPart = n - intPart,\n        i, lastBit, rounded, j, exponent;\n\n    if (status !== 0) {\n        if (n !== n) {\n            return 0x7fc00000;\n        }\n        if (n === Infinity) {\n            return 0x7f800000;\n        }\n        if (n === -Infinity) {\n            return 0xff800000\n        }\n    }\n\n    i = len;\n    while (i) {\n        bin[--i] = 0;\n    }\n\n    i = 129;\n    while (intPart && i) {\n        bin[--i] = intPart % 2;\n        intPart = Math.floor(intPart / 2);\n    }\n\n    i = 128;\n    while (floatPart > 0 && i) {\n        (bin[++i] = ((floatPart *= 2) >= 1) - 0) && --floatPart;\n    }\n\n    i = -1;\n    while (++i < len && !bin[i]);\n\n    if (bin[(lastBit = 22 + (i = (exp = 128 - i) >= -126 && exp <= 127 ? i + 1 : 128 - (exp = -127))) + 1]) {\n        if (!(rounded = bin[lastBit])) {\n            j = lastBit + 2;\n            while (!rounded && j < len) {\n                rounded = bin[j++];\n            }\n        }\n\n        j = lastBit + 1;\n        while (rounded && --j >= 0) {\n            (bin[j] = !bin[j] - 0) && (rounded = 0);\n        }\n    }\n    i = i - 2 < 0 ? -1 : i - 3;\n    while(++i < len && !bin[i]);\n    (exp = 128 - i) >= -126 && exp <= 127 ? ++i : exp < -126 && (i = 255, exp = -127);\n    (intPart || status !== 0) && (exp = 128, i = 129, status == -Infinity ? signal = 1 : (status !== status) && (bin[i] = 1));\n\n    n = Math.abs(exp + 127);\n    exponent = 0;\n    j = 0;\n    while (j < 8) {\n        exponent += (n % 2) << j;\n        n >>= 1;\n        j++;\n    }\n\n    var mantissa = 0;\n    n = i + 23;\n    for (; i < n; i++) {\n        mantissa = (mantissa << 1) + bin[i];\n    }\n    return ((signal ? 0x80000000 : 0) + (exponent << 23) + mantissa) | 00;*/\n}","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber} from './numberttransform'\nimport { connect } from 'react-redux';\n\nclass PanelMemory extends Component {\n    static display_name = \"memory\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            default:\n            case 0: // Hex\n                return padNumber((input >>> 0).toString(16), 2);\n            case 1: // uint\n                return padNumber((input >>> 0).toString(10), 3);\n            case 2: // octal\n                return padNumber((input >>> 0).toString(8), 3);\n            case 3: // bin\n                return padNumber((input >>> 0).toString(2), 8);\n        }\n    };\n\n    render() {\n        let tabs = this.props.tabs;\n        if (tabs.length === 0)\n            return <div></div>;\n            \n        let memory = tabs[this.props.selectedtab].core.memory;\n        let empty = memory.length === 0;\n        return (\n            <div id=\"panel_memory\" className=\"panel panel_memory\">\n                {empty && <span className=\"panel_empty\">Memory Empty</span>}\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Decimal</option>\n                    <option value=\"2\">Octal</option>\n                    <option value=\"3\">Binary</option>\n                </Select>}\n                \n                {!empty && memory.map((byte, i) => {\n                    let val = this.translateRegister(byte);\n                    return (<span key={i}>{val} </span>);\n                })}\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelMemory);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nclass PanelConsole extends Component {\n    static display_name = \"console\";\n\n    render() {\n        let tab = this.props.tabs[this.props.selectedtab];\n        if (!tab)\n            return <div></div>;\n            \n        let log = tab.console;\n        let empty = log.length === 0;\n\n        const running = tab.runningStatus !== SimulatingStatus.Stopped;\n        \n        return (<div id=\"panel_console\" className=\"panel panel_console\">\n            {empty && <span className=\"panel_empty\">Console Empty</span>}\n            {!empty && log.map((line, i) => {\n                return (<div key={i}>{line}</div>);\n            })}\n            {this.props.show_input && <span><span className=\"blinker\">{\"<<\"}</span> {this.props.input}</span>}\n            {running && <div className=\"running_console\">Simulation still not completed...</div>}\n        </div>)\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelConsole);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass PanelLog extends Component {\n    static display_name = \"log\";\n\n    render() {\n        let empty = this.props.core.log.length === 0;\n        return (<div id=\"panel_log\" className=\"panel panel_log\">\n            {empty && <span className=\"panel_empty\">Instruction Log Empty</span>}\n            {!empty && this.props.core.log.map((instruction, i) => {\n                return (<div key={i}>{instruction}</div>);\n            })}\n        </div>)\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n\t\tcore: state.tabs[state.selectedtab]\n\t};\n};\n\nexport default connect(stateToProps)(PanelLog);","/// <reference path=\"InstructionSet.ts\"/>\nvar Utils;\n(function (Utils) {\n    /*\n        signExt\n\n        Sign extends an n-bit value to fit Javascript limits.\n    */\n    function signExt(value, bits) {\n        let mutableValue = value;\n        if ((mutableValue & (1 << (bits - 1))) !== 0) {\n            mutableValue = ((~(0) >>> bits) << bits) | value;\n        }\n        return mutableValue;\n    }\n    Utils.signExt = signExt;\n    /*\n        rangeCheck\n\n        Checks if a value can fit within a certain number of bits.\n    */\n    function rangeCheck(value, bits) {\n        if (bits >= 32) {\n            return null; // No stable way of checking.\n        }\n        var min = -(1 << bits - 1);\n        var max = (1 << bits - 1) - 1;\n        value = signExt(value, bits);\n        if ((min <= (value >> 0)) && ((value >> 0) <= max)) {\n            return true;\n        }\n        return false;\n    }\n    Utils.rangeCheck = rangeCheck;\n    /*\n        catBytes\n        \n        Converts bytes stored in a little endian fashion to a proper js integer.\n    */\n    function catBytes(bytes, bigEndian = false) {\n        if (bytes.length > 4) {\n            return null;\n        }\n        if (bigEndian) {\n            bytes.reverse();\n        }\n        let storage = 0 >>> 0;\n        for (let i = 0; i < bytes.length; i++) {\n            storage = storage | (bytes[i] << (8 * i));\n        }\n        return storage;\n    }\n    Utils.catBytes = catBytes;\n    /*\n        pad\n        \n        Turns a number to a padded string.\n    */\n    function pad(number, digits, radix) {\n        let padded = number.toString(radix);\n        while (digits > padded.length) {\n            padded = \"0\" + padded;\n        }\n        return padded;\n    }\n    Utils.pad = pad;\n    function hex(array) {\n        let hexadecimal = \"\";\n        for (let i = 0; i < array.length; i++) {\n            let hexRepresentation = array[i].toString(16).toUpperCase();\n            if (hexRepresentation.length === 1) {\n                hexRepresentation = \"0\" + hexRepresentation;\n            }\n            hexadecimal += hexRepresentation + \" \";\n        }\n        return hexadecimal;\n    }\n    Utils.hex = hex;\n})(Utils || (Utils = {}));\n// Changes a string of hex bytes to an array of numbers.\nString.prototype.interpretedBytes = function () {\n    let hexes = this.split(' '); // Remove spaces, then seperate characters\n    let bytes = [];\n    for (let i = 0; i < hexes.length; i++) {\n        let value = parseInt(hexes[i], 16);\n        if (!isNaN(value)) {\n            bytes.push(value);\n        }\n    }\n    return bytes;\n};\n// Check if haystack has needle in the beginning.\nString.prototype.hasPrefix = function (needle) {\n    return this.substr(0, needle.length) === needle;\n};\nvar Kind;\n(function (Kind) {\n    Kind[Kind[\"instruction\"] = 0] = \"instruction\";\n    Kind[Kind[\"data\"] = 1] = \"data\";\n    Kind[Kind[\"directive\"] = 2] = \"directive\";\n    Kind[Kind[\"noise\"] = 3] = \"noise\";\n})(Kind || (Kind = {}));\n;\nclass Line {\n    constructor(raw, number) {\n        this.addressThisPass = null;\n        this.sensitive = false;\n        this.machineCode = [];\n        this.raw = raw;\n        this.number = number;\n        this.kind = Kind.noise;\n        this.sensitivityList = [];\n        this.possibleInstructions = [];\n    }\n    static arrayFromFile(file) {\n        return file.split('\\n').map((line, index) => new Line(line, index));\n    }\n    initialProcess(assembler, text = true) {\n        let comment = assembler.keywordRegexes[Keyword.comment];\n        let tmp = comment.exec(this.raw)[1];\n        let label = assembler.keywordRegexes[Keyword.label];\n        let pieces = label.exec(tmp);\n        this.label = pieces[1];\n        this.processed = pieces[2] || '';\n        if (/^s*$/.exec(this.processed) !== null) {\n            return text;\n        }\n        if (assembler.keywordRegexes[Keyword.directive] != null) {\n            let captures = RegExp(assembler.keywordRegexes[Keyword.directive]).exec(this.processed);\n            if (captures !== null) {\n                this.directive = assembler.directives[captures[1]];\n                this.directiveData = captures[2];\n            }\n        }\n        if (text) {\n            if (this.directive !== undefined) {\n                switch (this.directive) {\n                    case Directive.data:\n                        this.kind = Kind.directive;\n                        return false;\n                    case Directive.text:\n                        this.kind = Kind.directive;\n                        break;\n                    default:\n                        this.invalidReason = \"text.unsupportedDirective\";\n                }\n                return true;\n            }\n            this.kind = Kind.instruction;\n            assembler.instructionSet.instructions.forEach(instruction => {\n                let match = instruction.format.regex.exec(this.processed);\n                if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\n                    this.possibleInstructions.push([instruction, match.slice(2), [], null]);\n                }\n                return match !== null;\n            });\n            if (this.possibleInstructions.length === 0) {\n                this.invalidReason = \"text.noMatchingInstructions\";\n                return true;\n            }\n            let minimum = this.possibleInstructions[0][0].bytes;\n            (this.machineCode = []).length = minimum;\n            this.machineCode.fill(0);\n            return true;\n        }\n        else {\n            let count = null; // byte count\n            let zeroDelimitedString = 0;\n            if (this.directive !== undefined) {\n                this.kind = Kind.data;\n                switch (this.directive) {\n                    case Directive.data:\n                        this.kind = Kind.directive;\n                        break;\n                    case Directive.text:\n                        this.kind = Kind.directive;\n                        return true;\n                    case Directive._32bit:\n                        count = count || 4;\n                    // fall through\n                    case Directive._16bit:\n                        count = count || 2;\n                    // fall through\n                    case Directive._8bit:\n                        count = count || 1;\n                        let elements = this.directiveData.split(/\\s*,\\s*/);\n                        (this.machineCode = []).length = (elements.length * count);\n                        this.machineCode.fill(0);\n                        this.kind = Kind.data;\n                        break;\n                    case Directive.cString:\n                        zeroDelimitedString = 1;\n                    // fall through\n                    case Directive.string:\n                        if (assembler.keywordRegexes[Keyword.string] === null) {\n                            this.invalidReason = \"isa.noStringTokenDefined\";\n                        }\n                        let match = assembler.keywordRegexes[Keyword.string].exec(this.directiveData);\n                        if (match === null) {\n                            this.invalidReason = \"data.invalidString\";\n                        }\n                        else {\n                            let regex = RegExp(assembler.generalCharacters, \"g\");\n                            let characters = [];\n                            let found = null;\n                            while ((found = regex.exec(match[1]))) {\n                                characters.push(found);\n                            }\n                            (this.machineCode = []).length = (characters.length + zeroDelimitedString);\n                            for (let c in characters) {\n                                let character = String(characters[c]);\n                                let value = character.charCodeAt(0);\n                                if (character.length > 2) {\n                                    value = Assembler.escapedCharacters[character[1]];\n                                }\n                                this.machineCode[c] = value;\n                            }\n                            if (zeroDelimitedString === 1) {\n                                this.machineCode[this.machineCode.length - 1] = 0;\n                            }\n                        }\n                        this.kind = Kind.data;\n                        break;\n                    default:\n                        this.invalidReason = \"data.unrecognizedDirective\";\n                }\n            }\n            else {\n                let isInstruction = false;\n                assembler.instructionSet.instructions.forEach(instruction => {\n                    let match = instruction.format.regex.exec(this.processed);\n                    if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\n                        isInstruction = true;\n                    }\n                });\n                if (isInstruction) {\n                    this.invalidReason = \"data.instruction\";\n                }\n                else {\n                    this.invalidReason = \"data.unknownInput\";\n                }\n            }\n            return false;\n        }\n    }\n    assembleText(assembler, lines, address) {\n        let candidates = false;\n        testingInstructions: for (let i in this.possibleInstructions) {\n            let possibleInstruction = this.possibleInstructions[i];\n            let instruction = possibleInstruction[0];\n            let args = possibleInstruction[1];\n            let machineCode = instruction.template;\n            for (var j in instruction.format.ranges) {\n                let range = instruction.format.ranges[j];\n                if (range.parameter === undefined) {\n                    continue;\n                }\n                let limited = range.totalBits;\n                let bits = limited || range.bits;\n                let store = null;\n                if (range.parameterType == Parameter.special) {\n                    store = instruction.format.processSpecialParameter(args[range.parameter], Parameter.special, bits, address, assembler);\n                }\n                else {\n                    store = assembler.process(args[range.parameter], range.parameterType, bits, address, instruction.bytes);\n                }\n                if (store.errorMessage !== null) {\n                    possibleInstruction[3] = store.errorMessage;\n                    continue testingInstructions;\n                }\n                else if (store.context !== null && store.value === null) {\n                    store.context.sensitivityList.push(this);\n                    this.sensitive = true;\n                    break testingInstructions;\n                }\n                else {\n                    let register = store.value;\n                    let startBit = range.limitStart;\n                    let endBit = range.limitEnd;\n                    if (limited !== undefined && startBit !== undefined && endBit !== undefined) {\n                        register >>= startBit; // discard start bits bits\n                        let bits = (endBit - startBit + 1);\n                        register &= (1 << bits) - 1; // mask end - start + 1 bits\n                    }\n                    let masked = register & (1 << bits) - 1;\n                    machineCode |= masked << range.start;\n                }\n            }\n            for (let i = 0; i < instruction.bytes; i += 1) {\n                possibleInstruction[2].push(machineCode & 0xFF);\n                machineCode >>>= 8;\n            }\n            candidates = true;\n        }\n        if (candidates) {\n            // Expand machine code if applicable\n            let smallestPossibleInstruction = this.possibleInstructions.filter(pi => pi[3] === null)[0];\n            this.machineCode = smallestPossibleInstruction[2];\n        }\n        // Handle errors\n        let errorMessage = null;\n        let errorOccurred = !(candidates || this.sensitive);\n        if (errorOccurred) {\n            errorMessage = this.possibleInstructions[this.possibleInstructions.length - 1][3]; //Typically the most lenient option is last\n        }\n        return errorMessage;\n    }\n    assembleData(assembler, lines, address) {\n        let errorMessage = null;\n        let count = null;\n        switch (this.directive) {\n            case Directive._32bit:\n                count = count || 4;\n            // fall through\n            case Directive._16bit:\n                count = count || 2;\n            // fall through\n            case Directive._8bit:\n                count = count || 1;\n                let elements = this.directiveData.split(/\\s*,\\s*/);\n                for (let i = 0; i < elements.length; i += 1) {\n                    let element = elements[i];\n                    let bits = count << 3;\n                    let store = assembler.process(element, Parameter.immediate, bits, address, 0);\n                    if (store.errorMessage !== null) {\n                        errorMessage = store.errorMessage;\n                        break;\n                    }\n                    else if (store.context !== null && store.value === null) {\n                        store.context.sensitivityList.push(this);\n                        this.sensitive = true;\n                        break;\n                    }\n                    else {\n                        let stored = store.value;\n                        for (let j = 0; j < count; j += 1) {\n                            let offset = (count * i);\n                            this.machineCode[j + offset] = stored & 0xFF;\n                            stored >>>= 8;\n                        }\n                    }\n                }\n                break;\n            case Directive.cString:\n            case Directive.string:\n                // Already handled in pass 0.\n                break;\n            default:\n                this.invalidReason = \"data.unrecognizedDirective\";\n        }\n        return errorMessage;\n    }\n    assemble(assembler, lines, address) {\n        this.sensitive = false;\n        let result = [null, false];\n        switch (this.kind) {\n            case Kind.instruction:\n                result[0] = this.assembleText(assembler, lines, address);\n                break;\n            case Kind.data:\n                result[0] = this.assembleData(assembler, lines, address);\n                break;\n            default:\n                break;\n        }\n        let lineByLabel = assembler.linesByLabel[this.label];\n        if (lineByLabel !== undefined) {\n            lineByLabel[1] = address;\n        }\n        if (result[0] === null) {\n            for (let i in this.sensitivityList) {\n                let sensor = this.sensitivityList[i];\n                if (sensor.addressThisPass !== null) {\n                    let sensorLength = sensor.machineCode.length;\n                    let newAssembly = sensor.assemble(assembler, lines, sensor.addressThisPass);\n                    if (sensor.sensitive) {\n                        // Still sensitive, leave it alone uwu\n                    }\n                    else {\n                        if (newAssembly[1]) {\n                            result[1] = true;\n                            break;\n                        }\n                        if (sensor.machineCode.length !== sensorLength) {\n                            result[1] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.invalidReason = result[0];\n        }\n        return result;\n    }\n}\nclass Assembler {\n    constructor(instructionSet, endianness, memoryMap = null) {\n        this.linesByLabel = [];\n        this.incrementOnFetch = instructionSet.incrementOnFetch;\n        this.keywordRegexes = [];\n        this.memoryMap = memoryMap;\n        if (instructionSet.keywordRegexes) {\n            this.keywordRegexes = instructionSet.keywordRegexes;\n        }\n        else if (instructionSet.keywords) {\n            let words = instructionSet.keywords;\n            this.keywordRegexes = [];\n            if (words[Keyword.directive]) {\n                let options = Assembler.options(instructionSet.keywords[Keyword.directive]);\n                if (options) {\n                    this.keywordRegexes[Keyword.directive] = RegExp(options + \"([^\\\\s]+)\\\\s*(.+)*\");\n                }\n            }\n            if (words[Keyword.comment]) {\n                let options = Assembler.options(words[Keyword.comment]);\n                if (options) {\n                    this.keywordRegexes[Keyword.comment] = RegExp(\"^(.*?)(\" + options + \".*)?$\");\n                }\n            }\n            if (words[Keyword.label]) {\n                let options = Assembler.options(words[Keyword.label]);\n                if (options) {\n                    this.keywordRegexes[Keyword.label] = RegExp(\"^(?:([A-Za-z_][A-Za-z0-9_]*)\" + options + \")?\\\\s*(.*)?$\");\n                }\n            }\n            if (words[Keyword.register]) {\n                let options = Assembler.options(words[Keyword.register]);\n                if (options) {\n                    this.keywordRegexes[Keyword.register] = RegExp(options + \"([0-9]+)\");\n                }\n            }\n            this.keywordRegexes[Keyword.numeric] = RegExp(\"(-?(?:0([\" + Assembler.radixList + \"]))?[A-F0-9]+)\");\n            if (words[Keyword.charMarker]) {\n                let options = Assembler.options(words[Keyword.charMarker]);\n                if (options) {\n                    let escapable = options.length > 1 ? \"\" : \"\\\\\" + options;\n                    //this.keywordRegexes[Keyword.char] = RegExp(options + \"\" + options);\n                    this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + escapable + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\n                    this.keywordRegexes[Keyword.char] = RegExp(options + '(' + this.generalCharacters + ')' + options);\n                }\n            }\n            else {\n                this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\n            }\n            if (words[Keyword.stringMarker]) {\n                let options = Assembler.options(words[Keyword.stringMarker]);\n                if (options) {\n                    this.keywordRegexes[Keyword.string] = RegExp(options + \"(\" + this.generalCharacters + \"*)\" + options);\n                }\n            }\n        }\n        else {\n            console.log(\"INSTRUCTION SET WARNING: This instruction set doesn't define any keywords.\");\n        }\n        this.directives = instructionSet.directives;\n        this.endianness = (endianness) ? endianness : instructionSet.endianness;\n        this.instructionSet = instructionSet;\n    }\n    //Returns number on success, string on failure\n    process(text, type, bits, address, instructionLength) {\n        let result = {\n            errorMessage: null,\n            value: null,\n            context: null\n        };\n        switch (type) {\n            case Parameter.register:\n                let index = this.instructionSet.abiNames.indexOf(text);\n                if (index !== -1) {\n                    result.value = index;\n                    return result;\n                }\n                let registerNo = null;\n                if (this.keywordRegexes[Keyword.register]) {\n                    let match = this.keywordRegexes[Keyword.register].exec(text);\n                    if (match !== null) {\n                        registerNo = match[1];\n                    }\n                }\n                if (registerNo === null) {\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\n                    return result;\n                }\n                registerNo = parseInt(registerNo, 10);\n                if ((registerNo & (~0 << bits)) !== 0) {\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\n                    return result;\n                }\n                result.value = registerNo;\n                return result;\n            case Parameter.offset:\n            case Parameter.immediate:\n                //Label\n                let value = null;\n                let reference = this.linesByLabel[text];\n                if (reference !== undefined) {\n                    result.context = reference[0];\n                    if (reference[1] === null) {\n                        return result;\n                    }\n                    value = reference[1];\n                }\n                if (value === null && this.keywordRegexes[Keyword.char]) {\n                    let extraction = RegExp(this.keywordRegexes[Keyword.char]).exec(text);\n                    if (extraction !== null && extraction[1] !== undefined) {\n                        value = extraction[1].charCodeAt(0);\n                        if (value > 255) {\n                            result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\n                            return result;\n                        }\n                    }\n                }\n                if (value === null && this.keywordRegexes[Keyword.numeric] !== undefined) {\n                    let array = RegExp(this.keywordRegexes[Keyword.numeric]).exec(text);\n                    if (array !== null) {\n                        let radix = Assembler.radixes[array[2]] || 10;\n                        let interpretable = array[1];\n                        value = parseInt(interpretable, radix);\n                    }\n                }\n                if (value !== null && type === Parameter.offset) {\n                    value -= address;\n                    if (this.incrementOnFetch) {\n                        value -= instructionLength;\n                    }\n                }\n                if (value === null || isNaN(value)) {\n                    result.errorMessage = `args.valueUnrecognized(${text})`;\n                    return result;\n                }\n                else if (Utils.rangeCheck(value, bits) === false) {\n                    result.errorMessage = `args.outOfRange(${text})`;\n                    return result;\n                }\n                result.value = value;\n                return result;\n            default:\n                result.errorMessage = \"oak.paramUnsupported\";\n                return result;\n        }\n    }\n    static options(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        let options = \"\";\n        for (let i = 0; i < list.length; i++) {\n            let keyword = list[i];\n            if (keyword === \"\\\\\") {\n                console.log(\"INSTRUCTION SET WARNING: '\\\\' used as keyword. This behavior is undefined.\");\n                return null;\n            }\n            if (options === \"\") {\n                options = \"(?:\";\n            }\n            else {\n                options += \"|\";\n            }\n            options += keyword;\n        }\n        return options + \")\";\n    }\n    assemble(lines, pass) {\n        lines.map(line => line.addressThisPass = null);\n        let errors = [];\n        let assemblerModeText = true;\n        let address = 0;\n        for (var i in lines) {\n            let line = lines[i];\n            switch (pass) {\n                case 0: // Zero Pass - Minimum Possible Size\n                    assemblerModeText = line.initialProcess(this, assemblerModeText);\n                    if (line.invalidReason !== undefined) {\n                        errors.push(line);\n                    }\n                    if (line.label !== undefined) {\n                        this.linesByLabel[line.label] = [line, null];\n                    }\n                    break;\n                default:\n                    line.addressThisPass = address;\n                    let asm = line.assemble(this, lines, address); // Assumption: Instruction cannot become context-sensitive based on size\n                    if (asm[0] !== null) {\n                        errors.push(line);\n                    }\n                    if (asm[1]) {\n                        return null; // Repass\n                    }\n                    address += line.machineCode.length;\n            }\n        }\n        return errors;\n    }\n}\nAssembler.radixes = {\n    'b': 2,\n    'o': 8,\n    'd': 10,\n    'h': 16\n};\nAssembler.radixList = Object.keys(Assembler.radixes).join(\"\");\nAssembler.escapedCharacters = {\n    '0': 0,\n    't': 9,\n    'n': 10,\n    'r': 13,\n    '\\'': 47,\n    '\"': 42\n};\nAssembler.escapedCharacterList = Object.keys(Assembler.escapedCharacters).join(\"\");\n/// <reference path=\"Core.ts\"/>\n/// <reference path=\"Assembler.ts\"/>\nvar Parameter;\n(function (Parameter) {\n    Parameter[Parameter[\"immediate\"] = 0] = \"immediate\";\n    Parameter[Parameter[\"register\"] = 1] = \"register\";\n    Parameter[Parameter[\"condition\"] = 2] = \"condition\";\n    Parameter[Parameter[\"offset\"] = 3] = \"offset\";\n    Parameter[Parameter[\"special\"] = 4] = \"special\";\n    Parameter[Parameter[\"fpImmediate\"] = 5] = \"fpImmediate\";\n})(Parameter || (Parameter = {}));\n;\nvar Endianness;\n(function (Endianness) {\n    Endianness[Endianness[\"little\"] = 0] = \"little\";\n    Endianness[Endianness[\"big\"] = 1] = \"big\";\n    Endianness[Endianness[\"bi\"] = 2] = \"bi\";\n})(Endianness || (Endianness = {}));\n;\nvar Keyword;\n(function (Keyword) {\n    Keyword[Keyword[\"directive\"] = 0] = \"directive\";\n    Keyword[Keyword[\"comment\"] = 1] = \"comment\";\n    Keyword[Keyword[\"label\"] = 2] = \"label\";\n    Keyword[Keyword[\"stringMarker\"] = 3] = \"stringMarker\";\n    Keyword[Keyword[\"charMarker\"] = 4] = \"charMarker\";\n    Keyword[Keyword[\"register\"] = 5] = \"register\";\n    //Only send as keywordRegexes,\n    Keyword[Keyword[\"string\"] = 6] = \"string\";\n    Keyword[Keyword[\"char\"] = 7] = \"char\";\n    Keyword[Keyword[\"numeric\"] = 8] = \"numeric\";\n})(Keyword || (Keyword = {}));\n;\nvar Directive;\n(function (Directive) {\n    Directive[Directive[\"text\"] = 0] = \"text\";\n    Directive[Directive[\"data\"] = 1] = \"data\";\n    Directive[Directive[\"string\"] = 2] = \"string\";\n    Directive[Directive[\"cString\"] = 3] = \"cString\";\n    //Ints and chars,\n    Directive[Directive[\"_8bit\"] = 4] = \"_8bit\";\n    Directive[Directive[\"_16bit\"] = 5] = \"_16bit\";\n    Directive[Directive[\"_32bit\"] = 6] = \"_32bit\";\n    Directive[Directive[\"_64bit\"] = 7] = \"_64bit\";\n    //Fixed point decimals,\n    Directive[Directive[\"fixedPoint\"] = 8] = \"fixedPoint\";\n    Directive[Directive[\"floatingPoint\"] = 9] = \"floatingPoint\";\n    //Custom,\n    Directive[Directive[\"custom\"] = 10] = \"custom\";\n})(Directive || (Directive = {}));\n;\nclass BitRange {\n    get end() {\n        return this.start + this.bits - 1;\n    }\n    constructor(field, start, bits, constant = null, signed = false) {\n        this.field = field;\n        this.start = start;\n        this.bits = bits;\n        this.constant = constant;\n        this.signed = signed;\n    }\n    limited(totalBits, limitStart = null, limitEnd = null) {\n        this.totalBits = totalBits;\n        this.limitStart = limitStart;\n        this.limitEnd = limitEnd;\n        return this;\n    }\n    parameterized(parameter, parameterType, parameterDefaultValue = null) {\n        this.parameter = parameter;\n        this.parameterDefaultValue = parameterDefaultValue;\n        this.parameterType = parameterType;\n        return this;\n    }\n}\n;\nclass Format {\n    constructor(ranges, regex, disassembly, processSpecialParameter = null, decodeSpecialParameter = null) {\n        this.ranges = ranges;\n        this.regex = regex;\n        this.disassembly = disassembly;\n        this.processSpecialParameter = processSpecialParameter;\n        this.decodeSpecialParameter = decodeSpecialParameter;\n    }\n}\n;\nclass Instruction {\n    constructor(mnemonic, format, constants, constValues, executor, signatoryOverride = null, pseudoInstructionFor = []) {\n        this.computedBits = null;\n        /*\n         Mask\n         \n         It's basically the bits of each format, but with Xs replacing parts that aren't constant in every instruction.\n         For example, if an 8-bit ISA defines 5 bits for the register and 3 bits for the opcode, and the opcode for ADD is 101 then the ADD instruction's mask is XXXXX101.\n        */\n        this.computedMask = null;\n        this.computedTemplate = null;\n        this.mnemonic = mnemonic;\n        this.format = format;\n        this.constants = [];\n        for (let i in constants) {\n            this.constants[constants[i]] = constValues[i];\n        }\n        this.executor = executor;\n        this.signatoryOverride = signatoryOverride;\n        this.pseudoInstructionFor = pseudoInstructionFor;\n    }\n    pad(str, length) {\n        let padded = str;\n        for (let i = 0; i < length - str.length; i++) {\n            padded = \"0\" + padded;\n        }\n        return padded;\n    }\n    get bits() {\n        if (this.computedBits !== null) {\n            return this.computedBits;\n        }\n        let count = 0;\n        for (var i in this.format.ranges) {\n            count += this.format.ranges[i].bits;\n        }\n        this.computedBits = count;\n        return this.computedBits;\n    }\n    get bytes() {\n        return Math.ceil(this.bits / 8);\n    }\n    get mask() {\n        if (this.computedMask !== null) {\n            return this.computedMask;\n        }\n        var string = '';\n        for (let i = 0; i < this.bits; i += 1) {\n            string += 'X';\n        }\n        for (let i in this.format.ranges) {\n            let range = this.format.ranges[i];\n            let constant = this.constants[range.field];\n            if (constant === null) {\n                constant = range.constant;\n            }\n            if (constant != null) {\n                let before = string.substr(0, this.bits - range.end - 1);\n                let addition = Utils.pad(constant, range.bits, 2);\n                let after = range.start === 0 ? '' : string.substr(-range.start);\n                string = before + addition + after;\n            }\n        }\n        this.computedMask = string;\n        return this.computedMask;\n    }\n    ;\n    match(machineCode) {\n        let machineCodeMutable = machineCode >>> 0;\n        let maskBits = this.mask.split(\"\");\n        for (let i = this.bits - 1; i >= 0; i--) {\n            let bit = (machineCodeMutable & 1);\n            machineCodeMutable >>= 1;\n            if (maskBits[i] === \"X\") {\n                continue;\n            }\n            if (parseInt(maskBits[i], 10) !== bit) {\n                return false;\n            }\n        }\n        return true;\n    }\n    get template() {\n        if (this.computedTemplate != null) {\n            return this.computedTemplate;\n        }\n        let temp = 0 >>> 0;\n        for (let i in this.format.ranges) {\n            let range = this.format.ranges[i];\n            let constant = this.constants[range.field];\n            if (constant === null) {\n                constant = range.constant;\n            }\n            if (constant != null) {\n                temp |= (constant << range.start);\n            }\n        }\n        this.computedTemplate = temp;\n        return temp;\n    }\n    ;\n}\n;\nclass PseudoInstruction {\n}\n;\nclass InstructionSet {\n    //Return Mnemonic Index (pseudo)\n    pseudoMnemonicSearch(mnemonic) {\n        return -1;\n    } //Worst case = instructions.length\n    //Return Mnemonic Index (True)\n    mnemonicSearch(mnemonic) {\n        for (let i = 0; i < this.instructions.length; i++) {\n            if (this.instructions[i].mnemonic === mnemonic) {\n                return i;\n            }\n        }\n        return -1;\n    } //Worst case = instructions.length\n    instructionsPrefixing(line) {\n        var result = [];\n        for (let i in this.instructions) {\n            let instruction = this.instructions[i];\n            if (line.toUpperCase().hasPrefix(instruction.mnemonic)) {\n                let captures = instruction.format.regex.exec(line);\n                if (captures && captures[1].toUpperCase() === instruction.mnemonic) {\n                    result.push(instruction);\n                }\n            }\n        }\n        return result;\n    }\n    disassemble(instruction, args) {\n        let output = instruction.format.disassembly;\n        output = output.replace(\"@mnem\", instruction.mnemonic);\n        for (let i = 0; i < instruction.format.ranges.length; i++) {\n            let range = instruction.format.ranges[i];\n            let parameter = range.parameter;\n            if (parameter != null) {\n                output = output.replace(\"@arg\" + range.parameter, (range.parameterType === Parameter.register) ? this.abiNames[args[parameter]] : args[parameter].toString());\n            }\n        }\n        return output;\n    }\n    /*\n        InstructionSet initializer\n    */\n    constructor(bits, formats, instructions, pseudoInstructions, abiNames, keywords, directives, incrementOnFetch, exampleCode) {\n        this.bits = bits;\n        this.formats = formats;\n        this.instructions = instructions;\n        instructions.sort((a, b) => a.bytes - b.bytes);\n        this.pseudoInstructions = pseudoInstructions;\n        this.abiNames = abiNames;\n        this.keywords = keywords;\n        this.directives = directives;\n        this.incrementOnFetch = incrementOnFetch;\n        this.exampleCode = exampleCode;\n    }\n}\n;\n/// <reference path=\"Memory.ts\"/>\n/// <reference path=\"Core.ts\" />\nclass VirtualOS {\n    constructor() {\n        this.continueInputString = (core, val) => {\n            let reg = core.virtualOSArgumentVectorStart;\n            let arg = core.registerFile.read(reg);\n            let array = [];\n            for (let i = 0; i < val.length; ++i) {\n                array.push(val.charCodeAt(i));\n            }\n            core.memset(arg, array);\n        };\n        this.continueInputInt = (core, val) => {\n            let reg = core.virtualOSArgumentVectorStart;\n            core.registerFile.write(reg, val);\n        };\n    }\n    ecall(core) {\n        let service = core.registerFile.read(core.virtualOSServiceRegister);\n        const start = core.virtualOSArgumentVectorStart;\n        switch (service) {\n            case 1: {\n                let val = core.registerFile.read(start);\n                this.outputInt(val);\n                break;\n            }\n            case 4: {\n                let iterator = core.registerFile.read(start);\n                let array = [];\n                let char = null;\n                while ((char = core.memcpy(iterator, 1)[0]) !== 0) {\n                    array.push(char);\n                    iterator += 1;\n                }\n                let outStr = array.map(c => String.fromCharCode(c)).join('');\n                this.outputString(outStr);\n                return null;\n            }\n            case 5: {\n                this.inputInt();\n                return \"WAIT\";\n            }\n            case 8: {\n                this.inputString();\n                return \"WAIT\";\n            }\n            case 10:\n                this.handleHalt();\n                return \"HALT\";\n            default:\n                return \"UNHANDLED\";\n        }\n        return null;\n    }\n}\n/// <reference path=\"InstructionSet.ts\"/>\n/// <reference path=\"Memory.ts\"/>\n/// <reference path=\"VirtualOS.ts\"/>\nclass Core {\n    //Returns bytes on success, null on failure\n    memcpy(address, bytes) {\n        if (((address + bytes) >>> 0) > this.memorySize) {\n            return null;\n        }\n        let result = [];\n        for (let i = 0; i < bytes; i++) {\n            result.push(this.memory[address + i]);\n        }\n        return result;\n    }\n    //Returns boolean indicating success\n    //Use to store machine code in memory so it can be executed.\n    memset(address, bytes) {\n        if (address < 0) {\n            return false;\n        }\n        if (address + bytes.length > this.memorySize) {\n            return false;\n        }\n        for (let i = 0; i < bytes.length; i++) {\n            this.memory[address + i] = bytes[i];\n        }\n        return true;\n    }\n    decode() {\n        let insts = this.instructionSet.instructions;\n        this.decoded = null;\n        this.arguments = [];\n        for (let i = 0; i < insts.length; i++) {\n            if (insts[i].match(this.fetched)) {\n                this.decoded = insts[i];\n                break;\n            }\n        }\n        if (this.decoded === null) {\n            return null;\n        }\n        let bitRanges = this.decoded.format.ranges;\n        for (let i in bitRanges) {\n            let range = bitRanges[i];\n            if (range.parameter != null) {\n                let limit = range.limitStart;\n                let value = ((this.fetched >>> range.start) & ((1 << range.bits) - 1)) << limit;\n                if (range.parameterType === Parameter.special) {\n                    value = this.decoded.format.decodeSpecialParameter(value, this.pc); //Unmangle...\n                }\n                this.arguments[range.parameter] = this.arguments[range.parameter] || 0;\n                this.arguments[range.parameter] = this.arguments[range.parameter] | value;\n                if (this.decoded.format.ranges[i].signed && range.parameterType !== Parameter.register) {\n                    this.arguments[range.parameter] = Utils.signExt(this.arguments[range.parameter], range.totalBits ? range.totalBits : range.bits);\n                }\n            }\n        }\n        return this.instructionSet.disassemble(this.decoded, this.arguments);\n    }\n    //Returns null on success, error message on error.\n    execute() {\n        return this.decoded.executor(this);\n    }\n}\n/// <reference path=\"Core.ts\"/>\nclass CoreFactory {\n    static getCoreList() {\n        return Object.keys(this.ISAs);\n    }\n    static getCore(architecture, memorySize, virtualOS, options) {\n        let isa = this.ISAs[architecture];\n        if (isa === undefined) {\n            throw \"oak.unregisteredISA\";\n        }\n        for (let key in options) {\n            if (isa.options[key] === undefined) {\n                throw \"isa.unsupportedOptions\";\n            }\n        }\n        let instructionSet = isa.generator(options);\n        return new isa.core(memorySize, virtualOS, instructionSet);\n    }\n}\nCoreFactory.ISAs = {};\n/// <reference path=\"../Assembler.ts\" />\n/// <reference path=\"../CoreFactory.ts\"/>\n//The RISC-V Instruction Set Architecture, Version 2.1\nfunction RISCV(options) {\n    //Formats and Instructions\n    let formats = [];\n    let instructions = [];\n    let pseudoInstructions = [];\n    //R-Type\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"rs2\", 20, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b001, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b010, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTU\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b011, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.registerFile.read(core.arguments[2]) >>> 0)) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b100, 0b0000000], function (core) {\n        //\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRA\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b110, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b111, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    //I-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(2, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let iType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JALR\", iType, [\"opcode\", \"funct3\"], [0b1100111, 0b000], function (core) {\n        core.registerFile.write(core.arguments[0], core.pc + 4);\n        core.pc = (core.registerFile.read(core.arguments[1]) + Utils.signExt(core.arguments[2], 12));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b010], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b011], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\n        core.pc += 4;\n        return null;\n    }, false));\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b100], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b110], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b111], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\n        core.pc += 4;\n        return null;\n    }));\n    //IL Subtype\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\s*\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\n    let ilSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LB\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b000], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LH\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b001], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LW\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b010], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LBU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b100], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], bytes[0]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"LHU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b101], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        core.pc += 4;\n        return null;\n    }));\n    // IS Subtype\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"shamt\", 20, 5).parameterized(2, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?0?[boxd]?[0-9A-F]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let isSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SLLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b001, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0000000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRAI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0100000], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\n        core.pc += 4;\n        return null;\n    }));\n    //S-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 25, 7, null, true).parameterized(1, Parameter.immediate).limited(12, 5, 11),\n        new BitRange(\"rs2\", 20, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"imm\", 7, 5, null, true).parameterized(1, Parameter.immediate).limited(12, 0, 4),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\n    let sType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SB\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b000], function (core) {\n        let bytes = [];\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SH\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b001], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SW\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b010], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            core.pc += 4;\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    //U-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 12, 20, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.offset),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let uType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LUI\", uType, [\"opcode\"], [0b0110111], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12));\n        core.pc += 4;\n        return null;\n    }));\n    instructions.push(new Instruction(\"AUIPC\", uType, [\"opcode\"], [0b0010111], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12) + core.pc);\n        core.pc += 4;\n        return null;\n    }));\n    //SB-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(2, Parameter.offset).limited(13, 12, 12),\n        new BitRange(\"imm\", 25, 6, null, true).parameterized(2, Parameter.offset).limited(13, 5, 10),\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"imm\", 8, 4, null, true).parameterized(2, Parameter.offset).limited(13, 1, 4),\n        new BitRange(\"imm\", 7, 1, null, true).parameterized(2, Parameter.offset).limited(13, 11, 11),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let sbType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"BEQ\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b000], function (core) {\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BNE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b001], function (core) {\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BLT\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b100], function (core) {\n        if (core.registerFile.read(core.arguments[0]) < core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BGE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b101], function (core) {\n        if (core.registerFile.read(core.arguments[0]) >= core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BLTU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b110], function (core) {\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) < (core.registerFile.read(core.arguments[1]) >>> 0)) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BGEU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b111], function (core) {\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) >= (core.registerFile.read(core.arguments[1]) >>> 0)) {\n            core.pc += core.arguments[2];\n        }\n        else {\n            core.pc += 4;\n        }\n        return null;\n    }));\n    //UJ-Type\n    formats.push(new Format([\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(1, Parameter.offset).limited(21, 20, 20),\n        new BitRange(\"imm\", 21, 10, null, true).parameterized(1, Parameter.offset).limited(21, 1, 10),\n        new BitRange(\"imm\", 20, 1, null, true).parameterized(1, Parameter.offset).limited(21, 11, 11),\n        new BitRange(\"imm\", 12, 8, null, true).parameterized(1, Parameter.offset).limited(21, 12, 19),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let ujType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JAL\", ujType, [\"opcode\"], [0b1101111], function (core) {\n        core.registerFile.write(core.arguments[0], core.pc + 4);\n        //console.log(core.pc);\n        core.pc += Utils.signExt(core.arguments[1], 21);\n        //console.log(core.arguments[1]);\n        return null;\n    }));\n    //System Type\n    //All-Const Type\n    formats.push(new Format([\n        new BitRange(\"const\", 0, 32)\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\n    let allConstSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ECALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], (core) => {\n        let result = core.virtualOS.ecall(core);\n        core.pc += 4;\n        return result;\n    }));\n    //PseudoInstructions\n    //This is a far from ideal implementation of pseudoinstructions and is only there for demo purposes.\n    //MV\n    formats.push(new Format([\n        new BitRange(\"funct7\", 25, 7),\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rs1\", 15, 5),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let mvPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct3\", \"rs1\", \"funct7\"], [0b0110011, 0b000, 0b00000, 0b0000000], function (core) {\n        return null; //Captured by and\n    }, false, [\"ADD\"]));\n    //LI\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\n        new BitRange(\"rs1\", 15, 5),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let liPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\n        return null; //Captured by andi\n    }, false, [\"ADDI\"]));\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\n        return null; //Captured by andi\n    }, false, [\"ADDI\"]));\n    //JR pseudo\n    formats.push(new Format([\n        new BitRange(\"imm\", 20, 12, null, true),\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\n        new BitRange(\"funct3\", 12, 3),\n        new BitRange(\"rd\", 7, 5),\n        new BitRange(\"opcode\", 0, 7)\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\n    let jrPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JR\", jrPseudo, [\"opcode\", \"rd\", \"funct3\", \"imm\"], [0b1100111, 0b00000, 0b000, 0b000000000000], function (core) {\n        return null; //captured by jalr\n    }, false, [\"ADDI\"]));\n    //Scall, Syscall both as PseudoInstructions\n    instructions.push(new Instruction(\"SCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\n        return null; //captured by ecall\n    }, false, [\"ECALL\"]));\n    instructions.push(new Instruction(\"SYSCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\n        return null; //captured by ecall\n    }, false, [\"ECALL\"]));\n    let abiNames = ['zero', 'ra', 'sp', 'gp', 'tp', 't0', 't1', 't2', 's0', 's1', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 't3', 't4', 't5', 't6'];\n    let keywords = [];\n    keywords[Keyword.directive] = [\"\\\\.\"];\n    keywords[Keyword.comment] = [\"#\"];\n    keywords[Keyword.label] = [\"\\\\:\"];\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\n    keywords[Keyword.register] = [\"x\"];\n    let directives = [];\n    directives[\"text\"] = Directive.text;\n    directives[\"data\"] = Directive.data;\n    directives[\"string\"] = Directive.cString;\n    directives[\"byte\"] = Directive._8bit;\n    directives[\"half\"] = Directive._16bit;\n    directives[\"word\"] = Directive._32bit;\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, false, `    la a1, str\n    li a0, 4 #4 is the string print service number...\n    ecall\n    li a0, 10 #...and 10 is the program termination service number!\n    ecall\n.data\nstr:    .string \"Hello, World!\"`);\n}\nclass RISCVRegisterFile {\n    print() {\n        console.log(\"Registers\\n------\");\n        for (let i = 0; i < 32; i++) {\n            console.log(\"x\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\n        }\n        console.log(\"------\");\n    }\n    read(registerNumber) {\n        if (registerNumber === 0) {\n            return 0;\n        }\n        else {\n            return this.physicalFile[registerNumber];\n        }\n    }\n    write(registerNumber, value) {\n        this.physicalFile[registerNumber] = value;\n        this.modifiedRegisters[registerNumber] = true;\n    }\n    getRegisterCount() {\n        return 32;\n    }\n    getModifiedRegisters() {\n        let modReg = this.modifiedRegisters.slice();\n        for (let i = 0; i < this.getRegisterCount(); i++) {\n            this.modifiedRegisters[i] = false;\n        }\n        return modReg;\n    }\n    reset() {\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile[i] = 0;\n            this.modifiedRegisters[i] = false;\n        }\n        this.physicalFile[2] = this.memorySize;\n    }\n    constructor(memorySize, abiNames) {\n        this.physicalFile = [];\n        this.modifiedRegisters = [];\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile.push(0);\n            this.modifiedRegisters.push(false);\n        }\n        this.memorySize = memorySize;\n        this.physicalFile[2] = memorySize; //stack pointer\n        this.abiNames = abiNames;\n    }\n}\n;\nclass RISCVCore extends Core {\n    reset() {\n        this.pc = 0;\n        this.memory = [];\n        for (let i = 0; i < this.memorySize; i++) {\n            this.memory[i] = 0;\n        }\n        this.registerFile.reset();\n    }\n    fetch() {\n        if (this.pc < 0) {\n            return \"fetch.negativePC\";\n        }\n        let arr = this.memcpy(this.pc, 4);\n        if (arr === null) {\n            return \"fetch.invalidMemoryAccess\";\n        }\n        this.fetched = Utils.catBytes(arr);\n        return null;\n    }\n    constructor(memorySize, virtualOS, instructionSet) {\n        super();\n        this.virtualOSServiceRegister = 10;\n        this.virtualOSArgumentVectorStart = 11;\n        this.virtualOSArgumentVectorEnd = 17;\n        this.pc = 0 >>> 0;\n        this.memorySize = memorySize;\n        this.virtualOS = virtualOS;\n        this.instructionSet = instructionSet;\n        this.registerFile = new RISCVRegisterFile(memorySize, instructionSet.abiNames);\n        this.memory = new Array(memorySize);\n        for (let i = 0; i < memorySize; i++) {\n            this.memory[i] = 0;\n        }\n    }\n}\nCoreFactory.ISAs[\"RISCV\"] = {\n    generator: RISCV,\n    core: RISCVCore,\n    options: []\n};\n/// <reference path=\"../Assembler.ts\" />\n//The MIPS Instruction Set Architecture\nfunction MIPS(options) {\n    //Formats and Instructions\n    let formats = [];\n    let instructions = [];\n    let pseudoInstructions = [];\n    //R-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDU\", rType, [\"opcode\", \"funct\"], [0x0, 0x21], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct\"], [0x0, 0x22], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SUBU\", rType, [\"opcode\", \"funct\"], [0x0, 0x23], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct\"], [0x0, 0x24], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct\"], [0x0, 0x25], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"NOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x27], function (core) {\n        core.registerFile.write(core.arguments[0], ~(core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2])));\n        return null;\n    }));\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x26], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct\"], [0x0, 0x2A], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x04], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x06], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRAV\", rType, [\"opcode\", \"funct\"], [0x0, 0x07], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\n        return null;\n    }));\n    //R-Jump Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rt\", 16, 5, 0),\n        new BitRange(\"rd\", 11, 5, 0),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\n    let rjSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"JR\", rjSubtype, [\"opcode\", \"funct\"], [0x0, 0x08], function (core) {\n        core.pc = core.registerFile.read(core.arguments[0]);\n        return null;\n    }));\n    //R-Shift Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5).parameterized(2, Parameter.immediate),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*([0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let rsSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SLL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x00], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SRA\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\n        return null;\n    }));\n    //R-Constant Subtype\n    formats.push(new Format([\n        new BitRange(\"funct\", 0, 32)\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\n    let rcSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"SYSCALL\", rcSubtype, [\"funct\"], [0xC], function (core) {\n        return core.virtualOS.ecall(core);\n    }));\n    //I-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let iType = formats[formats.length - 1];\n    //I-type instructions\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\"], [0x8], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"ADDIU\", iType, [\"opcode\"], [0x9], function (core) {\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\"], [0x0A], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\n        return null;\n    }));\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\"], [0x0B], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\"], [0x0C], function (core) {\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\n        return null;\n    }));\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\"], [0x0D], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\"], [0x0E], function (core) {\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\n        return null;\n    }));\n    //I-Branch Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.offset).limited(18, 2, 17)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\n    let ibSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"BEQ\", ibSubtype, [\"opcode\"], [0x04], function (core) {\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        return null;\n    }));\n    instructions.push(new Instruction(\"BNE\", ibSubtype, [\"opcode\"], [0x05], function (core) {\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\n            core.pc += core.arguments[2];\n        }\n        return null;\n    }));\n    //I Load Upper Immediate Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.register)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let iluiSubtype = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LUI\", iluiSubtype, [\"opcode\"], [0x0F], function (core) {\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 16));\n        return null;\n    }));\n    //I Load/Store Subtype\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(2, Parameter.register),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*(\\$[A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg1(@arg2)\"));\n    let ilsSubtype = formats[formats.length - 1];\n    //TO-DO: Verify function(core) functionality\n    instructions.push(new Instruction(\"LB\", ilsSubtype, [\"opcode\"], [0x20], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LH\", ilsSubtype, [\"opcode\"], [0x21], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LW\", ilsSubtype, [\"opcode\"], [0x23], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        return null;\n    }));\n    instructions.push(new Instruction(\"LBU\", ilsSubtype, [\"opcode\"], [0x24], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], bytes[0]);\n        return null;\n    }));\n    instructions.push(new Instruction(\"LHU\", ilsSubtype, [\"opcode\"], [0x25], function (core) {\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\n        if (bytes === null) {\n            return \"Illegal memory access.\";\n        }\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\n        return null;\n    }));\n    instructions.push(new Instruction(\"SB\", ilsSubtype, [\"opcode\"], [0x28], function (core) {\n        let bytes = [];\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\n        let writeAddress = core.registerFile.read(core.arguments[2]) + core.arguments[1];\n        if (core.memset(writeAddress, bytes)) {\n            // console.log(\"A0 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$a0\")));\n            // console.log(\"T1 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$t1\")));\n            // console.log(\"Wrote to \", writeAddress.toString(16));\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SH\", ilsSubtype, [\"opcode\"], [0x29], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    instructions.push(new Instruction(\"SW\", ilsSubtype, [\"opcode\"], [0x2B], function (core) {\n        let bytes = [];\n        let value = core.registerFile.read(core.arguments[0]);\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        value = value >>> 8;\n        bytes.push(value & 255);\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\n            return null;\n        }\n        return \"Illegal memory access.\";\n    }));\n    //J-Type\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"imm\", 0, 26).parameterized(0, Parameter.special)\n    ], /^\\s*([A-Za-z]+)\\s*([A-Za-z0-9_]+)\\s*$/, \"@mnem @arg0\", function (text, type, bits, address, assembler) {\n        let result = {\n            errorMessage: null,\n            context: null,\n            value: null\n        };\n        //Label\n        let value = null;\n        let reference = assembler.linesByLabel[text];\n        if (reference !== undefined) {\n            result.context = reference[0];\n            if (reference[1] === null) {\n                return result;\n            }\n            value = reference[1];\n        }\n        if (value === null && assembler.keywordRegexes[Keyword.char]) {\n            let extraction = assembler.keywordRegexes[Keyword.char].exec(text);\n            if (extraction !== null && extraction[1] !== undefined) {\n                value = extraction[1].charCodeAt(0);\n                if (value > 255) {\n                    result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\n                    return result;\n                }\n            }\n        }\n        if (value === null && assembler.keywordRegexes[Keyword.numeric] !== undefined) {\n            let array = assembler.keywordRegexes[Keyword.numeric].exec(text);\n            if (array !== null) {\n                let radix = Assembler.radixes[array[2]] || 10;\n                let interpretable = array[1];\n                value = parseInt(interpretable, radix);\n            }\n        }\n        if (value === null || isNaN(value)) {\n            result.errorMessage = `args.valueUnrecognized(${text})`;\n            return result;\n        }\n        if ((value >>> 28) === (address >>> 28)) {\n            if ((value & 3) === 0) {\n                result.value = (value & 0x0ffffffc) >>> 2;\n            }\n            else {\n                result.errorMessage = `mips.wordUnlignedJump(${text})`;\n            }\n        }\n        else {\n            result.errorMessage = `args.outOfRange(${text})`;\n        }\n        return result;\n    }, function (value, address) {\n        return (value << 2) | (address & 0xf0000000);\n    }));\n    let jType = formats[formats.length - 1];\n    instructions.push(new Instruction(\"J\", jType, [\"opcode\"], [0x2], function (core) {\n        core.pc = core.arguments[0];\n        return null;\n    }));\n    instructions.push(new Instruction(\"JAL\", jType, [\"opcode\"], [0x3], function (core) {\n        core.registerFile.write(31, core.pc);\n        core.pc = core.arguments[0];\n        return null;\n    }));\n    //Pseudoinstructions\n    //MV\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\n        new BitRange(\"rt\", 16, 5, 0),\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\n        new BitRange(\"shamt\", 6, 5, 0),\n        new BitRange(\"funct\", 0, 6)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let mvPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\n        //Captured by ADD\n        return null;\n    }));\n    //LI/LA\n    formats.push(new Format([\n        new BitRange(\"opcode\", 26, 6),\n        new BitRange(\"rs\", 21, 5, 0),\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\n    let liPseudo = formats[formats.length - 1];\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\"], [0x8], function (core) {\n        //Captured by ADDI\n        return null;\n    }));\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\"], [0x8], function (core) {\n        //Captured by ADDI\n        return null;\n    }));\n    let keywords = [];\n    keywords[Keyword.directive] = [\"\\\\.\"];\n    keywords[Keyword.comment] = [\"#\"];\n    keywords[Keyword.label] = [\"\\\\:\"];\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\n    keywords[Keyword.register] = [\"x\"];\n    let directives = [];\n    directives[\"text\"] = Directive.text;\n    directives[\"data\"] = Directive.data;\n    directives[\"asciiz\"] = Directive.cString;\n    directives[\"byte\"] = Directive._8bit;\n    directives[\"half\"] = Directive._16bit;\n    directives[\"word\"] = Directive._32bit;\n    let abiNames = [\"$zero\", \"$at\", \"$v0\", \"$v1\", \"$a0\", \"$a1\", \"$a2\", \"$a3\", \"$t0\", \"$t1\", \"$t2\", \"$t3\", \"$t4\", \"$t5\", \"$t6\", \"$t7\", \"$s0\", \"$s1\", \"$s2\", \"$s3\", \"$s4\", \"$s5\", \"$s6\", \"$s7\", \"$t8\", \"$t9\", \"$k0\", \"$k1\", \"$gp\", \"$sp\", \"$fp\", \"$ra\"];\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, true, `    la $a0, str\n    li $v0, 4 #4 is the string print service number...\n    syscall\n    li $v0, 10 #...and 10 is the program termination service number!\n    syscall\n.data\nstr:    .asciiz \"Hello, World!\"`);\n}\nclass MIPSRegisterFile {\n    print() {\n        console.log(\"Registers\\n------\");\n        for (let i = 0; i < 32; i++) {\n            console.log(\"$\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\n        }\n        console.log(\"------\");\n    }\n    read(registerNumber) {\n        if (registerNumber === 0) {\n            return 0;\n        }\n        else {\n            return this.physicalFile[registerNumber];\n        }\n    }\n    write(registerNumber, value) {\n        this.physicalFile[registerNumber] = value;\n        this.modifiedRegisters[registerNumber] = true;\n    }\n    getRegisterCount() {\n        return 32;\n    }\n    getModifiedRegisters() {\n        let modReg = this.modifiedRegisters.slice();\n        for (let i = 0; i < this.getRegisterCount(); i++) {\n            this.modifiedRegisters[i] = false;\n        }\n        return modReg;\n    }\n    reset() {\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile[i] = 0;\n            this.modifiedRegisters[i] = false;\n        }\n        this.physicalFile[29] = this.memorySize;\n    }\n    constructor(memorySize, abiNames) {\n        this.physicalFile = [];\n        this.modifiedRegisters = [];\n        for (let i = 0; i < 32; i++) {\n            this.physicalFile.push(0);\n            this.modifiedRegisters.push(false);\n        }\n        this.memorySize = memorySize;\n        this.physicalFile[29] = memorySize; //stack pointer\n        this.abiNames = abiNames;\n    }\n}\n;\nclass MIPSCore extends Core {\n    reset() {\n        this.pc = 0;\n        this.memory = [];\n        for (let i = 0; i < this.memorySize; i++) {\n            this.memory[i] = 0;\n        }\n        this.registerFile.reset();\n    }\n    fetch() {\n        let arr = this.memcpy(this.pc, 4);\n        if (arr === null) {\n            return \"fetch.illegalMemoryAddress\";\n        }\n        this.pc += 4;\n        this.fetched = Utils.catBytes(arr);\n        return null;\n    }\n    constructor(memorySize, virtualOS, instructionSet) {\n        super();\n        this.virtualOSServiceRegister = 2;\n        this.virtualOSArgumentVectorStart = 4;\n        this.virtualOSArgumentVectorEnd = 7;\n        this.instructionSet = instructionSet;\n        this.pc = 0 >>> 0;\n        this.memorySize = memorySize;\n        this.virtualOS = virtualOS;\n        this.registerFile = new MIPSRegisterFile(memorySize, instructionSet.abiNames);\n        this.memory = new Array(memorySize);\n        for (let i = 0; i < memorySize; i++) {\n            this.memory[i] = 0;\n        }\n    }\n}\nCoreFactory.ISAs[\"MIPS\"] = {\n    generator: MIPS,\n    core: MIPSCore,\n    options: []\n};\n/// <reference path=\"CoreFactory.ts\"/>\n/// <reference path=\"ISAs/RISCV.ts\" />\n/// <reference path=\"ISAs/MIPS.ts\" />\n\nexport default {\n    VirtualOS: VirtualOS,\n    Endianness: Endianness,\n    Assembler: Assembler,\n    Line: Line,\n    CoreFactory: CoreFactory\n};","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setHelpVisible } from \"../actions\"\n\nclass Help extends Component {\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setHelpVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n    \n    render() {\n        return (\n            <div id=\"help\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2><Translate id=\"help.title\" /></h2>\n                    <div className=\"overlay_contents\">\n                        <Translate id=\"help.data\" options={{ renderInnerHtml: true }} />\n                        <button className=\"button\" onClick={this.handleClose}>Close</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.help\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setHelpVisible: (visible) => dispatch(setHelpVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(Help));","export default {\n    core: [\n        {\n            \"affiliation\": \"Student, American University in Cairo\",\n            \"pic\": \"donn.jpg\",\n            \"name\": \"Mohamed \\\"Donn\\\" Gaber\",\n            \"job\": \"Assembler / Simulator Developer\",\n            \"link\": \"https://donn.github.io/\",\n            \"desc\": \"Hi I play video games\"\n        },\n        {\n            \"affiliation\": \"Student, American University in Cairo\",\n            \"pic\": \"karimio.jpg\",\n            \"name\": \"Karim Abdel Hamid\",\n            \"job\": \"Primary Front-End/IDE Developer\",\n            \"link\": \"https://karimio.github.io/\",\n            \"desc\": \"I'm a game and web developer; love to write stories, play guitar, & paint.\"\n        }\n    ],\n    additional: [\n        {\n            \"affiliation\": \"Student, American University in Cairo\",\n            \"pic\": \"ali_khaled.jpg\",\n            \"name\": \"Ali Khaled\",\n            \"job\": \"MIPS co-developer\",\n            \"link\": \"https://github.com/loshya\",\n            \"desc\": \"りゅうがわがてきをクラウ！\"\n        },\n        {\n            \"affiliation\": \"Professor, American University in Cairo\",\n            \"pic\": \"shalan.jpg\",\n            \"name\": \"Dr. Mohamed Shalan\",\n            \"job\": \"Advisor\",\n            \"link\": \"https://github.com/shalan\",\n            \"desc\": \"Founder at Cloud V, Open Hardware Researcher and Advocate\"\n        }\n    ],\n    translators: []\n};","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setAboutVisible } from \"../actions\"\nimport devs from \"../developer_list.js\"\n\nclass About extends Component {\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setAboutVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n\n    printdev = (arr) => {\n        return arr.map((element, i) => {\n            return <a key={i} href={element.link}>\n                <img src={`images/about/${element.pic}`} />\n                <h4>{element.name}</h4>\n                <span>{element.job}</span>\n                <span>{element.affiliation}</span>\n                <p>{element.desc}</p>\n            </a>;\n        })\n    }\n    \n    render() {\n        return (\n            <div id=\"about\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2><Translate id=\"about.title\" /></h2>\n                    <div className=\"overlay_contents\">\n                        <div className=\"devlist\">\n                            <h3><Translate id=\"about.core_devs\" /></h3>\n                            {\n                                this.printdev(devs.core)\n                            }\n                        </div>\n                        <div className=\"devlist\">\n                            <h3><Translate id=\"about.additional_devs\" /></h3>\n                            {\n                                this.printdev(devs.additional)\n                            }\n                        </div>\n                        {devs.translators.length > 0  && <div className=\"translatorlist\">\n                            <h3><Translate id=\"about.translators\" /></h3>\n                            {\n                                devs.translators.map((element, i) => {\n                                    return <a key={i} href={element.link}>\n                                        <h4>{element.name}</h4>\n                                        <span>{element.lang}</span>\n                                    </a>;\n                                })\n                            }\n                        </div>}\n                    </div>\n                    <button className=\"button\" onClick={this.handleClose}>Close</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.about\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setAboutVisible: (visible) => dispatch(setAboutVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(About));","import React, { Component } from 'react'\n\nexport default class HotkeyInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            capturing: false,\n            combo: \"a_110\",\n            shift: true,\n            alt: true,\n            ctrl: true,\n            key_name: \"n\"\n        }\n    }\n\n    handleClick = (event) => {\n        this.setState({capturing: true});\n\t\twindow.addEventListener(\"keydown\", this.handleKey);\n    }\n\n    handleKey = (event) => {\n        if (this.state.capturing) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            let key = event.key.toLowerCase();\n            if (key === \"control\" || key === \"shift\" || key === \"alt\")\n                return false;\n\n            this.setState({\n                shift: event.shiftKey,\n                ctrl: event.ctrlKey,\n                alt: event.altKey,\n                key_name: key,\n                capturing: false\n            });\n\n            window.removeEventListener(\"keydown\", this.handleKey);\n            this.props.save();\n        }\n    }\n\n    testKey = (key_ctrl, key_alt, key_shift, key_name) => {\n        return (key_shift === this.state.shift &&\n            key_alt=== this.state.alt &&\n            key_ctrl === this.state.ctrl &&\n            key_name === this.state.key_name);\n    }\n\n    setKey = (key_ctrl, key_alt, key_shift, key_name, done = () => {}) => {\n        this.setState({\n            ctrl: key_ctrl,\n            alt: key_alt,\n            shift: key_shift,\n            key_name: key_name\n        }, done);\n    }\n\n    getKey = () => {\n        let key = \"_\" + this.state.key_name;\n        if (this.state.shift)\n            key = \"s\" + key;\n            \n        if (this.state.alt)\n            key = \"a\" + key;\n        \n        if (this.state.ctrl)\n            key = \"c\" + key;\n\n        return key;\n    }\n\n    setKeyStr = (str) => {\n        let upos = str.indexOf(\"_\");\n        let mods = str.substr(0, upos);\n\n\t\tlet shift = (mods.indexOf(\"s\")!==-1);\n\t\tlet alt = (mods.indexOf(\"a\")!==-1);\n\t\tlet ctrl = (mods.indexOf(\"c\")!==-1);\n        let key = str.substr(upos + 1);\n        \n        this.setKey(ctrl, alt, shift, key);\n    }\n    \n    render() {\n        let c = !this.state.capturing;\n        return (<div className={`key_bar${this.state.capturing ? \" capturing\" : \"\"}`} onClick={this.handleClick} tabIndex={0}>\n                    {!c && <span>Capturing</span>}\n                    {c && this.state.ctrl && <span>Ctrl</span>}\n                    {c && this.state.alt && <span>Alt</span>}\n                    {c && this.state.shift && <span>Shift</span>}\n                    {c && <span>{this.state.key_name}</span>}\n                </div>);\n    }\n}","import React, { Component } from 'react'\nimport HotkeyInput from '../modules/hotkey.js'\nimport Select from '../modules/select'\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setSettingsVisible } from \"../actions\"\n\nconst themes = [\n    \"theme_light\",\n    \"theme_dark\",\n    \"theme_dos\",\n    \"theme_apple2\"\n];\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            default_isa: \"RISC-V\",\n            theme: \"theme_light\",\n            use_cookies: false\n        };\n        \n\t\twindow.addEventListener(\"keydown\", this.handleKey);\n\n        for (let i = 1; i < themes.length; ++i)\n            document.getElementById(themes[i]).disabled = true;\n\n\t\tthis.comp_new = React.createRef();\n\t\tthis.comp_load = React.createRef();\n\t\tthis.comp_save = React.createRef();\n\t\tthis.comp_assemble = React.createRef();\n\t\tthis.comp_sim = React.createRef();\n        this.comp_step = React.createRef();\n    }\n\n    handleClose = (e) => {\n        e.preventDefault();\n        this.props.setSettingsVisible(false);\n    };\n\n    handleStopClose = (event) => {\n        event.stopPropagation();\n    };\n\n    handleKey = (event) => {\n        if (this.props.canhandleinput) {\n            let key_name = event.key.toLowerCase();\n            if (key_name === \"control\" || key_name === \"shift\" || key_name === \"alt\")\n                return false;\n\n            let key_ctrl = event.ctrlKey;\n            let key_alt = event.altKey;\n            let key_shift = event.shiftKey;\n            let cancel = false;\n\n            let hotkey = [\n                this.comp_new.current,\n                this.comp_load.current,\n                this.comp_save.current,\n                this.comp_assemble.current,\n                this.comp_step.current,\n                this.comp_sim.current\n            ];\n\n            let hotkeyfns = [\n                this.props.fn_new,\n                this.props.fn_load,\n                this.props.fn_save,\n                this.props.fn_ass,\n                this.props.fn_step,\n                this.props.fn_sim\n            ];\n\n            for (let i = 0; i < hotkey.length; ++i) {\n                if (hotkey[i].testKey(key_ctrl, key_alt, key_shift, key_name)) {\n                    hotkeyfns[i]();\n                    cancel = true;\n                }\n            }\n\n            if (cancel) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }\n    }\n\n    setDefaults = (done = () => {}) => {\n        this.comp_new.current.setKey(false, true, false, \"n\", () => {\n            this.comp_load.current.setKey(true, false, false, \"o\", () => {\n                this.comp_save.current.setKey(true, false, false, \"s\", () => {\n                    this.comp_assemble.current.setKey(false, true, false, \"f5\", () => {\n                        this.comp_sim.current.setKey(false, true, false, \"f7\", () => {\n                            this.comp_step.current.setKey(false, true, false, \"f6\", () => {\n                                this.setTheme(\"theme_light\", done);\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    setDefaultsSave = () => {\n        this.setDefaults(this.saveSettings);\n    }\n\n    /*function getCookie(cname) {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }*/\n    \n    saveSettings = () => {\n        var d = new Date();\n        d.setTime(d.getTime() + (30*24*60*60*1000));\n        var expires = d.toUTCString();\n        let exp = \"; expires=\" + expires + \"; path=/\";\n        \n        document.cookie = \"ojs_hotkey_new=\" + this.comp_new.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_load=\" + this.comp_load.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_save=\" + this.comp_save.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_ass=\" + this.comp_assemble.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_sim=\" + this.comp_sim.current.getKey() + exp;\n        document.cookie = \"ojs_hotkey_step=\" + this.comp_step.current.getKey() + exp;\n        document.cookie = \"ojs_theme=\" + this.state.theme + exp;\n    }\n\n    setTheme = (val, continuefn = () => {}) => {\n        if (!themes.includes(val)) {\n            val = themes[0];\n        }\n\n        themes.forEach(function(element) {\n            document.getElementById(element).disabled = (element !== val);\n        });\n\n        this.setState({theme: val}, continuefn);\n    }\n\n    componentDidMount() {\n        let has_cookies = false;\n\n        let ca = document.cookie.split(\"; \");\n\n        let i = 0;\n        for (; i < ca.length; i++) {\n            var c = ca[i];\n            \n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            \n            let eq = c.indexOf(\"=\");\n            let str = c.substr(0, eq);\n            let val = c.substr(eq+1);\n            if (str === \"ojs_hotkey_new\") {\n                this.comp_new.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_load\") {\n                this.comp_load.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_save\") {\n                this.comp_save.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_ass\") {\n                this.comp_assemble.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_sim\") {\n                this.comp_sim.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_hotkey_step\") {\n                this.comp_step.current.setKeyStr(val);\n                has_cookies = true;\n            }\n            else if (str === \"ojs_theme\") {\n                this.setTheme(val);\n                has_cookies = true;\n            }\n        }\n\n        if (has_cookies) {\n            this.setState({use_cookies: true});\n        }\n    }\n\n    handleISA = (event) => {\n        this.setState({default_isa: event.target.value});\n    };\n\n    handleTheme = (event) => {\n        this.setTheme(event.target.value, this.saveSettings);\n    };\n\n    acceptCookies = (e) => {\n        e.preventDefault();\n\n        this.setState({use_cookies: true});\n        this.setDefaultsSave();\n    }\n\n    deleteAllCookies = () => {\n        var cookies = document.cookie.split(\"; \");\n\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i];\n            var eqPos = cookie.indexOf(\"=\");\n            var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            let startojs = name.substr(0, 3);\n            if (startojs === \"ojs\")\n                document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n        \n        }\n\n        this.setState({use_cookies: false});\n        this.setDefaults();\n    }\n\n    render() {\n        return (\n            <div id=\"settings\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\n                    <button className=\"floating_close\" onClick={this.handleClose}></button>\n                    <h2>Settings</h2>\n                    {!this.state.use_cookies && \n                        <div className=\"cookie_screen\">\n                            <h3>Cookies</h3>\n                            <p>In order to set your own settings, you need to enable cookies. Cookies are the way websites store data for individual users. We store your cookies directly in the browser, and only store the options stored here.</p>\n                            <button onClick={this.acceptCookies} className=\"button\">Accept Cookies, Show Settings</button>\n                            <button onClick={this.handleClose} className=\"button subbutton\">Close Window</button>\n                        </div>\n                    }\n                    <div style={{display: (this.state.use_cookies ? \"block\" : \"none\"), position: \"relative\"}}>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <td colSpan={2}>General Settings</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {/*<tr>\n                                    <td colSpan={2}>\n                                        <Select onChange={this.handleISA} icon=\"/images/icons/input_type.svg\" placeholder=\"Default ISA\" value={this.state.default_isa}>\n                                            <option>RISC-V</option>\n                                            <option>MIPS</option>\n                                        </Select>\n                                    </td>\n                                </tr>*/}\n                                <tr>\n                                    <td colSpan={2}>\n                                        <Select onChange={this.handleTheme} icon=\"images/icons/input_type.svg\" placeholder=\"Theme\" value={this.state.theme}>\n                                            <option value=\"theme_light\">Light</option>\n                                            <option value=\"theme_dark\">Dark</option>\n                                            <option value=\"theme_dos\">DOS</option>\n                                            <option value=\"theme_apple2\">Apple ][</option>\n                                        </Select>\n                                    </td>\n                                </tr>\n                            </tbody>\n                            <thead>\n                                <tr>\n                                    <td colSpan={2}>Hotkeys</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>New Tab</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_new} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Save Tab</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_save} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Load</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_load} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Assemble</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_assemble} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Step-By-Step</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_step} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Simulate</td>\n                                    <td>\n                                        <HotkeyInput ref={this.comp_sim} save={this.saveSettings} />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <button className=\"button\" onClick={this.handleClose}>Accept Changes</button>\n                        <button className=\"button subbutton\" onClick={this.setDefaultsSave}>Restore Defaults</button>\n                        <button className=\"button subbutton\" onClick={this.deleteAllCookies}>Delete Cookies</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst stateToProps = state => {\n    return {\n        visible: state.panel_visibility.settings\n    };\n};\n\nconst dispatchToProps = (dispatch, ownProps) => ({\n    setSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n    connect(stateToProps,\n            dispatchToProps\n    )(Settings));","import React, { Component } from 'react'\n\nexport default class Input extends Component {\n    render() {\n        return (\n            <div className=\"input_group\">\n                <input onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(${this.props.icon})`}} type={this.props.type} placeholder={this.props.placeholder} />\n                <label className=\"group_label\">{this.props.placeholder}</label>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport Input from '../modules/input'\nimport Select from '../modules/select'\nimport OakJS from '../backend.js';\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { setProjectSettings } from \"../actions\"\n\nclass PanelSettings extends Component {\n    static display_name = \"settings\";\n\n    handleFileName = (event) => {\n        this.props.setProjectSettings(event.target.value, this.props.project_settings.memory_size, this.props.project_settings.isa);\n    }\n\n    handleISA = (event) => {\n        this.props.setProjectSettings(this.props.project_settings.file_name, this.props.project_settings.memory_size, event.target.value);\n    }\n\n    handleMemorySize = (event) => {\n        const re = /^[0-9\\b]+$/;\n    \n        if (event.target.value === '' || re.test(event.target.value)) {\n            this.props.setProjectSettings(this.props.project_settings.file_name, event.target.value, this.props.project_settings.isa);\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.submitChanges();\n    };\n\n    render() {\n        let isas = OakJS.CoreFactory.getCoreList();\n        \n        return (\n            <div id=\"panel_settings\" className=\"panel panel_settings\">\n                <form onSubmit={this.handleSubmit}>\n                    <Input onChange={this.handleFileName} value={this.props.project_settings.file_name} icon=\"images/icons/input_name.svg\" placeholder=\"File Name\" id=\"filename\" />\n                    <Select onChange={this.handleISA} value={this.props.project_settings.isa} icon=\"images/icons/input_code.svg\" placeholder=\"Instruction Set\" >\n                        {isas.map((isa, i) => {\n                            return <option key={isa} value={isa}>{isa}</option>\n                        })}\n                    </Select>\n                    <Input onChange={this.handleMemorySize} value={this.props.project_settings.memory_size} icon=\"images/icons/input_memory.svg\" placeholder=\"Memory Size (Bytes)\" type=\"number\" />\n\n                    <input className=\"button\" value=\"Accept Changes\" type=\"submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nconst appStateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab,\n\t\tproject_settings: state.project_settings\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\n})\n\nexport default withLocalize(\n\tconnect(appStateToProps,\n\t\t\tappDispatchToProps\n\t)(PanelSettings));","import React, { Component } from 'react'\nimport Input from '../modules/input'\nimport Select from '../modules/select'\nimport {padNumber, parseToFloat, encodeFloat} from './numberttransform'\n\nexport default class PanelConversion extends Component {\n    static display_name = \"conversion\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: 0,\n            input_type: 0,\n            output_type: 0,\n            output: \"\",\n            has_value: false\n        };\n    }\n\n    calculateOutput = (val, in_type, out_type) => {\n        let input = val;\n        switch(in_type) {\n            case 0: // Hex\n                input = parseInt(input, 16);\n                break;\n            default:\n            case 1: // uint\n            case 2: // int\n                input = parseInt(input, 10);\n                break;\n            case 3: // bin\n                input = parseInt(input, 2);\n                break;\n            case 4: // float\n                input = encodeFloat(input);\n                break;\n        }\n    \n        if (input.toString() === \"NaN\")\n            return \"\";\n    \n        let output;\n        switch(out_type) {\n            case 0: // Hex\n                output = \"0x\"+padNumber((input >>> 0).toString(16), 8);\n                break;\n            case 1: // uint\n                output = (input >>> 0).toString(10);\n                break;\n            default:\n            case 2: // int\n                output = input.toString(10);\n                if (output > 2147483648) { output = output - 4294967296 }\n                break;\n            case 3: // bin\n                output = \"0b\"+padNumber((input >>> 0).toString(2), 32);\n                break;\n            case 4: // float\n                output = parseToFloat(input);\n                break;\n        }\n        \n        return output;\n    };\n\n    onChangeInput = (event) => {\n        let val = event.target.value;\n        let in_type = this.state.input_type;\n        let out_type = this.state.output_type;\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, has_value: (val !== \"\"), output: out});\n    };\n\n    onChangeInputType = (event) => {\n        let val = this.state.input;\n        let in_type = parseInt(event.target.value, 10);\n        let out_type = this.state.output_type;\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, input_type: in_type, has_value: (val !== \"\"), output: out});\n    };\n\n    onChangeOutputType = (event) => {\n        let val = this.state.input;\n        let in_type = this.state.input_type;\n        let out_type = parseInt(event.target.value, 10);\n        let out = this.calculateOutput(val, in_type, out_type);\n        this.setState({input: val, output_type: out_type, has_value: (val !== \"\"), output: out});\n    };\n\n    render() {\n        return (\n            <div id=\"panel_conversion\" className=\"panel panel_conversion\">\n                <Input onChange={this.onChangeInput} icon=\"images/icons/input_in.svg\" placeholder=\"Input\" type=\"text\" />\n                <Select onChange={this.onChangeInputType} icon=\"images/icons/input_type.svg\" placeholder=\"Input Type\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Integer</option>\n                    <option value=\"3\">Binary</option>\n                    {/*<option value=\"4\">Float</option>*/}\n                </Select>\n                <hr />\n                <Select onChange={this.onChangeOutputType} icon=\"images/icons/input_type.svg\" placeholder=\"Output Type\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Unsigned Integer</option>\n                    <option value=\"2\">Signed Integer</option>\n                    <option value=\"3\">Binary</option>\n                    {/*<option value=\"4\">Float</option>*/}\n                </Select>\n                <span className=\"conversion_output\">\n                    {this.state.output !==\"\" ? this.state.output : \"<Output>\"}\n                </span>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber, parseToFloat} from './numberttransform'\nimport { connect } from 'react-redux';\n\nconst REGISTER_UNASSIGNED = 0;\nconst REGISTER_ASSIGNED = 1;\nconst REGISTER_NEWASSIGNED = 2;\n\nclass PanelRegisters extends Component {\n    static display_name = \"registers\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            case 0: // Hex\n                return \"0x\"+padNumber((input >>> 0).toString(16), 8);\n            case 1: // uint\n                return (input >>> 0).toString(10);\n            default:\n            case 2: // int\n                let output = input.toString(10);\n                if (output > 2147483648) { output = output - 4294967296 }\n                return output;\n            case 3: // bin\n                return \"0b\"+padNumber((input >>> 0).toString(2), 32);\n            case 4: // float\n                return output = parseToFloat(input);\n        }\n    };\n\n    getChangedRegisterClass = (val) => {\n        switch(val) {\n            default:\n            case REGISTER_UNASSIGNED:\n                return \"reg_normal\";\n            case REGISTER_ASSIGNED:\n                return \"reg_assigned\";\n            case REGISTER_NEWASSIGNED:\n                return \"reg_new\";\n        }\n    }\n\n    render() {\n        let tab = this.props.tabs[this.props.selectedtab];\n        if (!(tab && tab.core))\n            return <div></div>;\n\n        let core = tab.core;\n        let registers = core.registerFile.physicalFile;\n        let register_changed = tab.register_changed;\n        let register_names = core.registerFile.abiNames;\n\n        return (\n            <div id=\"panel_registers\" className=\"panel panel_registers\">\n                <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Unsigned Integer</option>\n                    <option value=\"2\">Signed Integer</option>\n                    <option value=\"3\">Binary</option>\n                    <option value=\"4\">Float</option>\n                </Select>\n                <table cellSpacing=\"0\" cellPadding=\"0\">\n                    <thead>\n                        <tr><th>Reg</th><th>Value</th></tr>\n                    </thead>\n                    <tbody>\n                        {\n                            registers.map((register, i) => {\n                                let register_dpy = this.translateRegister(register);\n                                return (<tr key={i} className={this.getChangedRegisterClass(register_changed[i])}>\n                                    <td>\n                                        {register_names[i]}\n                                    </td>\n                                    <td data-info={register}>\n                                        {register_dpy}\n                                    </td>\n                                </tr>);\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelRegisters);","import React, { Component } from 'react'\nimport Select from '../modules/select'\nimport {padNumber} from './numberttransform'\n\nimport { connect } from 'react-redux';\n\nclass PanelMachineCode extends Component {\n    static display_name = \"machine code\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            register_type: 0,\n        }\n    }\n\n    handleType = (event) => {\n        this.setState({register_type: parseInt(event.target.value, 10)});\n    };\n\n    translateRegister = (input) => {\n        switch(this.state.register_type) {\n            default:\n            case 0: // Hex\n                return padNumber((input >>> 0).toString(16), 2);\n            case 1: // uint\n                return padNumber((input >>> 0).toString(10), 3);\n            case 2: // octal\n                return padNumber((input >>> 0).toString(8), 3);\n            case 3: // bin\n                return padNumber((input >>> 0).toString(2), 8);\n        }\n    };\n\n    render() {\n        let tabs = this.props.tabs;\n        if (tabs.length === 0)\n            return <div></div>;\n            \n        let machinecode = tabs[this.props.selectedtab].machine_code;\n        let empty = machinecode.length === 0;\n        return (\n            <div id=\"panel_machine_code\" className=\"panel panel_machine_code\">\n                {empty && <span className=\"panel_empty\">Machine Code Empty</span>}\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\n                    <option value=\"0\">Hex</option>\n                    <option value=\"1\">Decimal</option>\n                    <option value=\"2\">Octal</option>\n                    <option value=\"3\">Binary</option>\n                </Select>}\n                \n                {!empty && machinecode.map((byte, i) => {\n                    let val = this.translateRegister(byte);\n                    return <span key={i}>{val} </span>;\n                })}\n            </div>\n        )\n    }\n}\n\nconst stateToProps = state => {\n\treturn {\n        tabs: state.tabs,\n        selectedtab: state.selectedtab\n\t};\n};\n\nexport default connect(stateToProps)(PanelMachineCode);","import React, { Component } from 'react';\nimport TextEditor from \"./sections/texteditor.js\";\nimport Navigation from \"./sections/navigation.js\";\nimport PanelContainer from \"./sections/panelcontainer.js\";\nimport PanelMemory from \"./sections/panelmemory.js\";\nimport PanelConsole from \"./sections/panelconsole.js\";\nimport PanelLog from \"./sections/panellog.js\";\nimport Help from './sections/help';\nimport About from './sections/about';\nimport Settings from './sections/settings';\nimport PanelSettings from './sections/panelsettings';\nimport PanelConversion from './sections/panelconversion';\nimport PanelRegisters from './sections/panelregisters';\n//import CoreContext from './coreContext';\nimport PanelMachineCode from './sections/panelmachinecode';\nimport OakJS from './backend.js';\n\nimport { connect } from 'react-redux';\nimport { Translate, withLocalize } from \"react-localize-redux\";\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport enTranslations from \"./translations/en.json\";\n\nimport { selectTab, addTab, updateTab, setProjectSettings, setSettingsVisible, setHelpVisible, setAboutVisible } from \"./actions\"\n\nconst SimulatingStatus = {\n\tStopped:\t0,\n\tStep:\t\t1,\n\tPlay:\t\t2\n};\n\nconst REGISTER_UNASSIGNED = 0;\nconst REGISTER_ASSIGNED = 1;\nconst REGISTER_NEWASSIGNED = 2;\n\nconst CONSOLE_INPUT_NONE= 0;\nconst CONSOLE_INPUT_NUM = 1;\nconst CONSOLE_INPUT_STR = 2;\n\nconst decode_error_msg = <span><b>Error: </b>Failed to decode instruction. In practice, the most likely cause is forgetting to terminate the program using the appropriate system call (see help section).</span>;\n\nconst MessageType = {\n\tLog: 0,\n\tInput: 1,\n\tOutput: 2,\n\tSuccess: 3,\n\tWarning: 4,\n\tError: 5,\n};\n\nclass App extends Component {\n\tvirtual_os;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.props.initialize({\n\t\t\tlanguages: [\n\t\t\t  { name: \"English\", code: \"en\" }\n\t\t\t],\n\t\t\toptions: { renderToStaticMarkup }\n\t\t});\n\t\t\n\t\tthis.state = {\n\t\t\tpanel_x: 256,\n\t\t\tpanel_y: 256\n\t\t};\n\t\t\n\t\tthis.component_input = React.createRef();\n\n\t\twindow.addEventListener(\"keyup\", this.handleKeyPress);\n\t\t\n\t\tthis.props.addTranslationForLanguage(enTranslations, 'en');\n\n\t\tthis.virtual_os = new OakJS.VirtualOS(); // The virtual OS handles ecalls. It takes a bunch of callbacks: output Int, output String, etcetera...\n\t\tthis.virtual_os.inputInt = () => {\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\t\t\tif (tab) {\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_NUM;\n\t\t\t}\n\t\t};\n\n\t\tthis.virtual_os.inputString = () => {\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\t\t\tif (tab) {\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_STR;\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis.virtual_os.outputInt = (number) => {\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + number);\n\t\t};\n\n\t\tthis.virtual_os.outputString = (string) => {\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + string);\n\t\t};\n\n\t\tthis.virtual_os.handleHalt = () => {\n\t\t\tlet current_tab = this.props.selectedtab;\n\t\t\tlet tab = this.props.tabs[current_tab];\n\n\t\t\tif (!tab)\n\t\t\t\treturn;\n\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\n\t\t\tthis.addConsoleMessage(MessageType.Success, \" == SIMULATION COMPLETED == \");\n\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t};\n\t\t\n\t\tthis.addTabDefault();\n\t}\n\n\thandleKeyPress = (event) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab && tab.console_input_type !== CONSOLE_INPUT_NONE) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet input = tab.console_input;\n\t\t\tlet cursor = tab.cursor_pos;\n\n\t\t\tif (event.key === \"Enter\") {\n\t\t\t\tthis.continueAfterConsole(input);\n\t\t\t\ttab.console_input = \"\";\n\t\t\t}\n\t\t\telse if (event.which === 8) {\n\t\t\t\tif (cursor > 0) {\n\t\t\t\t\tlet val = input.slice(0, cursor - 1) + input.slice(cursor);\n\t\t\t\t\t\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\n\t\t\t\t\ttab.console_input = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.keyCode === 46) {\n\t\t\t\tif (cursor < input.length) {\n\t\t\t\t\tlet val = input.slice(0, cursor) + input.slice(cursor + 1);\n\t\t\t\t\t\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\n\t\t\t\t\ttab.console_input = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.keyCode === 37) {\n\t\t\t\tcursor = (cursor <= 0) ? 0 : cursor - 1;\n\t\t\t\ttab.cursor_pos = cursor;\n\t\t\t}\n\t\t\telse if (event.keyCode === 39) {\n\t\t\t\tlet l = tab.console_input.length;\n\t\t\t\tcursor = (cursor >= l) ? l : cursor + 1;\n\t\t\t\ttab.cursor_pos = l;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet out = event.key;\n\t\t\t\t\n\t\t\t\tconst keycode = event.keyCode;\n\t\t\t\tconst isNum = tab.console_input_type === CONSOLE_INPUT_NUM;\n\t\t\t\t\n\t\t\t\tvar valid = \n\t\t\t\t(keycode > 47 && keycode < 58)   || // number keys\n\t\t\t\t(!isNum && (keycode === 32 || keycode === 13   || // spacebar & return key(s) (if you want to allow carriage returns)\n\t\t\t\t(keycode > 64 && keycode < 91)   || // letter keys\n\t\t\t\t(keycode > 95 && keycode < 112)  || // numpad keys\n\t\t\t\t(keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n\t\t\t\t(keycode > 218 && keycode < 223)));\n\n\t\t\t\tif (valid) {\n\t\t\t\t\tout = input.slice(0, cursor) + out + input.slice(cursor);\n\t\t\t\t\ttab.console_input = out;\n\t\t\t\t\ttab.cursor_pos =  cursor + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.props.updateTab(current_tab, tab);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\taddConsoleMessage = (msg_type, data) => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\t\t\n\t\tlet className;\n\t\tif (msg_type === MessageType.Error)\n\t\t\tclassName = \"console_error\";\n\t\telse if (msg_type === MessageType.Warning)\n\t\t\tclassName = \"console_warning\";\n\t\telse if (msg_type === MessageType.Success)\n\t\t\tclassName = \"console_success\";\n\t\telse if (msg_type === MessageType.Output)\n\t\t\tclassName = \"console_output\";\n\t\telse if (msg_type === MessageType.Input)\n\t\t\tclassName = \"console_input\";\n\t\telse\n\t\t\tclassName = \"console_log\";\n\t\t\n\t\ttab.console.push(<div className={className}>{data}</div>);\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\tcontinueAfterConsole = (input) => {\n\t\tlet selected = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[selected];\n\n\t\tlet core = tab.core;\n\n\t\tif (tab.console_input_type === CONSOLE_INPUT_NUM) {\n\t\t\tinput = parseInt(input, 10);\n\t\t\tthis.virtual_os.continueInputInt(core, input);\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\n\t\t} else if (tab.console_input_type === CONSOLE_INPUT_STR) {\n\t\t\tthis.virtual_os.continueInputString(core, input);\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\n\t\t}\n\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\n\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(selected, tab);\n\t}\n\n\tcheckUpdatedTabs = () => {\n\t\tlet tab = this.props.tabs[this.props.selectedtab];\n\n\t\tvar mod_reg = tab.core.registerFile.getModifiedRegisters();\n\t\t\n\t\tfor(let i = 0; i < tab.register_changed.length; ++i) {\n\t\t\tif (mod_reg[i])\n\t\t\t\ttab.register_changed[i] = REGISTER_NEWASSIGNED;\n\t\t\telse if (tab.register_changed[i] ===  REGISTER_NEWASSIGNED)\n\t\t\t\ttab.register_changed[i] = REGISTER_ASSIGNED;\n\t\t}\n\t}\n\n\taddTabFull = (name, code, machine_code, mem_size, isa, get_example_code) => {\n\t\tlet selected = this.props.tabs.length;\n\t\t\n\t\tlet core = OakJS.CoreFactory.getCore(isa, mem_size, this.virtual_os, []);\n\n\t\tlet new_tab = {\n\t\t\tname: name,\n\t\t\tcontent: get_example_code ? core.instructionSet.exampleCode : code,\n\t\t\tlog: [],\n\t\t\tconsole: [],\n\t\t\tmachine_code: machine_code,\n\t\t\tcore: core,\n\t\t\tregister_changed: [],\n\t\t\trunningStatus: SimulatingStatus.Stopped, \n\t\t\tinstruction_set: isa,\n\t\t\tconsole_input: \"\",\n\t\t\tconsole_input_type: CONSOLE_INPUT_NONE,\n\t\t\tcursor_pos: 0\n\t\t};\n\n\t\tnew_tab.register_changed = Array.from({ length: core.registerFile.physicalFile.length }, () => REGISTER_UNASSIGNED);\n\t\t\n\t\t// TODO: Send to Project Settings\n\t\tthis.props.setProjectSettings(name, mem_size, isa);\n\t\t\n\t\tthis.props.addTab(new_tab);\n\t\tthis.props.selectTab(selected);\n\t}\n\n\taddTab = (name, code, machine_code) => {\n\t\tthis.addTabFull(name, code, machine_code, 4096, this.getDefaultISA(), false);\n\t}\n\n\taddTabDefault = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, this.getDefaultISA(), true);\n\t}\n\n\taddTabDefaultRISCV = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"RISCV\", true);\n\t}\n\n\taddTabDefaultMIPS = () => {\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"MIPS\", true);\n\t}\n\n\tgetDefaultISA = () => {\n\t\treturn OakJS.CoreFactory.getCoreList()[0];\n\t}\n\n\thandleUpload = (event) => {\n\t\tlet files = this.component_input.current.files;\n\t\tif (files.length <= 0) return;\n\n\t\tlet file = files[0];\n\t\tif (this.is_upload_bin) {\n\t\t\tlet name = file.name;\n\t\t\tlet blob = file.slice(0, file.size);\n\t\t\tlet fr = new FileReader();\n\t\t\tlet me = this;\n\t\t\tfr.addEventListener(\"load\", function ()\n\t\t\t{\n\t\t\t\tvar bytes = new Uint8Array(this.result);\n\t\t\t\tme.addTab(name, \"\", Array.from(bytes));\n\t\t\t});\n\t\t\tfr.readAsArrayBuffer(blob);\n\t\t}\n\t\telse {\n\t\t\tlet name = file.name;\n\t\t\tlet blob = file.slice(0, file.size);\n\t\t\tlet fr = new FileReader();\n\t\t\tlet me = this;\n\t\t\tfr.addEventListener(\"load\", function ()\n\t\t\t{\n\t\t\t\tlet res = this.result;\n\t\t\t\t\n\t\t\t\tme.addTab(name, res, []);\n\t\t\t});\n\t\t\tfr.readAsText(blob);\n\t\t}\n\t}\n\n\thandleLoadAsm = () => {\n\t\tthis.is_upload_bin = false;\n\t\tthis.component_input.current.click();\n\t}\n\n\thandleLoadBin = () => {\n\t\tthis.is_upload_bin = true;\n\t\tthis.component_input.current.click();\n\t}\n\n\thandleDownloadAsm = () => {\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.content;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\t\t\n\t\tvar el = document.createElement(\"a\");\n\t\tvar blob = new Blob([data],\n\t\t{\n\t\t\ttype: \"text/plain\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar name = tab.name + \".s\";\n\t\tel.setAttribute(\"href\", blobLink);\n\t\tel.setAttribute(\"download\", name);\n\t\tel.style.display = \"none\";\n\t\tdocument.body.appendChild(el);\n\t\tel.click();\n\t\tdocument.body.removeChild(el);\n\t}\n\t\n\tdownloadBin = () => {\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.machine_code;\n\t\tvar byteArray = new Uint8Array(data);\n\t\tvar blob = new Blob([byteArray],\n\t\t{\n\t\t\ttype: \"application/octet-stream\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar element = document.createElement(\"a\");\n\t\tvar name = tab.name + \".bin\";\n\t\telement.setAttribute(\"href\", blobLink);\n\t\telement.setAttribute(\"download\", name);\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element);\n\t}\n\t\n\tdownloadRam = () =>{\n\t\tconst current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tvar data = tab.core.memory;\n\t\tvar byteArray = new Uint8Array(data);\n\t\tvar blob = new Blob([byteArray],\n\t\t{\n\t\t\ttype: \"application/octet-stream\"\n\t\t});\n\t\tvar blobLink = URL.createObjectURL(blob);\n\t\tvar element = document.createElement(\"a\");\n\t\tvar name = tab.name + \".ram\";\n\t\telement.setAttribute(\"href\", blobLink);\n\t\telement.setAttribute(\"download\", name);\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element)\n\t}\n\n\tresetUI = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\t\ttab.log = [];\n\t\ttab.console = [];\n\t\ttab.register_changed = Array.from({ length: tab.register_changed.length }, () => REGISTER_UNASSIGNED);\n\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\n\t\ttab.console_input = \"\";\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\n\t\ttab.cursor_pos = 0;\n\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\treset = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tabs = this.props.tabs;\n\t\tlet tab = tabs[current_tab];\n\n\t\ttab.core.reset();\n\t\tthis.resetUI();\n\t}\n\n\tuiSimulate = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\n\t\t\treturn;\n\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\n\t\t\tthis.uiAssemble();\n\n\t\tlet core =  tab.core;\n\n\t\ttab.runningStatus = SimulatingStatus.Play;\n\n\t\twhile (true) {\n\t\t\tlet fetch = core.fetch();\n\t\t\tif (fetch !== null) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\n\t\t\t\n\t\t\tif (decode === null) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, decode_error_msg);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttab.log.push(decode);\n\t\t\t}\n\t\t\n\t\t\tlet execute = core.execute();\n\t\t\tif (execute !== null) {\n\t\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\n\t\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\n\t\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\tuiStepByStep = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\n\t\t\treturn;\n\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\n\t\t\tthis.uiAssemble();\n\n\t\tlet core = tab.core;\n\n\t\ttab.runningStatus = SimulatingStatus.Step;\n\n\t\tlet fetch = core.fetch();\n\t\tif (fetch !== null) {\n\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t\treturn;\n\t\t}\n\t\n\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\n\t\t\n\t\tif (decode === null) {\n\t\t\tthis.addConsoleMessage(MessageType.Error, decode_error_msg);\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\tthis.props.updateTab(current_tab, tab);\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\ttab.log.push(decode);\n\t\t}\n\t\n\t\tlet execute = core.execute();\n\t\tif (execute !== null) {\n\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\n\t\t\t}\n\t\t}\n\n\t\tthis.checkUpdatedTabs();\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\t\n\tuiAssemble = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\t\tvar val = tab.content;\n\t\tif (val === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar core = tab.core;\n\t\tthis.reset();\n\t\tlet assembler = new OakJS.Assembler(core.instructionSet, OakJS.Endianness.little);\n\t\t\n\t\tlet lines = OakJS.Line.arrayFromFile(val);\n\t\t\n\t\tlet passZero = assembler.assemble(lines, 0); // Assembler Pass 0. Returns Line array with errored lines, which are in line.invalidReason\n\t\tif (passZero.length !== 0) {\n\t\t\tfor (let i in passZero) {\n\t\t\t\tlet line = passZero[i];\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Assembly error on line {line.number}:</b> {line.invalidReason}.</span>);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tlet pass = null;\n\t\tlet passCounter = 1;\n\t\tdo { // Subsequent assembler passes. Typically one pass is needed, but when there's a lot of variance in ISA word sizes, another pass might be needed.\n\t\t\tpass = assembler.assemble(lines, passCounter);\n\t\t\tif (pass.length !== 0) {\n\t\t\t\tfor (let i in pass) {\n\t\t\t\t\tlet line = pass[i];\n\t\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Assembly error on line {line.number}:</b> {line.invalidReason}.</span>);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpassCounter += 1;\n\t\t} while (pass === null);\n\n\t\tlet machineCode = lines.map(line=> line.machineCode).reduce((a, b)=> a.concat(b), []); // Get machine code from lines\n\t\tcore.memset(0, machineCode); // memset\n\n\t\tthis.checkUpdatedTabs();\n\n\t\tlet error = false; //output.errorMessage===null;\n\t\tif (!error) {\n\t\t\ttab.machine_code = machineCode;\n\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete:</b> Assembly succeeded.</span>);\n\t\t}\n\t\telse {\n\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error:</b> Assembler failed.</span>);\n\t\t}\n\n\t\tthis.props.updateTab(current_tab, tab);\n\t}\n\n\thandleSettingsChange = () => {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tif (!tab)\n\t\t\treturn;\n\n\t\tlet file_name = this.props.project_settings.file_name;\n\t\tlet isa_type = this.props.project_settings.isa;\n\t\tlet memory_size = this.props.project_settings.memory_size;\n\n\t\ttab.name = file_name;\n\n\t\tlet diff_isa = isa_type !== tab.instruction_set;\n\t\tlet diff_mem = memory_size !== tab.core.memorySize;\n\n\t\tlet new_isa_found = false;\n\n\t\tif (diff_isa || diff_mem) {\n\t\t\tlet instruction_sets = OakJS.CoreFactory.ISAs;\n\t\t\tif (instruction_sets[isa_type]) {\n\t\t\t\tnew_isa_found = true;\n\t\t\t\ttab.core = OakJS.CoreFactory.getCore(isa_type, memory_size, this.virtual_os, []);\n\t\t\t\ttab.instruction_set = isa_type;\n\t\t\t\tthis.resetUI();\n\t\t\t}\n\n\t\t\tif (!new_isa_found) {\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error: </b>Could not find ISA {isa_type}.</span>);\n\t\t\t}\n\t\t}\n\n\t\tthis.props.updateTab(current_tab, tab);\n\n\t\tif (new_isa_found) {\n\t\t\tif (diff_isa)\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed ISA to {isa_type}.</span>);\n\n\t\t\tif (diff_mem)\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed memory size to {memory_size}.</span>);\n\t\t}\n\t}\n\n\thandleStartDragX = (event) => {\n\t\twindow.addEventListener(\"mousemove\", this.handleDragX);\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragX);\n\t}\n\n\thandleX = (event) => {\n\t\tlet x = event.pageX;\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\t\tx = w - x;\n\n\t\tif (x < 200) {\n\t\t\tx = 200;\n\t\t}\n\t\telse if (x > w - 200) {\n\t\t\tx = w - 200;\n\t\t}\n\n\t\tthis.setState({panel_x: x});\n\t}\n\n\thandleX = (event) => {\n\t\tlet x = event.pageX;\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\t\tx = w - x;\n\n\t\tif (x < 150) {\n\t\t\tx = 150;\n\t\t}\n\t\telse if (x > w - 200) {\n\t\t\tx = w - 200;\n\t\t}\n\n\t\tthis.setState({panel_x: x});\n\t}\n\n\thandleY = (event) => {\n\t\tlet y = event.pageY + 20;\n\t\tlet h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\t\ty =  h - y;\n\t\t\n\t\tif (y < 50) {\n\t\t\ty = 50;\n\t\t}\n\t\telse if (y > h - 50) {\n\t\t\ty = h - 50;\n\t\t}\n\n\t\tthis.setState({panel_y: y});\n\t}\n\n\thandleDragX = (event) => {\n\t\tthis.handleX(event);\n\t}\n\n\thandleStopDragX = (event) => {\n\t\tthis.handleX(event);\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragX);\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragX);\n\t}\n\n\thandleStartDragY = (event) => {\n\t\twindow.addEventListener(\"mousemove\", this.handleDragY);\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragY);\n\t}\n\n\thandleDragY = (event) => {\n\t\tthis.handleY(event);\n\t}\n\n\thandleStopDragY = (event) => {\n\t\tthis.handleY(event);\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragY);\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragY);\n\t}\n\n\tshowSettings = () => {\n\t\tthis.props.setSettingsVisible(true);\n\t}\n\n\tshowHelp = () => {\n\t\tthis.props.setHelpVisible(true);\n\t}\n\n\tshowAbout =  () => {\n\t\talert(1);\n\t\tthis.props.setAboutVisible(true);\n\t}\n\n\trender() {\n\t\tlet current_tab = this.props.selectedtab;\n\t\tlet tab = this.props.tabs[current_tab];\n\n\t\tlet has_tabs = this.props.tabs.length > 0;\n\t\tlet show_input = false;\n\t\t\n\t\tif (tab)\n\t\t\tshow_input = tab.console_input_type !== CONSOLE_INPUT_NONE;\n\t\t\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<About />\n\t\t\t\t<Help />\n\t\t\t\t<Settings\n\t\t\t\t\tcanhandleinput={!show_input}\n\t\t\t\t\tfn_new={this.addTabDefault}\n\t\t\t\t\tfn_load={this.handleLoadAsm}\n\t\t\t\t\tfn_save={this.handleDownloadAsm}\n\t\t\t\t\tfn_ass={this.uiAssemble}\n\t\t\t\t\tfn_sim={this.uiSimulate}\n\t\t\t\t\tfn_step={this.uiStepByStep} />\n\t\t\t\t<Navigation assemble={this.uiAssemble} simulate={this.uiSimulate} stepbystep={this.uiStepByStep} downloadRam={this.downloadRam} downloadBin={this.downloadBin} handleAddTabRiscv={this.addTabDefaultRISCV} handleAddTabMips={this.addTabDefaultMIPS} handleLoadAsm={this.handleLoadAsm} handleLoadBin={this.handleLoadBin} handleDownloadAsm={this.handleDownloadAsm} />\n\t\t\t\t{!has_tabs && <div className=\"no_tabs\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2><Translate id=\"welcome.title\">Welcome to Oak.js</Translate></h2>\n\t\t\t\t\t\t<p><Translate id=\"welcome.subtitle\">Oak.js is an online javascript IDE, Assembler, Disassembler, and Simulator for assembly languages such as RISC-V and MIPS.</Translate></p>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.addTabDefault}><Translate id=\"menus.add_tab\">Add a Tab</Translate></button>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadAsm}><Translate id=\"menus.load_assembly\">Load Assembly</Translate></button>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadBin}><Translate id=\"menus.load_binary\">Load Binary</Translate></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t\t{has_tabs && <div className=\"grid\" style={{gridTemplateColumns: `auto ${this.state.panel_x}px`, gridTemplateRows: `auto calc(${this.state.panel_y}px)`}}>\n\t\t\t\t\t<TextEditor is_disabled={show_input} addTab={this.addTabDefault} />\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragY} className=\"panel_bottom\">\n\t\t\t\t\t\t<PanelConsole show_input={show_input} input={tab.console_input} />\n\t\t\t\t\t\t<PanelMachineCode />\n\t\t\t\t\t\t<PanelMemory />\n\t\t\t\t\t\t<PanelLog />\n\t\t\t\t\t</PanelContainer>\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragX} className=\"panel_side\">\n\t\t\t\t\t\t<PanelSettings submitChanges={this.handleSettingsChange} />\n\t\t\t\t\t\t<PanelRegisters />\n\t\t\t\t\t\t<PanelConversion />\n\t\t\t\t\t</PanelContainer>\n\t\t\t\t</div>}\n\t\t\t\t<input type=\"file\" onChange={this.handleUpload} ref={this.component_input} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst appStateToProps = state => {\n\treturn {\n\t\ttabs: state.tabs,\n\t\tselectedtab: state.selectedtab,\n\t\tproject_settings: state.project_settings\n\t};\n};\n\nconst appDispatchToProps = (dispatch, ownProps) => ({\n\taddTab: (tab) => dispatch(addTab(tab)),\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\n\tselectTab: (id) => dispatch(selectTab(id)),\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i)),\n\tsetHelpVisible: (visible) => dispatch(setHelpVisible(visible)),\n\tsetAboutVisible: (visible) => dispatch(setAboutVisible(visible)),\n\tsetSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\n});\n\nexport default withLocalize(\n\tconnect(appStateToProps,\n\t\t\tappDispatchToProps\n\t)(App));","const tabReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TAB':\n            return [\n                ...state,\n                action.tab\n            ];\n        case 'UPDATE_TAB': {\n            return state.map((t, index) => {\n                if (index === action.index) {\n                    return Object.assign({}, t, action.tab);\n                }\n              \n              return t;\n            });\n        }\n        case 'DELETE_TAB':\n            return [\n                ...state.slice(0, action.id),\n                ...state.slice(action.id + 1)\n            ];\n        default:\n            return state;\n    }\n}\n  \nexport default tabReducer;","const selectedTabReducer = (state = 0, action) => {\n    switch (action.type) {\n        case 'SELECT_TAB':\n            return action.id;\n        default:\n            return state;\n    }\n}\n  \nexport default selectedTabReducer;","const globalSettingsReducer = (state = {}, action) => {\n    return state;\n}\n  \nexport default globalSettingsReducer;","const projectSettingsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'UPDATE_PROJECT_SETTINGS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n  \nexport default projectSettingsReducer;","const selectedTabReducer = (state = {\n    settings: false,\n    help: false\n}, action) => {\n    switch (action.type) {\n        case 'SET_HELP_VISIBLE':\n            return {\n                ...state,\n                help: action.state\n            };\n        case 'SET_ABOUT_VISIBLE':\n            return {\n                ...state,\n                about: action.state\n            };\n        case 'SET_SETTINGS_VISIBLE':\n            return {\n                ...state,\n                settings: action.state\n            };\n        default:\n            return state;\n    }\n}\n  \nexport default selectedTabReducer;","import { combineReducers } from 'redux';\nimport tabs from './tab';\nimport selectedtab from './selectedtab';\nimport global_settings from './globalsettings';\nimport project_settings from './projectsettings';\nimport panel_visibility from './setvisibility';\nimport { localizeReducer } from \"react-localize-redux\";\n\nexport default combineReducers({\n    tabs,\n    selectedtab,\n    global_settings,\n    project_settings,\n    panel_visibility,\n    localize: localizeReducer\n});","// React Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App Imports\nimport App from './app';\n\n// Redux Store Imports\nimport allReducers from './reducers'\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\n// Create a store...\nconst store = createStore(\n    // ... with the list of all reducers\n    allReducers,\n    {},\n    // ...connext it to the dev tools\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n// Render the app with an attached memory store to the element #root\nReactDOM.render(\n    <LocalizeProvider store={store}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </LocalizeProvider>,\n    \n    document.getElementById('root'));\n"],"sourceRoot":""}