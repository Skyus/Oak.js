{"version":3,"sources":["actions/index.js","sections/texteditor.js","sections/navigation.js","sections/panelcontainer.js","modules/select.js","sections/numberttransform.js","sections/panelmemory.js","sections/panelconsole.js","sections/panellog.js","backend.js","sections/help.js","developer_list.js","sections/about.js","modules/hotkey.js","sections/settings.js","modules/input.js","sections/panelsettings.js","sections/panelconversion.js","sections/panelregisters.js","sections/panelmachinecode.js","app.js","reducers/tab.js","reducers/selectedtab.js","reducers/globalsettings.js","reducers/projectsettings.js","reducers/setvisibility.js","reducers/index.js","index.js"],"names":["Actions","setSettingsVisible","state","type","setHelpVisible","setAboutVisible","selectTab","id","updateTab","index","tab","setProjectSettings","n","s","i","payload","file_name","memory_size","isa","TextEditor","addTab","_this","props","handleTabChange","tabs","name","core","memorySize","instruction_set","handleTabClose","event","stopPropagation","selected","selectedtab","Math","min","max","length","deleteTab","setEditorValue","val","current_tab","content","_this2","this","react_default","a","createElement","className","map","onClick","key","lib_default","mode","theme","onChange","width","height","value","readOnly","is_disabled","editorProps","$blockScrolling","Infinity","Component","connect","dispatch","ownProps","SimulatingStatus","Navigation","assemble_css","runningStatus","console_input_type","handleAddTabRiscv","react_localize_redux_es","handleAddTabMips","handleLoadAsm","handleLoadBin","handleDownloadAsm","downloadBin","downloadRam","showSettings","showHelp","showAbout","assemble","concat","simulate","stepbystep","withLocalize","visible","PanelContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderTabs","React","Children","children","child","display_name","e","handleClickTab","preventDefault","setState","childrenProps","cloneElement","onMouseDown","handleStartDrag","Select","style","backgroundImage","icon","placeholder","padNumber","str","padded","parseToFloat","num","PanelMemory","handleType","register_type","parseInt","target","translateRegister","input","toString","memory","empty","select_Select","defaultValue","byte","PanelConsole","log","console","running","line","show_input","PanelLog","instruction","Utils","Kind","Help","handleClose","handleStopClose","options","renderInnerHtml","panel_visibility","help","developer_list","pic","job","link","desc","additional","translators","About","printdev","arr","element","href","src","devs","lang","about","HotkeyInput","handleClick","capturing","window","addEventListener","handleKey","toLowerCase","shift","shiftKey","ctrl","ctrlKey","alt","altKey","key_name","removeEventListener","save","testKey","key_ctrl","key_alt","key_shift","setKey","done","arguments","undefined","getKey","setKeyStr","upos","indexOf","mods","substr","combo","c","tabIndex","themes","Settings","canhandleinput","cancel","hotkey","comp_new","current","comp_load","comp_save","comp_assemble","comp_step","comp_sim","hotkeyfns","fn_new","fn_load","fn_save","fn_ass","fn_step","fn_sim","setDefaults","setTheme","setDefaultsSave","saveSettings","d","Date","setTime","getTime","exp","toUTCString","document","cookie","continuefn","includes","forEach","getElementById","disabled","handleISA","default_isa","handleTheme","acceptCookies","use_cookies","deleteAllCookies","cookies","split","eqPos","createRef","has_cookies","ca","charAt","substring","eq","display","position","colSpan","hotkey_HotkeyInput","ref","settings","Input","signExt","bits","mutableValue","rangeCheck","catBytes","bytes","bigEndian","reverse","storage","pad","number","digits","radix","hex","array","hexadecimal","hexRepresentation","toUpperCase","String","prototype","interpretedBytes","hexes","isNaN","push","hasPrefix","needle","Parameter","Endianness","Keyword","Directive","Line","raw","addressThisPass","sensitive","machineCode","kind","noise","sensitivityList","possibleInstructions","assembler","text","tmp","keywordRegexes","comment","exec","pieces","label","processed","directive","captures","RegExp","directives","directiveData","data","invalidReason","instructionSet","instructions","match","format","regex","mnemonic","slice","minimum","fill","count","zeroDelimitedString","_32bit","_16bit","_8bit","elements","cString","string","generalCharacters","characters","found","character","charCodeAt","Assembler","escapedCharacters","isInstruction","lines","address","candidates","testingInstructions","possibleInstruction","args","template","j","ranges","range","parameter","limited","totalBits","store","parameterType","special","processSpecialParameter","process","errorMessage","context","register","startBit","limitStart","endBit","limitEnd","start","smallestPossibleInstruction","filter","pi","immediate","stored","offset","result","assembleText","assembleData","lineByLabel","linesByLabel","sensor","sensorLength","newAssembly","file","endianness","memoryMap","incrementOnFetch","keywords","words","numeric","radixList","charMarker","escapable","escapedCharacterList","char","stringMarker","instructionLength","abiNames","registerNo","reference","extraction","radixes","interpretable","pass","errors","assemblerModeText","initialProcess","asm","list","keyword","b","o","h","keys","join","0","t","r","'","\"","BitRange","field","constant","signed","parameterDefaultValue","Format","disassembly","decodeSpecialParameter","Instruction","constants","constValues","executor","signatoryOverride","pseudoInstructionFor","computedBits","computedMask","computedTemplate","machineCodeMutable","maskBits","mask","bit","ceil","before","end","addition","after","temp","InstructionSet","formats","pseudoInstructions","exampleCode","sort","output","replace","VirtualOS","continueInputString","reg","virtualOSArgumentVectorStart","arg","registerFile","read","memset","continueInputInt","write","service","virtualOSServiceRegister","outputInt","iterator","memcpy","outStr","fromCharCode","outputString","inputInt","inputString","handleHalt","Core","insts","decoded","fetched","bitRanges","limit","pc","disassemble","CoreFactory","ISAs","architecture","virtualOS","generator","RISCVRegisterFile","physicalFile","modifiedRegisters","registerNumber","modReg","getRegisterCount","RISCVCore","virtualOSArgumentVectorEnd","Array","reset","parameterized","rType","iType","ilSubtype","isSubtype","sType","uType","sbType","ujType","allConstSubtype","ecall","mvPseudo","liPseudo","jrPseudo","MIPSRegisterFile","MIPSCore","_this3","rjSubtype","rsSubtype","rcSubtype","ibSubtype","iluiSubtype","ilsSubtype","writeAddress","jType","backend","PanelSettings","handleFileName","project_settings","handleMemorySize","test","handleSubmit","submitChanges","isas","OakJS","getCoreList","onSubmit","input_Input","PanelConversion","calculateOutput","in_type","out_type","onChangeInput","input_type","output_type","out","has_value","onChangeInputType","onChangeOutputType","REGISTER_UNASSIGNED","REGISTER_ASSIGNED","REGISTER_NEWASSIGNED","PanelRegisters","getChangedRegisterClass","registers","register_changed","register_names","cellSpacing","cellPadding","register_dpy","data-info","PanelMachineCode","machinecode","machine_code","Stopped","Step","Play","CONSOLE_INPUT_NONE","CONSOLE_INPUT_NUM","CONSOLE_INPUT_STR","MessageType","Log","Output","Success","Warning","Error","App","handleKeyPress","console_input","cursor","cursor_pos","continueAfterConsole","which","keyCode","l","keycode","isNum","addConsoleMessage","msg_type","virtual_os","checkUpdatedTabs","mod_reg","getModifiedRegisters","addTabFull","code","mem_size","get_example_code","getCore","new_tab","from","getDefaultISA","addTabDefault","addTabDefaultRISCV","addTabDefaultMIPS","handleUpload","files","component_input","is_upload_bin","blob","size","fr","FileReader","me","assertThisInitialized","Uint8Array","readAsArrayBuffer","res","readAsText","click","el","Blob","blobLink","URL","createObjectURL","setAttribute","body","appendChild","removeChild","byteArray","resetUI","uiSimulate","uiAssemble","fetch","decode","execute","uiStepByStep","little","arrayFromFile","passZero","passCounter","reduce","handleSettingsChange","isa_type","diff_isa","diff_mem","new_isa_found","handleStartDragX","handleDragX","handleStopDragX","handleX","x","pageX","w","innerWidth","documentElement","clientWidth","panel_x","handleY","y","pageY","innerHeight","clientHeight","panel_y","handleStartDragY","handleDragY","handleStopDragY","alert","initialize","languages","renderToStaticMarkup","addTranslationForLanguage","enTranslations","has_tabs","Fragment","navigation","gridTemplateColumns","gridTemplateRows","texteditor","panelcontainer_PanelContainer","panelconsole","panelmachinecode","panelmemory","panellog","panelsettings","panelregisters","panelconversion_PanelConversion","tabReducer","action","toConsumableArray","assign","selectedTabReducer","globalSettingsReducer","projectSettingsReducer","objectSpread","combineReducers","global_settings","localize","localizeReducer","createStore","allReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","app"],"mappings":"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","file":"static/js/main.7fb805cd.chunk.js","sourcesContent":["export const Actions = {\r\n    SELECT_TAB: 'SELECT_TAB',\r\n    ADD_TAB: 'ADD_TAB',\r\n    UPDATE_TAB: 'UPDATE_TAB',\r\n    DELETE_TAB: 'DELETE_TAB',\r\n    UPDATE_PROJECT_SETTINGS: 'UPDATE_PROJECT_SETTINGS',\r\n    SET_HELP_VISIBLE: 'SET_HELP_VISIBLE',\r\n    SET_ABOUT_VISIBLE: 'SET_ABOUT_VISIBLE',\r\n    SET_SETTINGS_VISIBLE: 'SET_SETTINGS_VISIBLE'\r\n};\r\n\r\nexport const setSettingsVisible = (state) => ({\r\n    type: Actions.SET_SETTINGS_VISIBLE,\r\n    state\r\n});\r\n\r\nexport const setHelpVisible = (state) => ({\r\n    type: Actions.SET_HELP_VISIBLE,\r\n    state\r\n});\r\n\r\nexport const setAboutVisible = (state) => ({\r\n    type: Actions.SET_ABOUT_VISIBLE,\r\n    state\r\n});\r\n\r\nexport const selectTab = id => ({\r\n    type: Actions.SELECT_TAB,\r\n    id\r\n});\r\n\r\nexport const addTab = tab => ({\r\n    type: Actions.ADD_TAB,\r\n    tab\r\n});\r\n\r\nexport const updateTab = (index, tab) => ({\r\n    type: Actions.UPDATE_TAB,\r\n    index,\r\n    tab\r\n});\r\n\r\nexport const deleteTab = id => ({\r\n    type: Actions.DELETE_TAB,\r\n    id\r\n});\r\n\r\nexport const setProjectSettings = (n, s, i) => ({\r\n    type: Actions.UPDATE_PROJECT_SETTINGS,\r\n    payload: {\r\n        file_name: n,\r\n        memory_size: s,\r\n        isa: i\r\n    }\r\n})","import React, { Component } from 'react'\r\n//import brace from 'brace';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/java';\r\nimport 'brace/theme/github';\r\n//import './ace_theme';\r\n\r\nimport { selectTab, deleteTab, updateTab, setProjectSettings } from \"../actions\"\r\nimport { connect } from 'react-redux';\r\n\r\nclass TextEditor extends Component {\r\n\taddTab = () => {\r\n\t\tthis.props.addTab();\r\n\t}\r\n\t\r\n\thandleTabChange = (id) => {\r\n\t\tthis.props.selectTab(id);\r\n\t\tlet tab = this.props.tabs[id];\r\n\r\n\t\tif (tab) {\r\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\r\n\t\t}\r\n\t}\r\n\r\n\thandleTabClose = (event, id) => {\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tlet selected = this.props.selectedtab;\r\n\t\tif (selected >= id)\r\n\t\t\tselected -= 1;\r\n\r\n\t\tselected = Math.min(Math.max(selected, 0), this.props.tabs.length - 1);\r\n\r\n\t\tthis.props.selectTab(selected);\r\n\r\n\t\tlet tab = this.props.tabs[selected];\r\n\r\n\t\tif (tab) {\r\n\t\t\tthis.props.setProjectSettings(tab.name, tab.core.memorySize, tab.instruction_set);\r\n\t\t}\r\n\r\n\t\tthis.props.deleteTab(id);\r\n\t}\r\n\r\n\tsetEditorValue = (val) => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\t\ttab.content = val;\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet tabs = this.props.tabs;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<main id=\"text_editor\" className=\"text_editor\">\r\n\t\t\t\t<ul className=\"page_tabs\">\r\n\t\t\t\t\t{tabs.map((tab, id) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li onClick={() => this.handleTabChange(id)} key={id} className={(this.props.selectedtab === id) ? \"selected\" : \"\"}>\r\n\t\t\t\t\t\t\t<span>{tab.name}</span>\r\n\t\t\t\t\t\t\t<div onClick={(event) => this.handleTabClose(event, id)}></div>\r\n\t\t\t\t\t\t</li>);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<li className=\"add_tab\" onClick={this.addTab}></li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t{<AceEditor\r\n\t\t\t\t\tmode=\"java\"\r\n\t\t\t\t\ttheme=\"github\"\r\n\t\t\t\t\tonChange={this.setEditorValue}\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\theight=\"\"\r\n\t\t\t\t\tname=\"editor_area\"\r\n\t\t\t\t\tclassName=\"editor_area\"\r\n\t\t\t\t\tvalue={tabs[this.props.selectedtab].content}\r\n\t\t\t\t\treadOnly={this.props.is_disabled}\r\n\t\t\t\t\teditorProps={{$blockScrolling: Infinity}}\r\n\t\t\t\t/>}\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n\t\ttabs: state.tabs,\r\n\t\tselectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nconst dispatchToProps = (dispatch, ownProps) => ({\r\n\tselectTab: (id) => dispatch(selectTab(id)),\r\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\r\n\tdeleteTab: (id) => dispatch(deleteTab(id)),\r\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\r\n})\r\n\r\nexport default connect(\r\n\tstateToProps,\r\n\tdispatchToProps\r\n\t)(TextEditor);","import React, { Component } from 'react';\r\nimport { Translate, withLocalize } from 'react-localize-redux';\r\nimport { connect } from 'react-redux';\r\nimport { setSettingsVisible, setHelpVisible, setAboutVisible } from \"../actions\"\r\n\r\nconst SimulatingStatus = {\r\n\tStopped:\t0,\r\n\tStep:\t\t1,\r\n\tPlay:\t\t2\r\n};\r\n\r\nconst CONSOLE_INPUT_NONE  = 0;\r\n\r\nclass Navigation extends Component {\r\n\trender() {\r\n\t\tlet assemble_css = \"\";\r\n\t\tconst tab  = this.props.tabs[this.props.selectedtab];\r\n\r\n\t\tif (tab) {\r\n\t\t\tif (tab.runningStatus === SimulatingStatus.Stopped) {\r\n\t\t\t\tassemble_css = \" assemble_ready\";\r\n\t\t\t}\r\n\r\n\t\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE) {\r\n\t\t\t\tassemble_css += \" simulate_prevent_input\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<nav id=\"navigation\" className=\"navigation\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li className=\"oak_logo\">\r\n\t\t\t\t\t\t<ul className=\"drop_down\">\r\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabRiscv}><Translate id=\"menus.add_tab_riscv\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.handleAddTabMips}><Translate id=\"menus.add_tab_mips\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadAsm}><Translate id=\"menus.load_assembly\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.handleLoadBin}><Translate id=\"menus.load_binary\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.handleDownloadAsm}><Translate id=\"menus.download_assembly\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.downloadBin}><Translate id=\"menus.download_binary\" /></li>\r\n\t\t\t\t\t\t\t<li onClick={this.props.downloadRam}><Translate id=\"menus.download_memory\" /></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li onClick={this.props.showSettings}><Translate id=\"menus.settings\" /></li>\r\n\t\t\t\t\t<li onClick={this.props.showHelp}><Translate id=\"menus.help\" /></li>\r\n\t\t\t\t\t<li onClick={this.props.showAbout}><Translate id=\"menus.about\" /></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<div className=\"buttons_right\">\r\n\t\t\t\t\t<button className={`assemble`} onClick={this.props.assemble}></button>\r\n\t\t\t\t\t<button className={`simulate${assemble_css}`} onClick={this.props.simulate}></button>\r\n\t\t\t\t\t<button className={`simulate_step${assemble_css}`} onClick={this.props.stepbystep}></button>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n\t\ttabs: state.tabs,\r\n\t\tselectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nconst appDispatchToProps = (dispatch, ownProps) => ({\r\n\tshowHelp: (visible) => dispatch(setHelpVisible(visible)),\r\n\tshowAbout: (visible) => dispatch(setAboutVisible(visible)),\r\n\tshowSettings: (visible) => dispatch(setSettingsVisible(visible))\r\n});\r\n\r\nexport default withLocalize(\r\n\tconnect(stateToProps,\r\n\t\tappDispatchToProps)\r\n\t(Navigation));","import React, { Component } from 'react'\r\n\r\nexport default class PanelContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: 0\r\n        };\r\n    }\r\n    \r\n    handleClickTab(e, key) {\r\n        e.preventDefault();\r\n        this.setState({selected: key});\r\n    }\r\n\r\n    renderTabs = () => {\r\n        return (\r\n            <ul className=\"panel_tabs\">\r\n                {React.Children.map(this.props.children, (child, i) => \r\n                    <li className={(this.state.selected === i) ? \"selected\": \"\"} key={child.type.display_name} onClick={(e) => this.handleClickTab(e, i)}>\r\n                        {child.type.display_name}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        const { children } = this.props;\r\n        const childrenProps = React.Children.map(children, (child, id) => {\r\n            return (this.state.selected === id) && React.cloneElement(child);\r\n        });\r\n        return (\r\n            <div id=\"panel_container\" className={`panel_container ${this.props.className}`}>\r\n                <div onMouseDown={this.props.handleStartDrag} className=\"panel_drag\"></div>\r\n                {this.renderTabs()}\r\n                {childrenProps}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Select extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"select_group\">\r\n                <select onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(images/icons/input_select_arrow.svg), url(${this.props.icon})`}}>\r\n                    {this.props.children}\r\n                </select>\r\n                <label className=\"group_label\">{this.props.placeholder}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export function padNumber(str, length) {\r\n    var padded = str;\r\n    for (var i = 0; i < length - str.length; i++)\r\n    {\r\n        padded = \"0\" + padded;\r\n    }\r\n    return padded;\r\n};\r\n    \r\nexport function parseToFloat(num) {\r\n    return num;\r\n};\r\n\r\n// From Jonas Raoni Soares Silva, JSFromHell states\r\n//          that code can be redistributed and modified\r\n//          as long as original credits are kept.\r\n// http://jsfromhell.com/classes/binary-parser\r\nexport function encodeFloat(number) {\r\n    return number;\r\n    /*var n = +number,\r\n        status = (n !== n) || n === -Infinity || n == +Infinity ? n : 0,\r\n        exp = 0,\r\n        len = 281, // 2 * 127 + 1 + 23 + 3,\r\n        bin = new Array(len),\r\n        signal = (n = status !== 0 ? 0 : n) < 0,\r\n        n = Math.abs(n),\r\n        intPart = Math.floor(n),\r\n        floatPart = n - intPart,\r\n        i, lastBit, rounded, j, exponent;\r\n\r\n    if (status !== 0) {\r\n        if (n !== n) {\r\n            return 0x7fc00000;\r\n        }\r\n        if (n === Infinity) {\r\n            return 0x7f800000;\r\n        }\r\n        if (n === -Infinity) {\r\n            return 0xff800000\r\n        }\r\n    }\r\n\r\n    i = len;\r\n    while (i) {\r\n        bin[--i] = 0;\r\n    }\r\n\r\n    i = 129;\r\n    while (intPart && i) {\r\n        bin[--i] = intPart % 2;\r\n        intPart = Math.floor(intPart / 2);\r\n    }\r\n\r\n    i = 128;\r\n    while (floatPart > 0 && i) {\r\n        (bin[++i] = ((floatPart *= 2) >= 1) - 0) && --floatPart;\r\n    }\r\n\r\n    i = -1;\r\n    while (++i < len && !bin[i]);\r\n\r\n    if (bin[(lastBit = 22 + (i = (exp = 128 - i) >= -126 && exp <= 127 ? i + 1 : 128 - (exp = -127))) + 1]) {\r\n        if (!(rounded = bin[lastBit])) {\r\n            j = lastBit + 2;\r\n            while (!rounded && j < len) {\r\n                rounded = bin[j++];\r\n            }\r\n        }\r\n\r\n        j = lastBit + 1;\r\n        while (rounded && --j >= 0) {\r\n            (bin[j] = !bin[j] - 0) && (rounded = 0);\r\n        }\r\n    }\r\n    i = i - 2 < 0 ? -1 : i - 3;\r\n    while(++i < len && !bin[i]);\r\n    (exp = 128 - i) >= -126 && exp <= 127 ? ++i : exp < -126 && (i = 255, exp = -127);\r\n    (intPart || status !== 0) && (exp = 128, i = 129, status == -Infinity ? signal = 1 : (status !== status) && (bin[i] = 1));\r\n\r\n    n = Math.abs(exp + 127);\r\n    exponent = 0;\r\n    j = 0;\r\n    while (j < 8) {\r\n        exponent += (n % 2) << j;\r\n        n >>= 1;\r\n        j++;\r\n    }\r\n\r\n    var mantissa = 0;\r\n    n = i + 23;\r\n    for (; i < n; i++) {\r\n        mantissa = (mantissa << 1) + bin[i];\r\n    }\r\n    return ((signal ? 0x80000000 : 0) + (exponent << 23) + mantissa) | 00;*/\r\n}","import React, { Component } from 'react'\r\nimport Select from '../modules/select'\r\nimport {padNumber} from './numberttransform'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PanelMemory extends Component {\r\n    static display_name = \"memory\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register_type: 0,\r\n        }\r\n    }\r\n\r\n    handleType = (event) => {\r\n        this.setState({register_type: parseInt(event.target.value, 10)});\r\n    };\r\n\r\n    translateRegister = (input) => {\r\n        switch(this.state.register_type) {\r\n            default:\r\n            case 0: // Hex\r\n                return padNumber((input >>> 0).toString(16), 2);\r\n            case 1: // uint\r\n                return padNumber((input >>> 0).toString(10), 3);\r\n            case 2: // octal\r\n                return padNumber((input >>> 0).toString(8), 3);\r\n            case 3: // bin\r\n                return padNumber((input >>> 0).toString(2), 8);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let tabs = this.props.tabs;\r\n        if (tabs.length === 0)\r\n            return <div></div>;\r\n            \r\n        let memory = tabs[this.props.selectedtab].core.memory;\r\n        let empty = memory.length === 0;\r\n        return (\r\n            <div id=\"panel_memory\" className=\"panel panel_memory\">\r\n                {empty && <span className=\"panel_empty\">Memory Empty</span>}\r\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\r\n                    <option value=\"0\">Hex</option>\r\n                    <option value=\"1\">Decimal</option>\r\n                    <option value=\"2\">Octal</option>\r\n                    <option value=\"3\">Binary</option>\r\n                </Select>}\r\n                \r\n                {!empty && memory.map((byte, i) => {\r\n                    let val = this.translateRegister(byte);\r\n                    return (<span key={i}>{val} </span>);\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n        tabs: state.tabs,\r\n        selectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nexport default connect(stateToProps)(PanelMemory);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nconst SimulatingStatus = {\r\n\tStopped:\t0,\r\n\tStep:\t\t1,\r\n\tPlay:\t\t2\r\n};\r\n\r\nclass PanelConsole extends Component {\r\n    static display_name = \"console\";\r\n\r\n    render() {\r\n        let tab = this.props.tabs[this.props.selectedtab];\r\n        if (!tab)\r\n            return <div></div>;\r\n            \r\n        let log = tab.console;\r\n        let empty = log.length === 0;\r\n\r\n        const running = tab.runningStatus !== SimulatingStatus.Stopped;\r\n        \r\n        return (<div id=\"panel_console\" className=\"panel panel_console\">\r\n            {empty && <span className=\"panel_empty\">Console Empty</span>}\r\n            {!empty && log.map((line, i) => {\r\n                return (<div key={i}>{line}</div>);\r\n            })}\r\n            {this.props.show_input && <span><span className=\"blinker\">{\"<<\"}</span> {this.props.input}</span>}\r\n            {running && <div className=\"running_console\">Simulation still not completed...</div>}\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n        tabs: state.tabs,\r\n        selectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nexport default connect(stateToProps)(PanelConsole);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PanelLog extends Component {\r\n    static display_name = \"log\";\r\n\r\n    render() {\r\n        let empty = this.props.core.log.length === 0;\r\n        return (<div id=\"panel_log\" className=\"panel panel_log\">\r\n            {empty && <span className=\"panel_empty\">Instruction Log Empty</span>}\r\n            {!empty && this.props.core.log.map((instruction, i) => {\r\n                return (<div key={i}>{instruction}</div>);\r\n            })}\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n\t\tcore: state.tabs[state.selectedtab]\r\n\t};\r\n};\r\n\r\nexport default connect(stateToProps)(PanelLog);","/// <reference path=\"InstructionSet.ts\"/>\r\nvar Utils;\r\n(function (Utils) {\r\n    /*\r\n        signExt\r\n\r\n        Sign extends an n-bit value to fit Javascript limits.\r\n    */\r\n    function signExt(value, bits) {\r\n        let mutableValue = value;\r\n        if ((mutableValue & (1 << (bits - 1))) !== 0) {\r\n            mutableValue = ((~(0) >>> bits) << bits) | value;\r\n        }\r\n        return mutableValue;\r\n    }\r\n    Utils.signExt = signExt;\r\n    /*\r\n        rangeCheck\r\n\r\n        Checks if a value can fit within a certain number of bits.\r\n    */\r\n    function rangeCheck(value, bits) {\r\n        if (bits >= 32) {\r\n            return null; // No stable way of checking.\r\n        }\r\n        var min = -(1 << bits - 1);\r\n        var max = (1 << bits - 1) - 1;\r\n        value = signExt(value, bits);\r\n        if ((min <= (value >> 0)) && ((value >> 0) <= max)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    Utils.rangeCheck = rangeCheck;\r\n    /*\r\n        catBytes\r\n        \r\n        Converts bytes stored in a little endian fashion to a proper js integer.\r\n    */\r\n    function catBytes(bytes, bigEndian = false) {\r\n        if (bytes.length > 4) {\r\n            return null;\r\n        }\r\n        if (bigEndian) {\r\n            bytes.reverse();\r\n        }\r\n        let storage = 0 >>> 0;\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            storage = storage | (bytes[i] << (8 * i));\r\n        }\r\n        return storage;\r\n    }\r\n    Utils.catBytes = catBytes;\r\n    /*\r\n        pad\r\n        \r\n        Turns a number to a padded string.\r\n    */\r\n    function pad(number, digits, radix) {\r\n        let padded = number.toString(radix);\r\n        while (digits > padded.length) {\r\n            padded = \"0\" + padded;\r\n        }\r\n        return padded;\r\n    }\r\n    Utils.pad = pad;\r\n    function hex(array) {\r\n        let hexadecimal = \"\";\r\n        for (let i = 0; i < array.length; i++) {\r\n            let hexRepresentation = array[i].toString(16).toUpperCase();\r\n            if (hexRepresentation.length === 1) {\r\n                hexRepresentation = \"0\" + hexRepresentation;\r\n            }\r\n            hexadecimal += hexRepresentation + \" \";\r\n        }\r\n        return hexadecimal;\r\n    }\r\n    Utils.hex = hex;\r\n})(Utils || (Utils = {}));\r\n// Changes a string of hex bytes to an array of numbers.\r\nString.prototype.interpretedBytes = function () {\r\n    let hexes = this.split(' '); // Remove spaces, then seperate characters\r\n    let bytes = [];\r\n    for (let i = 0; i < hexes.length; i++) {\r\n        let value = parseInt(hexes[i], 16);\r\n        if (!isNaN(value)) {\r\n            bytes.push(value);\r\n        }\r\n    }\r\n    return bytes;\r\n};\r\n// Check if haystack has needle in the beginning.\r\nString.prototype.hasPrefix = function (needle) {\r\n    return this.substr(0, needle.length) === needle;\r\n};\r\nvar Kind;\r\n(function (Kind) {\r\n    Kind[Kind[\"instruction\"] = 0] = \"instruction\";\r\n    Kind[Kind[\"data\"] = 1] = \"data\";\r\n    Kind[Kind[\"directive\"] = 2] = \"directive\";\r\n    Kind[Kind[\"noise\"] = 3] = \"noise\";\r\n})(Kind || (Kind = {}));\r\n;\r\nclass Line {\r\n    constructor(raw, number) {\r\n        this.addressThisPass = null;\r\n        this.sensitive = false;\r\n        this.machineCode = [];\r\n        this.raw = raw;\r\n        this.number = number;\r\n        this.kind = Kind.noise;\r\n        this.sensitivityList = [];\r\n        this.possibleInstructions = [];\r\n    }\r\n    static arrayFromFile(file) {\r\n        return file.split('\\n').map((line, index) => new Line(line, index));\r\n    }\r\n    initialProcess(assembler, text = true) {\r\n        let comment = assembler.keywordRegexes[Keyword.comment];\r\n        let tmp = comment.exec(this.raw)[1];\r\n        let label = assembler.keywordRegexes[Keyword.label];\r\n        let pieces = label.exec(tmp);\r\n        this.label = pieces[1];\r\n        this.processed = pieces[2] || '';\r\n        if (/^s*$/.exec(this.processed) !== null) {\r\n            return text;\r\n        }\r\n        if (assembler.keywordRegexes[Keyword.directive] != null) {\r\n            let captures = RegExp(assembler.keywordRegexes[Keyword.directive]).exec(this.processed);\r\n            if (captures !== null) {\r\n                this.directive = assembler.directives[captures[1]];\r\n                this.directiveData = captures[2];\r\n            }\r\n        }\r\n        if (text) {\r\n            if (this.directive !== undefined) {\r\n                switch (this.directive) {\r\n                    case Directive.data:\r\n                        this.kind = Kind.directive;\r\n                        return false;\r\n                    case Directive.text:\r\n                        this.kind = Kind.directive;\r\n                        break;\r\n                    default:\r\n                        this.invalidReason = \"text.unsupportedDirective\";\r\n                }\r\n                return true;\r\n            }\r\n            this.kind = Kind.instruction;\r\n            assembler.instructionSet.instructions.forEach(instruction => {\r\n                let match = instruction.format.regex.exec(this.processed);\r\n                if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\r\n                    this.possibleInstructions.push([instruction, match.slice(2), [], null]);\r\n                }\r\n                return match !== null;\r\n            });\r\n            if (this.possibleInstructions.length === 0) {\r\n                this.invalidReason = \"text.noMatchingInstructions\";\r\n                return true;\r\n            }\r\n            let minimum = this.possibleInstructions[0][0].bytes;\r\n            (this.machineCode = []).length = minimum;\r\n            this.machineCode.fill(0);\r\n            return true;\r\n        }\r\n        else {\r\n            let count = null; // byte count\r\n            let zeroDelimitedString = 0;\r\n            if (this.directive !== undefined) {\r\n                this.kind = Kind.data;\r\n                switch (this.directive) {\r\n                    case Directive.data:\r\n                        this.kind = Kind.directive;\r\n                        break;\r\n                    case Directive.text:\r\n                        this.kind = Kind.directive;\r\n                        return true;\r\n                    case Directive._32bit:\r\n                        count = count || 4;\r\n                    // fall through\r\n                    case Directive._16bit:\r\n                        count = count || 2;\r\n                    // fall through\r\n                    case Directive._8bit:\r\n                        count = count || 1;\r\n                        let elements = this.directiveData.split(/\\s*,\\s*/);\r\n                        (this.machineCode = []).length = (elements.length * count);\r\n                        this.machineCode.fill(0);\r\n                        this.kind = Kind.data;\r\n                        break;\r\n                    case Directive.cString:\r\n                        zeroDelimitedString = 1;\r\n                    // fall through\r\n                    case Directive.string:\r\n                        if (assembler.keywordRegexes[Keyword.string] === null) {\r\n                            this.invalidReason = \"isa.noStringTokenDefined\";\r\n                        }\r\n                        let match = assembler.keywordRegexes[Keyword.string].exec(this.directiveData);\r\n                        if (match === null) {\r\n                            this.invalidReason = \"data.invalidString\";\r\n                        }\r\n                        else {\r\n                            let regex = RegExp(assembler.generalCharacters, \"g\");\r\n                            let characters = [];\r\n                            let found = null;\r\n                            while ((found = regex.exec(match[1]))) {\r\n                                characters.push(found);\r\n                            }\r\n                            (this.machineCode = []).length = (characters.length + zeroDelimitedString);\r\n                            for (let c in characters) {\r\n                                let character = String(characters[c]);\r\n                                let value = character.charCodeAt(0);\r\n                                if (character.length > 2) {\r\n                                    value = Assembler.escapedCharacters[character[1]];\r\n                                }\r\n                                this.machineCode[c] = value;\r\n                            }\r\n                            if (zeroDelimitedString === 1) {\r\n                                this.machineCode[this.machineCode.length - 1] = 0;\r\n                            }\r\n                        }\r\n                        this.kind = Kind.data;\r\n                        break;\r\n                    default:\r\n                        this.invalidReason = \"data.unrecognizedDirective\";\r\n                }\r\n            }\r\n            else {\r\n                let isInstruction = false;\r\n                assembler.instructionSet.instructions.forEach(instruction => {\r\n                    let match = instruction.format.regex.exec(this.processed);\r\n                    if (match !== null && match[1].toUpperCase() === instruction.mnemonic) {\r\n                        isInstruction = true;\r\n                    }\r\n                });\r\n                if (isInstruction) {\r\n                    this.invalidReason = \"data.instruction\";\r\n                }\r\n                else {\r\n                    this.invalidReason = \"data.unknownInput\";\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    assembleText(assembler, lines, address) {\r\n        let candidates = false;\r\n        testingInstructions: for (let i in this.possibleInstructions) {\r\n            let possibleInstruction = this.possibleInstructions[i];\r\n            let instruction = possibleInstruction[0];\r\n            let args = possibleInstruction[1];\r\n            let machineCode = instruction.template;\r\n            for (var j in instruction.format.ranges) {\r\n                let range = instruction.format.ranges[j];\r\n                if (range.parameter === undefined) {\r\n                    continue;\r\n                }\r\n                let limited = range.totalBits;\r\n                let bits = limited || range.bits;\r\n                let store = null;\r\n                if (range.parameterType == Parameter.special) {\r\n                    store = instruction.format.processSpecialParameter(args[range.parameter], Parameter.special, bits, address, assembler);\r\n                }\r\n                else {\r\n                    store = assembler.process(args[range.parameter], range.parameterType, bits, address, instruction.bytes);\r\n                }\r\n                if (store.errorMessage !== null) {\r\n                    possibleInstruction[3] = store.errorMessage;\r\n                    continue testingInstructions;\r\n                }\r\n                else if (store.context !== null && store.value === null) {\r\n                    store.context.sensitivityList.push(this);\r\n                    this.sensitive = true;\r\n                    break testingInstructions;\r\n                }\r\n                else {\r\n                    let register = store.value;\r\n                    let startBit = range.limitStart;\r\n                    let endBit = range.limitEnd;\r\n                    if (limited !== undefined && startBit !== undefined && endBit !== undefined) {\r\n                        register >>= startBit; // discard start bits bits\r\n                        let bits = (endBit - startBit + 1);\r\n                        register &= (1 << bits) - 1; // mask end - start + 1 bits\r\n                    }\r\n                    let masked = register & (1 << bits) - 1;\r\n                    machineCode |= masked << range.start;\r\n                }\r\n            }\r\n            for (let i = 0; i < instruction.bytes; i += 1) {\r\n                possibleInstruction[2].push(machineCode & 0xFF);\r\n                machineCode >>>= 8;\r\n            }\r\n            candidates = true;\r\n        }\r\n        if (candidates) {\r\n            // Expand machine code if applicable\r\n            let smallestPossibleInstruction = this.possibleInstructions.filter(pi => pi[3] === null)[0];\r\n            this.machineCode = smallestPossibleInstruction[2];\r\n        }\r\n        // Handle errors\r\n        let errorMessage = null;\r\n        let errorOccurred = !(candidates || this.sensitive);\r\n        if (errorOccurred) {\r\n            errorMessage = this.possibleInstructions[this.possibleInstructions.length - 1][3]; //Typically the most lenient option is last\r\n        }\r\n        return errorMessage;\r\n    }\r\n    assembleData(assembler, lines, address) {\r\n        let errorMessage = null;\r\n        let count = null;\r\n        switch (this.directive) {\r\n            case Directive._32bit:\r\n                count = count || 4;\r\n            // fall through\r\n            case Directive._16bit:\r\n                count = count || 2;\r\n            // fall through\r\n            case Directive._8bit:\r\n                count = count || 1;\r\n                let elements = this.directiveData.split(/\\s*,\\s*/);\r\n                for (let i = 0; i < elements.length; i += 1) {\r\n                    let element = elements[i];\r\n                    let bits = count << 3;\r\n                    let store = assembler.process(element, Parameter.immediate, bits, address, 0);\r\n                    if (store.errorMessage !== null) {\r\n                        errorMessage = store.errorMessage;\r\n                        break;\r\n                    }\r\n                    else if (store.context !== null && store.value === null) {\r\n                        store.context.sensitivityList.push(this);\r\n                        this.sensitive = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        let stored = store.value;\r\n                        for (let j = 0; j < count; j += 1) {\r\n                            let offset = (count * i);\r\n                            this.machineCode[j + offset] = stored & 0xFF;\r\n                            stored >>>= 8;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case Directive.cString:\r\n            case Directive.string:\r\n                // Already handled in pass 0.\r\n                break;\r\n            default:\r\n                this.invalidReason = \"data.unrecognizedDirective\";\r\n        }\r\n        return errorMessage;\r\n    }\r\n    assemble(assembler, lines, address) {\r\n        this.sensitive = false;\r\n        let result = [null, false];\r\n        switch (this.kind) {\r\n            case Kind.instruction:\r\n                result[0] = this.assembleText(assembler, lines, address);\r\n                break;\r\n            case Kind.data:\r\n                result[0] = this.assembleData(assembler, lines, address);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let lineByLabel = assembler.linesByLabel[this.label];\r\n        if (lineByLabel !== undefined) {\r\n            lineByLabel[1] = address;\r\n        }\r\n        if (result[0] === null) {\r\n            for (let i in this.sensitivityList) {\r\n                let sensor = this.sensitivityList[i];\r\n                if (sensor.addressThisPass !== null) {\r\n                    let sensorLength = sensor.machineCode.length;\r\n                    let newAssembly = sensor.assemble(assembler, lines, sensor.addressThisPass);\r\n                    if (sensor.sensitive) {\r\n                        // Still sensitive, leave it alone uwu\r\n                    }\r\n                    else {\r\n                        if (newAssembly[1]) {\r\n                            result[1] = true;\r\n                            break;\r\n                        }\r\n                        if (sensor.machineCode.length !== sensorLength) {\r\n                            result[1] = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.invalidReason = result[0];\r\n        }\r\n        return result;\r\n    }\r\n}\r\nclass Assembler {\r\n    constructor(instructionSet, endianness, memoryMap = null) {\r\n        this.linesByLabel = [];\r\n        this.incrementOnFetch = instructionSet.incrementOnFetch;\r\n        this.keywordRegexes = [];\r\n        this.memoryMap = memoryMap;\r\n        if (instructionSet.keywordRegexes) {\r\n            this.keywordRegexes = instructionSet.keywordRegexes;\r\n        }\r\n        else if (instructionSet.keywords) {\r\n            let words = instructionSet.keywords;\r\n            this.keywordRegexes = [];\r\n            if (words[Keyword.directive]) {\r\n                let options = Assembler.options(instructionSet.keywords[Keyword.directive]);\r\n                if (options) {\r\n                    this.keywordRegexes[Keyword.directive] = RegExp(options + \"([^\\\\s]+)\\\\s*(.+)*\");\r\n                }\r\n            }\r\n            if (words[Keyword.comment]) {\r\n                let options = Assembler.options(words[Keyword.comment]);\r\n                if (options) {\r\n                    this.keywordRegexes[Keyword.comment] = RegExp(\"^(.*?)(\" + options + \".*)?$\");\r\n                }\r\n            }\r\n            if (words[Keyword.label]) {\r\n                let options = Assembler.options(words[Keyword.label]);\r\n                if (options) {\r\n                    this.keywordRegexes[Keyword.label] = RegExp(\"^(?:([A-Za-z_][A-Za-z0-9_]*)\" + options + \")?\\\\s*(.*)?$\");\r\n                }\r\n            }\r\n            if (words[Keyword.register]) {\r\n                let options = Assembler.options(words[Keyword.register]);\r\n                if (options) {\r\n                    this.keywordRegexes[Keyword.register] = RegExp(options + \"([0-9]+)\");\r\n                }\r\n            }\r\n            this.keywordRegexes[Keyword.numeric] = RegExp(\"(-?(?:0([\" + Assembler.radixList + \"]))?[A-F0-9]+)\");\r\n            if (words[Keyword.charMarker]) {\r\n                let options = Assembler.options(words[Keyword.charMarker]);\r\n                if (options) {\r\n                    let escapable = options.length > 1 ? \"\" : \"\\\\\" + options;\r\n                    //this.keywordRegexes[Keyword.char] = RegExp(options + \"\" + options);\r\n                    this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + escapable + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\r\n                    this.keywordRegexes[Keyword.char] = RegExp(options + '(' + this.generalCharacters + ')' + options);\r\n                }\r\n            }\r\n            else {\r\n                this.generalCharacters = \"(?:(?:\\\\\\\\[\\\\\\\\\" + Assembler.escapedCharacterList + \"])|(?:[\\\\x20-\\\\x5b\\\\x5d-\\\\x7e]))\";\r\n            }\r\n            if (words[Keyword.stringMarker]) {\r\n                let options = Assembler.options(words[Keyword.stringMarker]);\r\n                if (options) {\r\n                    this.keywordRegexes[Keyword.string] = RegExp(options + \"(\" + this.generalCharacters + \"*)\" + options);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"INSTRUCTION SET WARNING: This instruction set doesn't define any keywords.\");\r\n        }\r\n        this.directives = instructionSet.directives;\r\n        this.endianness = (endianness) ? endianness : instructionSet.endianness;\r\n        this.instructionSet = instructionSet;\r\n    }\r\n    //Returns number on success, string on failure\r\n    process(text, type, bits, address, instructionLength) {\r\n        let result = {\r\n            errorMessage: null,\r\n            value: null,\r\n            context: null\r\n        };\r\n        switch (type) {\r\n            case Parameter.register:\r\n                let index = this.instructionSet.abiNames.indexOf(text);\r\n                if (index !== -1) {\r\n                    result.value = index;\r\n                    return result;\r\n                }\r\n                let registerNo = null;\r\n                if (this.keywordRegexes[Keyword.register]) {\r\n                    let match = this.keywordRegexes[Keyword.register].exec(text);\r\n                    if (match !== null) {\r\n                        registerNo = match[1];\r\n                    }\r\n                }\r\n                if (registerNo === null) {\r\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\r\n                    return result;\r\n                }\r\n                registerNo = parseInt(registerNo, 10);\r\n                if ((registerNo & (~0 << bits)) !== 0) {\r\n                    result.errorMessage = `args.registerDoesNotExist(${text})`;\r\n                    return result;\r\n                }\r\n                result.value = registerNo;\r\n                return result;\r\n            case Parameter.offset:\r\n            case Parameter.immediate:\r\n                //Label\r\n                let value = null;\r\n                let reference = this.linesByLabel[text];\r\n                if (reference !== undefined) {\r\n                    result.context = reference[0];\r\n                    if (reference[1] === null) {\r\n                        return result;\r\n                    }\r\n                    value = reference[1];\r\n                }\r\n                if (value === null && this.keywordRegexes[Keyword.char]) {\r\n                    let extraction = RegExp(this.keywordRegexes[Keyword.char]).exec(text);\r\n                    if (extraction !== null && extraction[1] !== undefined) {\r\n                        value = extraction[1].charCodeAt(0);\r\n                        if (value > 255) {\r\n                            result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n                if (value === null && this.keywordRegexes[Keyword.numeric] !== undefined) {\r\n                    let array = RegExp(this.keywordRegexes[Keyword.numeric]).exec(text);\r\n                    if (array !== null) {\r\n                        let radix = Assembler.radixes[array[2]] || 10;\r\n                        let interpretable = array[1];\r\n                        value = parseInt(interpretable, radix);\r\n                    }\r\n                }\r\n                if (value !== null && type === Parameter.offset) {\r\n                    value -= address;\r\n                    if (this.incrementOnFetch) {\r\n                        value -= instructionLength;\r\n                    }\r\n                }\r\n                if (value === null || isNaN(value)) {\r\n                    result.errorMessage = `args.valueUnrecognized(${text})`;\r\n                    return result;\r\n                }\r\n                else if (Utils.rangeCheck(value, bits) === false) {\r\n                    result.errorMessage = `args.outOfRange(${text})`;\r\n                    return result;\r\n                }\r\n                result.value = value;\r\n                return result;\r\n            default:\r\n                result.errorMessage = \"oak.paramUnsupported\";\r\n                return result;\r\n        }\r\n    }\r\n    static options(list) {\r\n        if (list.length === 0) {\r\n            return null;\r\n        }\r\n        let options = \"\";\r\n        for (let i = 0; i < list.length; i++) {\r\n            let keyword = list[i];\r\n            if (keyword === \"\\\\\") {\r\n                console.log(\"INSTRUCTION SET WARNING: '\\\\' used as keyword. This behavior is undefined.\");\r\n                return null;\r\n            }\r\n            if (options === \"\") {\r\n                options = \"(?:\";\r\n            }\r\n            else {\r\n                options += \"|\";\r\n            }\r\n            options += keyword;\r\n        }\r\n        return options + \")\";\r\n    }\r\n    assemble(lines, pass) {\r\n        lines.map(line => line.addressThisPass = null);\r\n        let errors = [];\r\n        let assemblerModeText = true;\r\n        let address = 0;\r\n        for (var i in lines) {\r\n            let line = lines[i];\r\n            switch (pass) {\r\n                case 0: // Zero Pass - Minimum Possible Size\r\n                    assemblerModeText = line.initialProcess(this, assemblerModeText);\r\n                    if (line.invalidReason !== undefined) {\r\n                        errors.push(line);\r\n                    }\r\n                    if (line.label !== undefined) {\r\n                        this.linesByLabel[line.label] = [line, null];\r\n                    }\r\n                    break;\r\n                default:\r\n                    line.addressThisPass = address;\r\n                    let asm = line.assemble(this, lines, address); // Assumption: Instruction cannot become context-sensitive based on size\r\n                    if (asm[0] !== null) {\r\n                        errors.push(line);\r\n                    }\r\n                    if (asm[1]) {\r\n                        return null; // Repass\r\n                    }\r\n                    address += line.machineCode.length;\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n}\r\nAssembler.radixes = {\r\n    'b': 2,\r\n    'o': 8,\r\n    'd': 10,\r\n    'h': 16\r\n};\r\nAssembler.radixList = Object.keys(Assembler.radixes).join(\"\");\r\nAssembler.escapedCharacters = {\r\n    '0': 0,\r\n    't': 9,\r\n    'n': 10,\r\n    'r': 13,\r\n    '\\'': 47,\r\n    '\"': 42\r\n};\r\nAssembler.escapedCharacterList = Object.keys(Assembler.escapedCharacters).join(\"\");\r\n/// <reference path=\"Core.ts\"/>\r\n/// <reference path=\"Assembler.ts\"/>\r\nvar Parameter;\r\n(function (Parameter) {\r\n    Parameter[Parameter[\"immediate\"] = 0] = \"immediate\";\r\n    Parameter[Parameter[\"register\"] = 1] = \"register\";\r\n    Parameter[Parameter[\"condition\"] = 2] = \"condition\";\r\n    Parameter[Parameter[\"offset\"] = 3] = \"offset\";\r\n    Parameter[Parameter[\"special\"] = 4] = \"special\";\r\n    Parameter[Parameter[\"fpImmediate\"] = 5] = \"fpImmediate\";\r\n})(Parameter || (Parameter = {}));\r\n;\r\nvar Endianness;\r\n(function (Endianness) {\r\n    Endianness[Endianness[\"little\"] = 0] = \"little\";\r\n    Endianness[Endianness[\"big\"] = 1] = \"big\";\r\n    Endianness[Endianness[\"bi\"] = 2] = \"bi\";\r\n})(Endianness || (Endianness = {}));\r\n;\r\nvar Keyword;\r\n(function (Keyword) {\r\n    Keyword[Keyword[\"directive\"] = 0] = \"directive\";\r\n    Keyword[Keyword[\"comment\"] = 1] = \"comment\";\r\n    Keyword[Keyword[\"label\"] = 2] = \"label\";\r\n    Keyword[Keyword[\"stringMarker\"] = 3] = \"stringMarker\";\r\n    Keyword[Keyword[\"charMarker\"] = 4] = \"charMarker\";\r\n    Keyword[Keyword[\"register\"] = 5] = \"register\";\r\n    //Only send as keywordRegexes,\r\n    Keyword[Keyword[\"string\"] = 6] = \"string\";\r\n    Keyword[Keyword[\"char\"] = 7] = \"char\";\r\n    Keyword[Keyword[\"numeric\"] = 8] = \"numeric\";\r\n})(Keyword || (Keyword = {}));\r\n;\r\nvar Directive;\r\n(function (Directive) {\r\n    Directive[Directive[\"text\"] = 0] = \"text\";\r\n    Directive[Directive[\"data\"] = 1] = \"data\";\r\n    Directive[Directive[\"string\"] = 2] = \"string\";\r\n    Directive[Directive[\"cString\"] = 3] = \"cString\";\r\n    //Ints and chars,\r\n    Directive[Directive[\"_8bit\"] = 4] = \"_8bit\";\r\n    Directive[Directive[\"_16bit\"] = 5] = \"_16bit\";\r\n    Directive[Directive[\"_32bit\"] = 6] = \"_32bit\";\r\n    Directive[Directive[\"_64bit\"] = 7] = \"_64bit\";\r\n    //Fixed point decimals,\r\n    Directive[Directive[\"fixedPoint\"] = 8] = \"fixedPoint\";\r\n    Directive[Directive[\"floatingPoint\"] = 9] = \"floatingPoint\";\r\n    //Custom,\r\n    Directive[Directive[\"custom\"] = 10] = \"custom\";\r\n})(Directive || (Directive = {}));\r\n;\r\nclass BitRange {\r\n    get end() {\r\n        return this.start + this.bits - 1;\r\n    }\r\n    constructor(field, start, bits, constant = null, signed = false) {\r\n        this.field = field;\r\n        this.start = start;\r\n        this.bits = bits;\r\n        this.constant = constant;\r\n        this.signed = signed;\r\n    }\r\n    limited(totalBits, limitStart = null, limitEnd = null) {\r\n        this.totalBits = totalBits;\r\n        this.limitStart = limitStart;\r\n        this.limitEnd = limitEnd;\r\n        return this;\r\n    }\r\n    parameterized(parameter, parameterType, parameterDefaultValue = null) {\r\n        this.parameter = parameter;\r\n        this.parameterDefaultValue = parameterDefaultValue;\r\n        this.parameterType = parameterType;\r\n        return this;\r\n    }\r\n}\r\n;\r\nclass Format {\r\n    constructor(ranges, regex, disassembly, processSpecialParameter = null, decodeSpecialParameter = null) {\r\n        this.ranges = ranges;\r\n        this.regex = regex;\r\n        this.disassembly = disassembly;\r\n        this.processSpecialParameter = processSpecialParameter;\r\n        this.decodeSpecialParameter = decodeSpecialParameter;\r\n    }\r\n}\r\n;\r\nclass Instruction {\r\n    constructor(mnemonic, format, constants, constValues, executor, signatoryOverride = null, pseudoInstructionFor = []) {\r\n        this.computedBits = null;\r\n        /*\r\n         Mask\r\n         \r\n         It's basically the bits of each format, but with Xs replacing parts that aren't constant in every instruction.\r\n         For example, if an 8-bit ISA defines 5 bits for the register and 3 bits for the opcode, and the opcode for ADD is 101 then the ADD instruction's mask is XXXXX101.\r\n        */\r\n        this.computedMask = null;\r\n        this.computedTemplate = null;\r\n        this.mnemonic = mnemonic;\r\n        this.format = format;\r\n        this.constants = [];\r\n        for (let i in constants) {\r\n            this.constants[constants[i]] = constValues[i];\r\n        }\r\n        this.executor = executor;\r\n        this.signatoryOverride = signatoryOverride;\r\n        this.pseudoInstructionFor = pseudoInstructionFor;\r\n    }\r\n    pad(str, length) {\r\n        let padded = str;\r\n        for (let i = 0; i < length - str.length; i++) {\r\n            padded = \"0\" + padded;\r\n        }\r\n        return padded;\r\n    }\r\n    get bits() {\r\n        if (this.computedBits !== null) {\r\n            return this.computedBits;\r\n        }\r\n        let count = 0;\r\n        for (var i in this.format.ranges) {\r\n            count += this.format.ranges[i].bits;\r\n        }\r\n        this.computedBits = count;\r\n        return this.computedBits;\r\n    }\r\n    get bytes() {\r\n        return Math.ceil(this.bits / 8);\r\n    }\r\n    get mask() {\r\n        if (this.computedMask !== null) {\r\n            return this.computedMask;\r\n        }\r\n        var string = '';\r\n        for (let i = 0; i < this.bits; i += 1) {\r\n            string += 'X';\r\n        }\r\n        for (let i in this.format.ranges) {\r\n            let range = this.format.ranges[i];\r\n            let constant = this.constants[range.field];\r\n            if (constant === null) {\r\n                constant = range.constant;\r\n            }\r\n            if (constant != null) {\r\n                let before = string.substr(0, this.bits - range.end - 1);\r\n                let addition = Utils.pad(constant, range.bits, 2);\r\n                let after = range.start === 0 ? '' : string.substr(-range.start);\r\n                string = before + addition + after;\r\n            }\r\n        }\r\n        this.computedMask = string;\r\n        return this.computedMask;\r\n    }\r\n    ;\r\n    match(machineCode) {\r\n        let machineCodeMutable = machineCode >>> 0;\r\n        let maskBits = this.mask.split(\"\");\r\n        for (let i = this.bits - 1; i >= 0; i--) {\r\n            let bit = (machineCodeMutable & 1);\r\n            machineCodeMutable >>= 1;\r\n            if (maskBits[i] === \"X\") {\r\n                continue;\r\n            }\r\n            if (parseInt(maskBits[i], 10) !== bit) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    get template() {\r\n        if (this.computedTemplate != null) {\r\n            return this.computedTemplate;\r\n        }\r\n        let temp = 0 >>> 0;\r\n        for (let i in this.format.ranges) {\r\n            let range = this.format.ranges[i];\r\n            let constant = this.constants[range.field];\r\n            if (constant === null) {\r\n                constant = range.constant;\r\n            }\r\n            if (constant != null) {\r\n                temp |= (constant << range.start);\r\n            }\r\n        }\r\n        this.computedTemplate = temp;\r\n        return temp;\r\n    }\r\n    ;\r\n}\r\n;\r\nclass PseudoInstruction {\r\n}\r\n;\r\nclass InstructionSet {\r\n    //Return Mnemonic Index (pseudo)\r\n    pseudoMnemonicSearch(mnemonic) {\r\n        return -1;\r\n    } //Worst case = instructions.length\r\n    //Return Mnemonic Index (True)\r\n    mnemonicSearch(mnemonic) {\r\n        for (let i = 0; i < this.instructions.length; i++) {\r\n            if (this.instructions[i].mnemonic === mnemonic) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    } //Worst case = instructions.length\r\n    instructionsPrefixing(line) {\r\n        var result = [];\r\n        for (let i in this.instructions) {\r\n            let instruction = this.instructions[i];\r\n            if (line.toUpperCase().hasPrefix(instruction.mnemonic)) {\r\n                let captures = instruction.format.regex.exec(line);\r\n                if (captures && captures[1].toUpperCase() === instruction.mnemonic) {\r\n                    result.push(instruction);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    disassemble(instruction, args) {\r\n        let output = instruction.format.disassembly;\r\n        output = output.replace(\"@mnem\", instruction.mnemonic);\r\n        for (let i = 0; i < instruction.format.ranges.length; i++) {\r\n            let range = instruction.format.ranges[i];\r\n            let parameter = range.parameter;\r\n            if (parameter != null) {\r\n                output = output.replace(\"@arg\" + range.parameter, (range.parameterType === Parameter.register) ? this.abiNames[args[parameter]] : args[parameter].toString());\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    /*\r\n        InstructionSet initializer\r\n    */\r\n    constructor(bits, formats, instructions, pseudoInstructions, abiNames, keywords, directives, incrementOnFetch, exampleCode) {\r\n        this.bits = bits;\r\n        this.formats = formats;\r\n        this.instructions = instructions;\r\n        instructions.sort((a, b) => a.bytes - b.bytes);\r\n        this.pseudoInstructions = pseudoInstructions;\r\n        this.abiNames = abiNames;\r\n        this.keywords = keywords;\r\n        this.directives = directives;\r\n        this.incrementOnFetch = incrementOnFetch;\r\n        this.exampleCode = exampleCode;\r\n    }\r\n}\r\n;\r\n/// <reference path=\"Memory.ts\"/>\r\n/// <reference path=\"Core.ts\" />\r\nclass VirtualOS {\r\n    constructor() {\r\n        this.continueInputString = (core, val) => {\r\n            let reg = core.virtualOSArgumentVectorStart;\r\n            let arg = core.registerFile.read(reg);\r\n            let array = [];\r\n            for (let i = 0; i < val.length; ++i) {\r\n                array.push(val.charCodeAt(i));\r\n            }\r\n            core.memset(arg, array);\r\n        };\r\n        this.continueInputInt = (core, val) => {\r\n            let reg = core.virtualOSArgumentVectorStart;\r\n            core.registerFile.write(reg, val);\r\n        };\r\n    }\r\n    ecall(core) {\r\n        let service = core.registerFile.read(core.virtualOSServiceRegister);\r\n        const start = core.virtualOSArgumentVectorStart;\r\n        switch (service) {\r\n            case 1: {\r\n                let val = core.registerFile.read(start);\r\n                this.outputInt(val);\r\n                break;\r\n            }\r\n            case 4: {\r\n                let iterator = core.registerFile.read(start);\r\n                let array = [];\r\n                let char = null;\r\n                while ((char = core.memcpy(iterator, 1)[0]) !== 0) {\r\n                    array.push(char);\r\n                    iterator += 1;\r\n                }\r\n                let outStr = array.map(c => String.fromCharCode(c)).join('');\r\n                this.outputString(outStr);\r\n                return null;\r\n            }\r\n            case 5: {\r\n                this.inputInt();\r\n                return \"WAIT\";\r\n            }\r\n            case 8: {\r\n                this.inputString();\r\n                return \"WAIT\";\r\n            }\r\n            case 10:\r\n                this.handleHalt();\r\n                return \"HALT\";\r\n            default:\r\n                return \"UNHANDLED\";\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/// <reference path=\"InstructionSet.ts\"/>\r\n/// <reference path=\"Memory.ts\"/>\r\n/// <reference path=\"VirtualOS.ts\"/>\r\nclass Core {\r\n    //Returns bytes on success, null on failure\r\n    memcpy(address, bytes) {\r\n        if (((address + bytes) >>> 0) > this.memorySize) {\r\n            return null;\r\n        }\r\n        let result = [];\r\n        for (let i = 0; i < bytes; i++) {\r\n            result.push(this.memory[address + i]);\r\n        }\r\n        return result;\r\n    }\r\n    //Returns boolean indicating success\r\n    //Use to store machine code in memory so it can be executed.\r\n    memset(address, bytes) {\r\n        if (address < 0) {\r\n            return false;\r\n        }\r\n        if (address + bytes.length > this.memorySize) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            this.memory[address + i] = bytes[i];\r\n        }\r\n        return true;\r\n    }\r\n    decode() {\r\n        let insts = this.instructionSet.instructions;\r\n        this.decoded = null;\r\n        this.arguments = [];\r\n        for (let i = 0; i < insts.length; i++) {\r\n            if (insts[i].match(this.fetched)) {\r\n                this.decoded = insts[i];\r\n                break;\r\n            }\r\n        }\r\n        if (this.decoded === null) {\r\n            return null;\r\n        }\r\n        let bitRanges = this.decoded.format.ranges;\r\n        for (let i in bitRanges) {\r\n            let range = bitRanges[i];\r\n            if (range.parameter != null) {\r\n                let limit = range.limitStart;\r\n                let value = ((this.fetched >>> range.start) & ((1 << range.bits) - 1)) << limit;\r\n                if (range.parameterType === Parameter.special) {\r\n                    value = this.decoded.format.decodeSpecialParameter(value, this.pc); //Unmangle...\r\n                }\r\n                this.arguments[range.parameter] = this.arguments[range.parameter] || 0;\r\n                this.arguments[range.parameter] = this.arguments[range.parameter] | value;\r\n                if (this.decoded.format.ranges[i].signed && range.parameterType !== Parameter.register) {\r\n                    this.arguments[range.parameter] = Utils.signExt(this.arguments[range.parameter], range.totalBits ? range.totalBits : range.bits);\r\n                }\r\n            }\r\n        }\r\n        return this.instructionSet.disassemble(this.decoded, this.arguments);\r\n    }\r\n    //Returns null on success, error message on error.\r\n    execute() {\r\n        return this.decoded.executor(this);\r\n    }\r\n}\r\n/// <reference path=\"Core.ts\"/>\r\nclass CoreFactory {\r\n    static getCoreList() {\r\n        return Object.keys(this.ISAs);\r\n    }\r\n    static getCore(architecture, memorySize, virtualOS, options) {\r\n        let isa = this.ISAs[architecture];\r\n        if (isa === undefined) {\r\n            throw \"oak.unregisteredISA\";\r\n        }\r\n        for (let key in options) {\r\n            if (isa.options[key] === undefined) {\r\n                throw \"isa.unsupportedOptions\";\r\n            }\r\n        }\r\n        let instructionSet = isa.generator(options);\r\n        return new isa.core(memorySize, virtualOS, instructionSet);\r\n    }\r\n}\r\nCoreFactory.ISAs = {};\r\n/// <reference path=\"../Assembler.ts\" />\r\n/// <reference path=\"../CoreFactory.ts\"/>\r\n//The RISC-V Instruction Set Architecture, Version 2.1\r\nfunction RISCV(options) {\r\n    //Formats and Instructions\r\n    let formats = [];\r\n    let instructions = [];\r\n    let pseudoInstructions = [];\r\n    //R-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"funct7\", 25, 7),\r\n        new BitRange(\"rs2\", 20, 5).parameterized(2, Parameter.register),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let rType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b000, 0b0100000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b001, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b010, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLTU\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b011, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.registerFile.read(core.arguments[2]) >>> 0)) ? 1 : 0);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b100, 0b0000000], function (core) {\r\n        //\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRL\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRA\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b101, 0b0100000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b110, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct3\", \"funct7\"], [0b0110011, 0b111, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    //I-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(2, Parameter.immediate),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let iType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"JALR\", iType, [\"opcode\", \"funct3\"], [0b1100111, 0b000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.pc + 4);\r\n        core.pc = (core.registerFile.read(core.arguments[1]) + Utils.signExt(core.arguments[2], 12));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b010], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b011], function (core) {\r\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\r\n        core.pc += 4;\r\n        return null;\r\n    }, false));\r\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b100], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b110], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\", \"funct3\"], [0b0010011, 0b111], function (core) {\r\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    //IL Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\s*\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\r\n    let ilSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"LB\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b000], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LH\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b001], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LW\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b010], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LBU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b100], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], bytes[0]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LHU\", ilSubtype, [\"opcode\", \"funct3\"], [0b0000011, 0b101], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    // IS Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"funct7\", 25, 7),\r\n        new BitRange(\"shamt\", 20, 5).parameterized(2, Parameter.immediate),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+),\\s*(-?0?[boxd]?[0-9A-F]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let isSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"SLLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b001, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRLI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0000000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRAI\", isSubtype, [\"opcode\", \"funct3\", \"funct7\"], [0b0010011, 0b101, 0b0100000], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    //S-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 25, 7, null, true).parameterized(1, Parameter.immediate).limited(12, 5, 11),\r\n        new BitRange(\"rs2\", 20, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(2, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"imm\", 7, 5, null, true).parameterized(1, Parameter.immediate).limited(12, 0, 4),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*([A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg2(@arg1)\"));\r\n    let sType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"SB\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b000], function (core) {\r\n        let bytes = [];\r\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\r\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\r\n            core.pc += 4;\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    instructions.push(new Instruction(\"SH\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b001], function (core) {\r\n        let bytes = [];\r\n        let value = core.registerFile.read(core.arguments[0]);\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\r\n            core.pc += 4;\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    instructions.push(new Instruction(\"SW\", sType, [\"opcode\", \"funct3\"], [0b0100011, 0b010], function (core) {\r\n        let bytes = [];\r\n        let value = core.registerFile.read(core.arguments[0]);\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\r\n            core.pc += 4;\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    //U-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 12, 20, null, true).parameterized(1, Parameter.immediate),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.offset),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let uType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"LUI\", uType, [\"opcode\"], [0b0110111], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12));\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"AUIPC\", uType, [\"opcode\"], [0b0010111], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 12) + core.pc);\r\n        core.pc += 4;\r\n        return null;\r\n    }));\r\n    //SB-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(2, Parameter.offset).limited(13, 12, 12),\r\n        new BitRange(\"imm\", 25, 6, null, true).parameterized(2, Parameter.offset).limited(13, 5, 10),\r\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"imm\", 8, 4, null, true).parameterized(2, Parameter.offset).limited(13, 1, 4),\r\n        new BitRange(\"imm\", 7, 1, null, true).parameterized(2, Parameter.offset).limited(13, 11, 11),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let sbType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"BEQ\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b000], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BNE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b001], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BLT\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b100], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) < core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BGE\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b101], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) >= core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BLTU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b110], function (core) {\r\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) < (core.registerFile.read(core.arguments[1]) >>> 0)) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BGEU\", sbType, [\"opcode\", \"funct3\"], [0b1100011, 0b111], function (core) {\r\n        if ((core.registerFile.read(core.arguments[0]) >>> 0) >= (core.registerFile.read(core.arguments[1]) >>> 0)) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        else {\r\n            core.pc += 4;\r\n        }\r\n        return null;\r\n    }));\r\n    //UJ-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 31, 1, null, true).parameterized(1, Parameter.offset).limited(21, 20, 20),\r\n        new BitRange(\"imm\", 21, 10, null, true).parameterized(1, Parameter.offset).limited(21, 1, 10),\r\n        new BitRange(\"imm\", 20, 1, null, true).parameterized(1, Parameter.offset).limited(21, 11, 11),\r\n        new BitRange(\"imm\", 12, 8, null, true).parameterized(1, Parameter.offset).limited(21, 12, 19),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let ujType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"JAL\", ujType, [\"opcode\"], [0b1101111], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.pc + 4);\r\n        //console.log(core.pc);\r\n        core.pc += Utils.signExt(core.arguments[1], 21);\r\n        //console.log(core.arguments[1]);\r\n        return null;\r\n    }));\r\n    //System Type\r\n    //All-Const Type\r\n    formats.push(new Format([\r\n        new BitRange(\"const\", 0, 32)\r\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\r\n    let allConstSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"ECALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], (core) => {\r\n        let result = core.virtualOS.ecall(core);\r\n        core.pc += 4;\r\n        return result;\r\n    }));\r\n    //PseudoInstructions\r\n    //This is a far from ideal implementation of pseudoinstructions and is only there for demo purposes.\r\n    //MV\r\n    formats.push(new Format([\r\n        new BitRange(\"funct7\", 25, 7),\r\n        new BitRange(\"rs2\", 20, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rs1\", 15, 5),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let mvPseudo = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct3\", \"rs1\", \"funct7\"], [0b0110011, 0b000, 0b00000, 0b0000000], function (core) {\r\n        return null; //Captured by and\r\n    }, false, [\"ADD\"]));\r\n    //LI\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 20, 12, null, true).parameterized(1, Parameter.immediate),\r\n        new BitRange(\"rs1\", 15, 5),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let liPseudo = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\r\n        return null; //Captured by andi\r\n    }, false, [\"ADDI\"]));\r\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\", \"funct3\", \"rs1\"], [0b0010011, 0b000, 0b00000], function (core) {\r\n        return null; //Captured by andi\r\n    }, false, [\"ADDI\"]));\r\n    //JR pseudo\r\n    formats.push(new Format([\r\n        new BitRange(\"imm\", 20, 12, null, true),\r\n        new BitRange(\"rs1\", 15, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"funct3\", 12, 3),\r\n        new BitRange(\"rd\", 7, 5),\r\n        new BitRange(\"opcode\", 0, 7)\r\n    ], /^\\s*([a-zA-Z]+)\\s*([A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\r\n    let jrPseudo = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"JR\", jrPseudo, [\"opcode\", \"rd\", \"funct3\", \"imm\"], [0b1100111, 0b00000, 0b000, 0b000000000000], function (core) {\r\n        return null; //captured by jalr\r\n    }, false, [\"ADDI\"]));\r\n    //Scall, Syscall both as PseudoInstructions\r\n    instructions.push(new Instruction(\"SCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\r\n        return null; //captured by ecall\r\n    }, false, [\"ECALL\"]));\r\n    instructions.push(new Instruction(\"SYSCALL\", allConstSubtype, [\"const\"], [0b00000000000000000000000001110011], function (core) {\r\n        return null; //captured by ecall\r\n    }, false, [\"ECALL\"]));\r\n    let abiNames = ['zero', 'ra', 'sp', 'gp', 'tp', 't0', 't1', 't2', 's0', 's1', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 's2', 's3', 's4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 't3', 't4', 't5', 't6'];\r\n    let keywords = [];\r\n    keywords[Keyword.directive] = [\"\\\\.\"];\r\n    keywords[Keyword.comment] = [\"#\"];\r\n    keywords[Keyword.label] = [\"\\\\:\"];\r\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\r\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\r\n    keywords[Keyword.register] = [\"x\"];\r\n    let directives = [];\r\n    directives[\"text\"] = Directive.text;\r\n    directives[\"data\"] = Directive.data;\r\n    directives[\"string\"] = Directive.cString;\r\n    directives[\"byte\"] = Directive._8bit;\r\n    directives[\"half\"] = Directive._16bit;\r\n    directives[\"word\"] = Directive._32bit;\r\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, false, `    la a1, str\r\n    li a0, 4 #4 is the string print service number...\r\n    ecall\r\n    li a0, 10 #...and 10 is the program termination service number!\r\n    ecall\r\n.data\r\nstr:    .string \"Hello, World!\"`);\r\n}\r\nclass RISCVRegisterFile {\r\n    print() {\r\n        console.log(\"Registers\\n------\");\r\n        for (let i = 0; i < 32; i++) {\r\n            console.log(\"x\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\r\n        }\r\n        console.log(\"------\");\r\n    }\r\n    read(registerNumber) {\r\n        if (registerNumber === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.physicalFile[registerNumber];\r\n        }\r\n    }\r\n    write(registerNumber, value) {\r\n        this.physicalFile[registerNumber] = value;\r\n        this.modifiedRegisters[registerNumber] = true;\r\n    }\r\n    getRegisterCount() {\r\n        return 32;\r\n    }\r\n    getModifiedRegisters() {\r\n        let modReg = this.modifiedRegisters.slice();\r\n        for (let i = 0; i < this.getRegisterCount(); i++) {\r\n            this.modifiedRegisters[i] = false;\r\n        }\r\n        return modReg;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 32; i++) {\r\n            this.physicalFile[i] = 0;\r\n            this.modifiedRegisters[i] = false;\r\n        }\r\n        this.physicalFile[2] = this.memorySize;\r\n    }\r\n    constructor(memorySize, abiNames) {\r\n        this.physicalFile = [];\r\n        this.modifiedRegisters = [];\r\n        for (let i = 0; i < 32; i++) {\r\n            this.physicalFile.push(0);\r\n            this.modifiedRegisters.push(false);\r\n        }\r\n        this.memorySize = memorySize;\r\n        this.physicalFile[2] = memorySize; //stack pointer\r\n        this.abiNames = abiNames;\r\n    }\r\n}\r\n;\r\nclass RISCVCore extends Core {\r\n    reset() {\r\n        this.pc = 0;\r\n        this.memory = [];\r\n        for (let i = 0; i < this.memorySize; i++) {\r\n            this.memory[i] = 0;\r\n        }\r\n        this.registerFile.reset();\r\n    }\r\n    fetch() {\r\n        if (this.pc < 0) {\r\n            return \"fetch.negativePC\";\r\n        }\r\n        let arr = this.memcpy(this.pc, 4);\r\n        if (arr === null) {\r\n            return \"fetch.invalidMemoryAccess\";\r\n        }\r\n        this.fetched = Utils.catBytes(arr);\r\n        return null;\r\n    }\r\n    constructor(memorySize, virtualOS, instructionSet) {\r\n        super();\r\n        this.virtualOSServiceRegister = 10;\r\n        this.virtualOSArgumentVectorStart = 11;\r\n        this.virtualOSArgumentVectorEnd = 17;\r\n        this.pc = 0 >>> 0;\r\n        this.memorySize = memorySize;\r\n        this.virtualOS = virtualOS;\r\n        this.instructionSet = instructionSet;\r\n        this.registerFile = new RISCVRegisterFile(memorySize, instructionSet.abiNames);\r\n        this.memory = new Array(memorySize);\r\n        for (let i = 0; i < memorySize; i++) {\r\n            this.memory[i] = 0;\r\n        }\r\n    }\r\n}\r\nCoreFactory.ISAs[\"RISCV\"] = {\r\n    generator: RISCV,\r\n    core: RISCVCore,\r\n    options: []\r\n};\r\n/// <reference path=\"../Assembler.ts\" />\r\n//The MIPS Instruction Set Architecture\r\nfunction MIPS(options) {\r\n    //Formats and Instructions\r\n    let formats = [];\r\n    let instructions = [];\r\n    let pseudoInstructions = [];\r\n    //R-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5).parameterized(2, Parameter.register),\r\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"shamt\", 6, 5, 0),\r\n        new BitRange(\"funct\", 0, 6)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let rType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"ADD\", rType, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ADDU\", rType, [\"opcode\", \"funct\"], [0x0, 0x21], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SUB\", rType, [\"opcode\", \"funct\"], [0x0, 0x22], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SUBU\", rType, [\"opcode\", \"funct\"], [0x0, 0x23], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) - core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"AND\", rType, [\"opcode\", \"funct\"], [0x0, 0x24], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) & core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"OR\", rType, [\"opcode\", \"funct\"], [0x0, 0x25], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"NOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x27], function (core) {\r\n        core.registerFile.write(core.arguments[0], ~(core.registerFile.read(core.arguments[1]) | core.registerFile.read(core.arguments[2])));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"XOR\", rType, [\"opcode\", \"funct\"], [0x0, 0x26], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) ^ core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLT\", rType, [\"opcode\", \"funct\"], [0x0, 0x2A], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.registerFile.read(core.arguments[2])) ? 1 : 0);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x04], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRLV\", rType, [\"opcode\", \"funct\"], [0x0, 0x06], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRAV\", rType, [\"opcode\", \"funct\"], [0x0, 0x07], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.registerFile.read(core.arguments[2]));\r\n        return null;\r\n    }));\r\n    //R-Jump Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5, 0),\r\n        new BitRange(\"rd\", 11, 5, 0),\r\n        new BitRange(\"shamt\", 6, 5, 0),\r\n        new BitRange(\"funct\", 0, 6)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0\"));\r\n    let rjSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"JR\", rjSubtype, [\"opcode\", \"funct\"], [0x0, 0x08], function (core) {\r\n        core.pc = core.registerFile.read(core.arguments[0]);\r\n        return null;\r\n    }));\r\n    //R-Shift Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5, 0),\r\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"shamt\", 6, 5).parameterized(2, Parameter.immediate),\r\n        new BitRange(\"funct\", 0, 6)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*([0-9]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let rsSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"SLL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x00], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) << core.arguments[2]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRL\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >>> core.arguments[2]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SRA\", rsSubtype, [\"opcode\", \"funct\"], [0x0, 0x02], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) >> core.arguments[2]);\r\n        return null;\r\n    }));\r\n    //R-Constant Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"funct\", 0, 32)\r\n    ], /^\\s*([a-zA-Z]+)\\s*$/, \"@mnem\"));\r\n    let rcSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"SYSCALL\", rcSubtype, [\"funct\"], [0xC], function (core) {\r\n        return core.virtualOS.ecall(core);\r\n    }));\r\n    //I-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.immediate)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let iType = formats[formats.length - 1];\r\n    //I-type instructions\r\n    instructions.push(new Instruction(\"ADDI\", iType, [\"opcode\"], [0x8], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ADDIU\", iType, [\"opcode\"], [0x9], function (core) {\r\n        core.registerFile.write(core.arguments[0], core.registerFile.read(core.arguments[1]) + core.arguments[2]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLTI\", iType, [\"opcode\"], [0x0A], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) < core.arguments[2]) ? 1 : 0);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SLTIU\", iType, [\"opcode\"], [0x0B], function (core) {\r\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) < (core.arguments[2] >>> 0) ? 1 : 0));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ANDI\", iType, [\"opcode\"], [0x0C], function (core) {\r\n        core.registerFile.write(core.arguments[0], ((core.registerFile.read(core.arguments[1]) >>> 0) & core.arguments[2]));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"ORI\", iType, [\"opcode\"], [0x0D], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) | core.arguments[2]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"XORI\", iType, [\"opcode\"], [0x0E], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.registerFile.read(core.arguments[1]) >>> 0) ^ core.arguments[2]);\r\n        return null;\r\n    }));\r\n    //I-Branch Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(2, Parameter.offset).limited(18, 2, 17)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1, @arg2\"));\r\n    let ibSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"BEQ\", ibSubtype, [\"opcode\"], [0x04], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) === core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"BNE\", ibSubtype, [\"opcode\"], [0x05], function (core) {\r\n        if (core.registerFile.read(core.arguments[0]) !== core.registerFile.read(core.arguments[1])) {\r\n            core.pc += core.arguments[2];\r\n        }\r\n        return null;\r\n    }));\r\n    //I Load Upper Immediate Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5, 0),\r\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.register)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let iluiSubtype = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"LUI\", iluiSubtype, [\"opcode\"], [0x0F], function (core) {\r\n        core.registerFile.write(core.arguments[0], (core.arguments[1] << 16));\r\n        return null;\r\n    }));\r\n    //I Load/Store Subtype\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(2, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?0?[boxd]?[0-9A-F]+)\\(\\s*(\\$[A-Za-z0-9]+)\\s*\\)\\s*$/, \"@mnem @arg0, @arg1(@arg2)\"));\r\n    let ilsSubtype = formats[formats.length - 1];\r\n    //TO-DO: Verify function(core) functionality\r\n    instructions.push(new Instruction(\"LB\", ilsSubtype, [\"opcode\"], [0x20], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.signExt(bytes[0], 8));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LH\", ilsSubtype, [\"opcode\"], [0x21], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.signExt(Utils.catBytes(bytes), 16));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LW\", ilsSubtype, [\"opcode\"], [0x23], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 4);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LBU\", ilsSubtype, [\"opcode\"], [0x24], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 1);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], bytes[0]);\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LHU\", ilsSubtype, [\"opcode\"], [0x25], function (core) {\r\n        let bytes = core.memcpy(core.registerFile.read(core.arguments[2]) + core.arguments[1], 2);\r\n        if (bytes === null) {\r\n            return \"Illegal memory access.\";\r\n        }\r\n        core.registerFile.write(core.arguments[0], Utils.catBytes(bytes));\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"SB\", ilsSubtype, [\"opcode\"], [0x28], function (core) {\r\n        let bytes = [];\r\n        bytes.push(core.registerFile.read(core.arguments[0]) & 255);\r\n        let writeAddress = core.registerFile.read(core.arguments[2]) + core.arguments[1];\r\n        if (core.memset(writeAddress, bytes)) {\r\n            // console.log(\"A0 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$a0\")));\r\n            // console.log(\"T1 \", core.registerFile.read(core.instructionSet.abiNames.indexOf(\"$t1\")));\r\n            // console.log(\"Wrote to \", writeAddress.toString(16));\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    instructions.push(new Instruction(\"SH\", ilsSubtype, [\"opcode\"], [0x29], function (core) {\r\n        let bytes = [];\r\n        let value = core.registerFile.read(core.arguments[0]);\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    instructions.push(new Instruction(\"SW\", ilsSubtype, [\"opcode\"], [0x2B], function (core) {\r\n        let bytes = [];\r\n        let value = core.registerFile.read(core.arguments[0]);\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        value = value >>> 8;\r\n        bytes.push(value & 255);\r\n        if (core.memset(core.registerFile.read(core.arguments[2]) + core.arguments[1], bytes)) {\r\n            return null;\r\n        }\r\n        return \"Illegal memory access.\";\r\n    }));\r\n    //J-Type\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"imm\", 0, 26).parameterized(0, Parameter.special)\r\n    ], /^\\s*([A-Za-z]+)\\s*([A-Za-z0-9_]+)\\s*$/, \"@mnem @arg0\", function (text, type, bits, address, assembler) {\r\n        let result = {\r\n            errorMessage: null,\r\n            context: null,\r\n            value: null\r\n        };\r\n        //Label\r\n        let value = null;\r\n        let reference = assembler.linesByLabel[text];\r\n        if (reference !== undefined) {\r\n            result.context = reference[0];\r\n            if (reference[1] === null) {\r\n                return result;\r\n            }\r\n            value = reference[1];\r\n        }\r\n        if (value === null && assembler.keywordRegexes[Keyword.char]) {\r\n            let extraction = assembler.keywordRegexes[Keyword.char].exec(text);\r\n            if (extraction !== null && extraction[1] !== undefined) {\r\n                value = extraction[1].charCodeAt(0);\r\n                if (value > 255) {\r\n                    result.errorMessage = \"Non-ascii character \" + extraction[1] + \" unsupported.\";\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        if (value === null && assembler.keywordRegexes[Keyword.numeric] !== undefined) {\r\n            let array = assembler.keywordRegexes[Keyword.numeric].exec(text);\r\n            if (array !== null) {\r\n                let radix = Assembler.radixes[array[2]] || 10;\r\n                let interpretable = array[1];\r\n                value = parseInt(interpretable, radix);\r\n            }\r\n        }\r\n        if (value === null || isNaN(value)) {\r\n            result.errorMessage = `args.valueUnrecognized(${text})`;\r\n            return result;\r\n        }\r\n        if ((value >>> 28) === (address >>> 28)) {\r\n            if ((value & 3) === 0) {\r\n                result.value = (value & 0x0ffffffc) >>> 2;\r\n            }\r\n            else {\r\n                result.errorMessage = `mips.wordUnlignedJump(${text})`;\r\n            }\r\n        }\r\n        else {\r\n            result.errorMessage = `args.outOfRange(${text})`;\r\n        }\r\n        return result;\r\n    }, function (value, address) {\r\n        return (value << 2) | (address & 0xf0000000);\r\n    }));\r\n    let jType = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"J\", jType, [\"opcode\"], [0x2], function (core) {\r\n        core.pc = core.arguments[0];\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"JAL\", jType, [\"opcode\"], [0x3], function (core) {\r\n        core.registerFile.write(31, core.pc);\r\n        core.pc = core.arguments[0];\r\n        return null;\r\n    }));\r\n    //Pseudoinstructions\r\n    //MV\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5).parameterized(1, Parameter.register),\r\n        new BitRange(\"rt\", 16, 5, 0),\r\n        new BitRange(\"rd\", 11, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"shamt\", 6, 5, 0),\r\n        new BitRange(\"funct\", 0, 6)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(\\$[A-Za-z0-9]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let mvPseudo = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"MV\", mvPseudo, [\"opcode\", \"funct\"], [0x0, 0x20], function (core) {\r\n        //Captured by ADD\r\n        return null;\r\n    }));\r\n    //LI/LA\r\n    formats.push(new Format([\r\n        new BitRange(\"opcode\", 26, 6),\r\n        new BitRange(\"rs\", 21, 5, 0),\r\n        new BitRange(\"rt\", 16, 5).parameterized(0, Parameter.register),\r\n        new BitRange(\"imm\", 0, 16, null, true).parameterized(1, Parameter.immediate)\r\n    ], /^\\s*([a-zA-Z]+)\\s*(\\$[A-Za-z0-9]+)\\s*,\\s*(-?[a-zA-Z0-9_]+)\\s*$/, \"@mnem @arg0, @arg1\"));\r\n    let liPseudo = formats[formats.length - 1];\r\n    instructions.push(new Instruction(\"LI\", liPseudo, [\"opcode\"], [0x8], function (core) {\r\n        //Captured by ADDI\r\n        return null;\r\n    }));\r\n    instructions.push(new Instruction(\"LA\", liPseudo, [\"opcode\"], [0x8], function (core) {\r\n        //Captured by ADDI\r\n        return null;\r\n    }));\r\n    let keywords = [];\r\n    keywords[Keyword.directive] = [\"\\\\.\"];\r\n    keywords[Keyword.comment] = [\"#\"];\r\n    keywords[Keyword.label] = [\"\\\\:\"];\r\n    keywords[Keyword.stringMarker] = [\"\\\\\\\"\"];\r\n    keywords[Keyword.charMarker] = [\"\\\\'\"];\r\n    keywords[Keyword.register] = [\"x\"];\r\n    let directives = [];\r\n    directives[\"text\"] = Directive.text;\r\n    directives[\"data\"] = Directive.data;\r\n    directives[\"asciiz\"] = Directive.cString;\r\n    directives[\"byte\"] = Directive._8bit;\r\n    directives[\"half\"] = Directive._16bit;\r\n    directives[\"word\"] = Directive._32bit;\r\n    let abiNames = [\"$zero\", \"$at\", \"$v0\", \"$v1\", \"$a0\", \"$a1\", \"$a2\", \"$a3\", \"$t0\", \"$t1\", \"$t2\", \"$t3\", \"$t4\", \"$t5\", \"$t6\", \"$t7\", \"$s0\", \"$s1\", \"$s2\", \"$s3\", \"$s4\", \"$s5\", \"$s6\", \"$s7\", \"$t8\", \"$t9\", \"$k0\", \"$k1\", \"$gp\", \"$sp\", \"$fp\", \"$ra\"];\r\n    return new InstructionSet(32, formats, instructions, pseudoInstructions, abiNames, keywords, directives, true, `    la $a0, str\r\n    li $v0, 4 #4 is the string print service number...\r\n    syscall\r\n    li $v0, 10 #...and 10 is the program termination service number!\r\n    syscall\r\n.data\r\nstr:    .asciiz \"Hello, World!\"`);\r\n}\r\nclass MIPSRegisterFile {\r\n    print() {\r\n        console.log(\"Registers\\n------\");\r\n        for (let i = 0; i < 32; i++) {\r\n            console.log(\"$\" + i.toString(), this.abiNames[i], this.physicalFile[i].toString(), (this.physicalFile[i] >>> 0).toString(16).toUpperCase());\r\n        }\r\n        console.log(\"------\");\r\n    }\r\n    read(registerNumber) {\r\n        if (registerNumber === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.physicalFile[registerNumber];\r\n        }\r\n    }\r\n    write(registerNumber, value) {\r\n        this.physicalFile[registerNumber] = value;\r\n        this.modifiedRegisters[registerNumber] = true;\r\n    }\r\n    getRegisterCount() {\r\n        return 32;\r\n    }\r\n    getModifiedRegisters() {\r\n        let modReg = this.modifiedRegisters.slice();\r\n        for (let i = 0; i < this.getRegisterCount(); i++) {\r\n            this.modifiedRegisters[i] = false;\r\n        }\r\n        return modReg;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 32; i++) {\r\n            this.physicalFile[i] = 0;\r\n            this.modifiedRegisters[i] = false;\r\n        }\r\n        this.physicalFile[29] = this.memorySize;\r\n    }\r\n    constructor(memorySize, abiNames) {\r\n        this.physicalFile = [];\r\n        this.modifiedRegisters = [];\r\n        for (let i = 0; i < 32; i++) {\r\n            this.physicalFile.push(0);\r\n            this.modifiedRegisters.push(false);\r\n        }\r\n        this.memorySize = memorySize;\r\n        this.physicalFile[29] = memorySize; //stack pointer\r\n        this.abiNames = abiNames;\r\n    }\r\n}\r\n;\r\nclass MIPSCore extends Core {\r\n    reset() {\r\n        this.pc = 0;\r\n        this.memory = [];\r\n        for (let i = 0; i < this.memorySize; i++) {\r\n            this.memory[i] = 0;\r\n        }\r\n        this.registerFile.reset();\r\n    }\r\n    fetch() {\r\n        let arr = this.memcpy(this.pc, 4);\r\n        if (arr === null) {\r\n            return \"fetch.illegalMemoryAddress\";\r\n        }\r\n        this.pc += 4;\r\n        this.fetched = Utils.catBytes(arr);\r\n        return null;\r\n    }\r\n    constructor(memorySize, virtualOS, instructionSet) {\r\n        super();\r\n        this.virtualOSServiceRegister = 2;\r\n        this.virtualOSArgumentVectorStart = 4;\r\n        this.virtualOSArgumentVectorEnd = 7;\r\n        this.instructionSet = instructionSet;\r\n        this.pc = 0 >>> 0;\r\n        this.memorySize = memorySize;\r\n        this.virtualOS = virtualOS;\r\n        this.registerFile = new MIPSRegisterFile(memorySize, instructionSet.abiNames);\r\n        this.memory = new Array(memorySize);\r\n        for (let i = 0; i < memorySize; i++) {\r\n            this.memory[i] = 0;\r\n        }\r\n    }\r\n}\r\nCoreFactory.ISAs[\"MIPS\"] = {\r\n    generator: MIPS,\r\n    core: MIPSCore,\r\n    options: []\r\n};\r\n/// <reference path=\"CoreFactory.ts\"/>\r\n/// <reference path=\"ISAs/RISCV.ts\" />\r\n/// <reference path=\"ISAs/MIPS.ts\" />\r\n\nexport default {\r\n    VirtualOS: VirtualOS,\r\n    Endianness: Endianness,\r\n    Assembler: Assembler,\r\n    Line: Line,\r\n    CoreFactory: CoreFactory\r\n};","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { setHelpVisible } from \"../actions\"\r\n\r\nclass Help extends Component {\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.props.setHelpVisible(false);\r\n    };\r\n\r\n    handleStopClose = (event) => {\r\n        event.stopPropagation();\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"help\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\r\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\r\n                    <h2><Translate id=\"help.title\" /></h2>\r\n                    <div className=\"overlay_contents\">\r\n                        <Translate id=\"help.data\" options={{ renderInnerHtml: true }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        visible: state.panel_visibility.help\r\n    };\r\n};\r\n\r\nconst dispatchToProps = (dispatch, ownProps) => ({\r\n    setHelpVisible: (visible) => dispatch(setHelpVisible(visible))\r\n});\r\n\r\nexport default withLocalize(\r\n    connect(stateToProps,\r\n            dispatchToProps\r\n    )(Help));","export default {\r\n    core: [\r\n        {\r\n            \"pic\": \"donn.jpg\",\r\n            \"name\": \"Mohamed \\\"Donn\\\" Gaber\",\r\n            \"job\": \"Primary ISA/ISS Developer\",\r\n            \"link\": \"https://donn.github.io/\",\r\n            \"desc\": \"\"\r\n        },\r\n        {\r\n            \"pic\": \"karimio.jpg\",\r\n            \"name\": \"Karim Abdel Hamid\",\r\n            \"job\": \"Primary Front-End/IDE Developer\",\r\n            \"link\": \"https://karimio.github.io/\",\r\n            \"desc\": \"I'm a game and web developer that loves to write stories, play guitar, and paint.\"\r\n        }\r\n    ],\r\n    additional: [\r\n        {\r\n            \"pic\": \"ali_khaled.jpg\",\r\n            \"name\": \"Ali Khaled\",\r\n            \"job\": \"MIPS co-developer\",\r\n            \"link\": \"https://github.com/loshya\",\r\n            \"desc\": \"\"\r\n        }\r\n    ],\r\n    translators: []\r\n};","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { setAboutVisible } from \"../actions\"\r\nimport devs from \"../developer_list.js\"\r\n\r\nclass About extends Component {\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.props.setAboutVisible(false);\r\n    };\r\n\r\n    handleStopClose = (event) => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    printdev = (arr) => {\r\n        return arr.map((element, i) => {\r\n            return <a key={i} href={element.link}>\r\n                <img src={`images/about/${element.pic}`} />\r\n                <h4>{element.name}</h4>\r\n                <span>{element.job}</span>\r\n                <p>{element.desc}</p>\r\n            </a>;\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"about\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\r\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\r\n                    <h2><Translate id=\"about.title\" /></h2>\r\n                    <div className=\"overlay_contents\">\r\n                        <div className=\"devlist\">\r\n                            <h3><Translate id=\"about.core_devs\" /></h3>\r\n                            {\r\n                                this.printdev(devs.core)\r\n                            }\r\n                        </div>\r\n                        <div className=\"devlist\">\r\n                            <h3><Translate id=\"about.additional_devs\" /></h3>\r\n                            {\r\n                                this.printdev(devs.additional)\r\n                            }\r\n                        </div>\r\n                        {devs.translators.length > 0  && <div className=\"translatorlist\">\r\n                            <h3><Translate id=\"about.translators\" /></h3>\r\n                            {\r\n                                devs.translators.map((element, i) => {\r\n                                    return <a key={i} href={element.link}>\r\n                                        <h4>{element.name}</h4>\r\n                                        <span>{element.lang}</span>\r\n                                    </a>;\r\n                                })\r\n                            }\r\n                        </div>}\r\n                        <div className=\"about_auc\">\r\n                            <img src=\"images/about/auc.png\" />\r\n                            <p>\r\n                                <Translate id=\"about.auc\" options={{ renderInnerHtml: true }} />\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"button\" onClick={this.handleClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        visible: state.panel_visibility.about\r\n    };\r\n};\r\n\r\nconst dispatchToProps = (dispatch, ownProps) => ({\r\n    setAboutVisible: (visible) => dispatch(setAboutVisible(visible))\r\n});\r\n\r\nexport default withLocalize(\r\n    connect(stateToProps,\r\n            dispatchToProps\r\n    )(About));","import React, { Component } from 'react'\r\n\r\nexport default class HotkeyInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            capturing: false,\r\n            combo: \"a_110\",\r\n            shift: true,\r\n            alt: true,\r\n            ctrl: true,\r\n            key_name: \"n\"\r\n        }\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        this.setState({capturing: true});\r\n\t\twindow.addEventListener(\"keydown\", this.handleKey);\r\n    }\r\n\r\n    handleKey = (event) => {\r\n        if (this.state.capturing) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            let key = event.key.toLowerCase();\r\n            if (key === \"control\" || key === \"shift\" || key === \"alt\")\r\n                return false;\r\n\r\n            this.setState({\r\n                shift: event.shiftKey,\r\n                ctrl: event.ctrlKey,\r\n                alt: event.altKey,\r\n                key_name: key,\r\n                capturing: false\r\n            });\r\n\r\n            window.removeEventListener(\"keydown\", this.handleKey);\r\n            this.props.save();\r\n        }\r\n    }\r\n\r\n    testKey = (key_ctrl, key_alt, key_shift, key_name) => {\r\n        return (key_shift === this.state.shift &&\r\n            key_alt=== this.state.alt &&\r\n            key_ctrl === this.state.ctrl &&\r\n            key_name === this.state.key_name);\r\n    }\r\n\r\n    setKey = (key_ctrl, key_alt, key_shift, key_name, done = () => {}) => {\r\n        this.setState({\r\n            ctrl: key_ctrl,\r\n            alt: key_alt,\r\n            shift: key_shift,\r\n            key_name: key_name\r\n        }, done);\r\n    }\r\n\r\n    getKey = () => {\r\n        let key = \"_\" + this.state.key_name;\r\n        if (this.state.shift)\r\n            key = \"s\" + key;\r\n            \r\n        if (this.state.alt)\r\n            key = \"a\" + key;\r\n        \r\n        if (this.state.ctrl)\r\n            key = \"c\" + key;\r\n\r\n        return key;\r\n    }\r\n\r\n    setKeyStr = (str) => {\r\n        let upos = str.indexOf(\"_\");\r\n        let mods = str.substr(0, upos);\r\n\r\n\t\tlet shift = (mods.indexOf(\"s\")!==-1);\r\n\t\tlet alt = (mods.indexOf(\"a\")!==-1);\r\n\t\tlet ctrl = (mods.indexOf(\"c\")!==-1);\r\n        let key = str.substr(upos + 1);\r\n        \r\n        this.setKey(ctrl, alt, shift, key);\r\n    }\r\n    \r\n    render() {\r\n        let c = !this.state.capturing;\r\n        return (<div className={`key_bar${this.state.capturing ? \" capturing\" : \"\"}`} onClick={this.handleClick} tabIndex={0}>\r\n                    {!c && <span>Capturing</span>}\r\n                    {c && this.state.ctrl && <span>Ctrl</span>}\r\n                    {c && this.state.alt && <span>Alt</span>}\r\n                    {c && this.state.shift && <span>Shift</span>}\r\n                    {c && <span>{this.state.key_name}</span>}\r\n                </div>);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport HotkeyInput from '../modules/hotkey.js'\r\nimport Select from '../modules/select'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { setSettingsVisible } from \"../actions\"\r\n\r\nconst themes = [\r\n    \"theme_light\",\r\n    \"theme_dark\",\r\n    \"theme_dos\",\r\n    \"theme_apple2\"\r\n];\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            default_isa: \"RISC-V\",\r\n            theme: \"theme_light\",\r\n            use_cookies: false\r\n        };\r\n        \r\n\t\twindow.addEventListener(\"keydown\", this.handleKey);\r\n\r\n        for (let i = 1; i < themes.length; ++i)\r\n            document.getElementById(themes[i]).disabled = true;\r\n\r\n\t\tthis.comp_new = React.createRef();\r\n\t\tthis.comp_load = React.createRef();\r\n\t\tthis.comp_save = React.createRef();\r\n\t\tthis.comp_assemble = React.createRef();\r\n\t\tthis.comp_sim = React.createRef();\r\n        this.comp_step = React.createRef();\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.props.setSettingsVisible(false);\r\n    };\r\n\r\n    handleStopClose = (event) => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleKey = (event) => {\r\n        if (this.props.canhandleinput) {\r\n            let key_name = event.key.toLowerCase();\r\n            if (key_name === \"control\" || key_name === \"shift\" || key_name === \"alt\")\r\n                return false;\r\n\r\n            let key_ctrl = event.ctrlKey;\r\n            let key_alt = event.altKey;\r\n            let key_shift = event.shiftKey;\r\n            let cancel = false;\r\n\r\n            let hotkey = [\r\n                this.comp_new.current,\r\n                this.comp_load.current,\r\n                this.comp_save.current,\r\n                this.comp_assemble.current,\r\n                this.comp_step.current,\r\n                this.comp_sim.current\r\n            ];\r\n\r\n            let hotkeyfns = [\r\n                this.props.fn_new,\r\n                this.props.fn_load,\r\n                this.props.fn_save,\r\n                this.props.fn_ass,\r\n                this.props.fn_step,\r\n                this.props.fn_sim\r\n            ];\r\n\r\n            for (let i = 0; i < hotkey.length; ++i) {\r\n                if (hotkey[i].testKey(key_ctrl, key_alt, key_shift, key_name)) {\r\n                    hotkeyfns[i]();\r\n                    cancel = true;\r\n                }\r\n            }\r\n\r\n            if (cancel) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n\r\n    setDefaults = (done = () => {}) => {\r\n        this.comp_new.current.setKey(false, true, false, \"n\", () => {\r\n            this.comp_load.current.setKey(true, false, false, \"o\", () => {\r\n                this.comp_save.current.setKey(true, false, false, \"s\", () => {\r\n                    this.comp_assemble.current.setKey(false, true, false, \"f5\", () => {\r\n                        this.comp_sim.current.setKey(false, true, false, \"f7\", () => {\r\n                            this.comp_step.current.setKey(false, true, false, \"f6\", () => {\r\n                                this.setTheme(\"theme_light\", done);\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    setDefaultsSave = () => {\r\n        this.setDefaults(this.saveSettings);\r\n    }\r\n\r\n    /*function getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }*/\r\n    \r\n    saveSettings = () => {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (30*24*60*60*1000));\r\n        var expires = d.toUTCString();\r\n        let exp = \"; expires=\" + expires + \"; path=/\";\r\n        \r\n        document.cookie = \"ojs_hotkey_new=\" + this.comp_new.current.getKey() + exp;\r\n        document.cookie = \"ojs_hotkey_load=\" + this.comp_load.current.getKey() + exp;\r\n        document.cookie = \"ojs_hotkey_save=\" + this.comp_save.current.getKey() + exp;\r\n        document.cookie = \"ojs_hotkey_ass=\" + this.comp_assemble.current.getKey() + exp;\r\n        document.cookie = \"ojs_hotkey_sim=\" + this.comp_sim.current.getKey() + exp;\r\n        document.cookie = \"ojs_hotkey_step=\" + this.comp_step.current.getKey() + exp;\r\n        document.cookie = \"ojs_theme=\" + this.state.theme + exp;\r\n    }\r\n\r\n    setTheme = (val, continuefn = () => {}) => {\r\n        if (!themes.includes(val)) {\r\n            val = themes[0];\r\n        }\r\n\r\n        themes.forEach(function(element) {\r\n            document.getElementById(element).disabled = (element !== val);\r\n        });\r\n\r\n        this.setState({theme: val}, continuefn);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let has_cookies = false;\r\n\r\n        let ca = document.cookie.split(\"; \");\r\n\r\n        let i = 0;\r\n        for (; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            \r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            \r\n            let eq = c.indexOf(\"=\");\r\n            let str = c.substr(0, eq);\r\n            let val = c.substr(eq+1);\r\n            if (str === \"ojs_hotkey_new\") {\r\n                this.comp_new.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_hotkey_load\") {\r\n                this.comp_load.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_hotkey_save\") {\r\n                this.comp_save.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_hotkey_ass\") {\r\n                this.comp_assemble.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_hotkey_sim\") {\r\n                this.comp_sim.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_hotkey_step\") {\r\n                this.comp_step.current.setKeyStr(val);\r\n                has_cookies = true;\r\n            }\r\n            else if (str === \"ojs_theme\") {\r\n                this.setTheme(val);\r\n                has_cookies = true;\r\n            }\r\n        }\r\n\r\n        if (has_cookies) {\r\n            this.setState({use_cookies: true});\r\n        }\r\n    }\r\n\r\n    handleISA = (event) => {\r\n        this.setState({default_isa: event.target.value});\r\n    };\r\n\r\n    handleTheme = (event) => {\r\n        this.setTheme(event.target.value, this.saveSettings);\r\n    };\r\n\r\n    acceptCookies = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({use_cookies: true});\r\n        this.setDefaultsSave();\r\n    }\r\n\r\n    deleteAllCookies = () => {\r\n        var cookies = document.cookie.split(\"; \");\r\n\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i];\r\n            var eqPos = cookie.indexOf(\"=\");\r\n            var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n            let startojs = name.substr(0, 3);\r\n            if (startojs === \"ojs\")\r\n                document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n        \r\n        }\r\n\r\n        this.setState({use_cookies: false});\r\n        this.setDefaults();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"settings\" onClick={this.handleClose} className={`settings_overlay overlay fader${this.props.visible ? \" fader_shown\" : \"\"}`}>\r\n                <div className=\"settings_container\" onClick={this.handleStopClose}>\r\n                    <h2>Settings</h2>\r\n                    {!this.state.use_cookies && \r\n                        <div className=\"cookie_screen\">\r\n                            <h3>Cookies</h3>\r\n                            <p>In order to set your own settings, you need to enable cookies. Cookies are the way websites store data for individual users. We store your cookies directly in the browser, and only store the options stored here.</p>\r\n                            <button onClick={this.acceptCookies} className=\"button\">Accept Cookies, Show Settings</button>\r\n                            <button onClick={this.handleClose} className=\"button subbutton\">Close Window</button>\r\n                        </div>\r\n                    }\r\n                    <div style={{display: (this.state.use_cookies ? \"block\" : \"none\"), position: \"relative\"}}>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td colSpan={2}>General Settings</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/*<tr>\r\n                                    <td colSpan={2}>\r\n                                        <Select onChange={this.handleISA} icon=\"/images/icons/input_type.svg\" placeholder=\"Default ISA\" value={this.state.default_isa}>\r\n                                            <option>RISC-V</option>\r\n                                            <option>MIPS</option>\r\n                                        </Select>\r\n                                    </td>\r\n                                </tr>*/}\r\n                                <tr>\r\n                                    <td colSpan={2}>\r\n                                        <Select onChange={this.handleTheme} icon=\"images/icons/input_type.svg\" placeholder=\"Theme\" value={this.state.theme}>\r\n                                            <option value=\"theme_light\">Light</option>\r\n                                            <option value=\"theme_dark\">Dark</option>\r\n                                            <option value=\"theme_dos\">DOS</option>\r\n                                            <option value=\"theme_apple2\">Apple ][</option>\r\n                                        </Select>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td colSpan={2}>Hotkeys</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>New Tab</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_new} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Save Tab</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_save} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Load</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_load} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Assemble</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_assemble} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Step-By-Step</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_step} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Simulate</td>\r\n                                    <td>\r\n                                        <HotkeyInput ref={this.comp_sim} save={this.saveSettings} />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <button className=\"button\" onClick={this.handleClose}>Accept Changes</button>\r\n                        <button className=\"button subbutton\" onClick={this.setDefaultsSave}>Restore Defaults</button>\r\n                        <button className=\"button subbutton\" onClick={this.deleteAllCookies}>Delete Cookies</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n    return {\r\n        visible: state.panel_visibility.settings\r\n    };\r\n};\r\n\r\nconst dispatchToProps = (dispatch, ownProps) => ({\r\n    setSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\r\n});\r\n\r\nexport default withLocalize(\r\n    connect(stateToProps,\r\n            dispatchToProps\r\n    )(Settings));","import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input_group\">\r\n                <input onChange={this.props.onChange} value={this.props.value} style={{backgroundImage: `url(${this.props.icon})`}} type={this.props.type} placeholder={this.props.placeholder} />\r\n                <label className=\"group_label\">{this.props.placeholder}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Input from '../modules/input'\r\nimport Select from '../modules/select'\r\nimport OakJS from '../backend.js';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { setProjectSettings } from \"../actions\"\r\n\r\nclass PanelSettings extends Component {\r\n    static display_name = \"settings\";\r\n\r\n    handleFileName = (event) => {\r\n        this.props.setProjectSettings(event.target.value, this.props.project_settings.memory_size, this.props.project_settings.isa);\r\n    }\r\n\r\n    handleISA = (event) => {\r\n        this.props.setProjectSettings(this.props.project_settings.file_name, this.props.project_settings.memory_size, event.target.value);\r\n    }\r\n\r\n    handleMemorySize = (event) => {\r\n        const re = /^[0-9\\b]+$/;\r\n    \r\n        if (event.target.value === '' || re.test(event.target.value)) {\r\n            this.props.setProjectSettings(this.props.project_settings.file_name, event.target.value, this.props.project_settings.isa);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitChanges();\r\n    };\r\n\r\n    render() {\r\n        let isas = OakJS.CoreFactory.getCoreList();\r\n        \r\n        return (\r\n            <div id=\"panel_settings\" className=\"panel panel_settings\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Input onChange={this.handleFileName} value={this.props.project_settings.file_name} icon=\"images/icons/input_name.svg\" placeholder=\"File Name\" id=\"filename\" />\r\n                    <Select onChange={this.handleISA} value={this.props.project_settings.isa} icon=\"images/icons/input_code.svg\" placeholder=\"Instruction Set\" >\r\n                        {isas.map((isa, i) => {\r\n                            return <option key={isa} value={isa}>{isa}</option>\r\n                        })}\r\n                    </Select>\r\n                    <Input onChange={this.handleMemorySize} value={this.props.project_settings.memory_size} icon=\"images/icons/input_memory.svg\" placeholder=\"Memory Size (Bytes)\" type=\"number\" />\r\n\r\n                    <input className=\"button\" value=\"Accept Changes\" type=\"submit\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst appStateToProps = state => {\r\n\treturn {\r\n        tabs: state.tabs,\r\n        selectedtab: state.selectedtab,\r\n\t\tproject_settings: state.project_settings\r\n\t};\r\n};\r\n\r\nconst appDispatchToProps = (dispatch, ownProps) => ({\r\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i))\r\n})\r\n\r\nexport default withLocalize(\r\n\tconnect(appStateToProps,\r\n\t\t\tappDispatchToProps\r\n\t)(PanelSettings));","import React, { Component } from 'react'\r\nimport Input from '../modules/input'\r\nimport Select from '../modules/select'\r\nimport {padNumber, parseToFloat, encodeFloat} from './numberttransform'\r\n\r\nexport default class PanelConversion extends Component {\r\n    static display_name = \"conversion\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: 0,\r\n            input_type: 0,\r\n            output_type: 0,\r\n            output: \"\",\r\n            has_value: false\r\n        };\r\n    }\r\n\r\n    calculateOutput = (val, in_type, out_type) => {\r\n        let input = val;\r\n        switch(in_type) {\r\n            case 0: // Hex\r\n                input = parseInt(input, 16);\r\n                break;\r\n            default:\r\n            case 1: // uint\r\n            case 2: // int\r\n                input = parseInt(input, 10);\r\n                break;\r\n            case 3: // bin\r\n                input = parseInt(input, 2);\r\n                break;\r\n            case 4: // float\r\n                input = encodeFloat(input);\r\n                break;\r\n        }\r\n    \r\n        if (input.toString() === \"NaN\")\r\n            return \"\";\r\n    \r\n        let output;\r\n        switch(out_type) {\r\n            case 0: // Hex\r\n                output = \"0x\"+padNumber((input >>> 0).toString(16), 8);\r\n                break;\r\n            case 1: // uint\r\n                output = (input >>> 0).toString(10);\r\n                break;\r\n            default:\r\n            case 2: // int\r\n                output = input.toString(10);\r\n                if (output > 2147483648) { output = output - 4294967296 }\r\n                break;\r\n            case 3: // bin\r\n                output = \"0b\"+padNumber((input >>> 0).toString(2), 32);\r\n                break;\r\n            case 4: // float\r\n                output = parseToFloat(input);\r\n                break;\r\n        }\r\n        \r\n        return output;\r\n    };\r\n\r\n    onChangeInput = (event) => {\r\n        let val = event.target.value;\r\n        let in_type = this.state.input_type;\r\n        let out_type = this.state.output_type;\r\n        let out = this.calculateOutput(val, in_type, out_type);\r\n        this.setState({input: val, has_value: (val !== \"\"), output: out});\r\n    };\r\n\r\n    onChangeInputType = (event) => {\r\n        let val = this.state.input;\r\n        let in_type = parseInt(event.target.value, 10);\r\n        let out_type = this.state.output_type;\r\n        let out = this.calculateOutput(val, in_type, out_type);\r\n        this.setState({input: val, input_type: in_type, has_value: (val !== \"\"), output: out});\r\n    };\r\n\r\n    onChangeOutputType = (event) => {\r\n        let val = this.state.input;\r\n        let in_type = this.state.input_type;\r\n        let out_type = parseInt(event.target.value, 10);\r\n        let out = this.calculateOutput(val, in_type, out_type);\r\n        this.setState({input: val, output_type: out_type, has_value: (val !== \"\"), output: out});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"panel_conversion\" className=\"panel panel_conversion\">\r\n                <Input onChange={this.onChangeInput} icon=\"images/icons/input_in.svg\" placeholder=\"Input\" type=\"text\" />\r\n                <Select onChange={this.onChangeInputType} icon=\"images/icons/input_type.svg\" placeholder=\"Input Type\">\r\n                    <option value=\"0\">Hex</option>\r\n                    <option value=\"1\">Integer</option>\r\n                    <option value=\"3\">Binary</option>\r\n                    {/*<option value=\"4\">Float</option>*/}\r\n                </Select>\r\n                <hr />\r\n                <Select onChange={this.onChangeOutputType} icon=\"images/icons/input_type.svg\" placeholder=\"Output Type\">\r\n                    <option value=\"0\">Hex</option>\r\n                    <option value=\"1\">Unsigned Integer</option>\r\n                    <option value=\"2\">Signed Integer</option>\r\n                    <option value=\"3\">Binary</option>\r\n                    {/*<option value=\"4\">Float</option>*/}\r\n                </Select>\r\n                <span className=\"conversion_output\">\r\n                    {this.state.output !==\"\" ? this.state.output : \"<Output>\"}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Select from '../modules/select'\r\nimport {padNumber, parseToFloat} from './numberttransform'\r\nimport { connect } from 'react-redux';\r\n\r\nconst REGISTER_UNASSIGNED = 0;\r\nconst REGISTER_ASSIGNED = 1;\r\nconst REGISTER_NEWASSIGNED = 2;\r\n\r\nclass PanelRegisters extends Component {\r\n    static display_name = \"registers\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register_type: 0,\r\n        }\r\n    }\r\n\r\n    handleType = (event) => {\r\n        this.setState({register_type: parseInt(event.target.value, 10)});\r\n    };\r\n\r\n    translateRegister = (input) => {\r\n        switch(this.state.register_type) {\r\n            case 0: // Hex\r\n                return \"0x\"+padNumber((input >>> 0).toString(16), 8);\r\n            case 1: // uint\r\n                return (input >>> 0).toString(10);\r\n            default:\r\n            case 2: // int\r\n                let output = input.toString(10);\r\n                if (output > 2147483648) { output = output - 4294967296 }\r\n                return output;\r\n            case 3: // bin\r\n                return \"0b\"+padNumber((input >>> 0).toString(2), 32);\r\n            case 4: // float\r\n                return output = parseToFloat(input);\r\n        }\r\n    };\r\n\r\n    getChangedRegisterClass = (val) => {\r\n        switch(val) {\r\n            default:\r\n            case REGISTER_UNASSIGNED:\r\n                return \"reg_normal\";\r\n            case REGISTER_ASSIGNED:\r\n                return \"reg_assigned\";\r\n            case REGISTER_NEWASSIGNED:\r\n                return \"reg_new\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let tab = this.props.tabs[this.props.selectedtab];\r\n        if (!(tab && tab.core))\r\n            return <div></div>;\r\n\r\n        let core = tab.core;\r\n        let registers = core.registerFile.physicalFile;\r\n        let register_changed = tab.register_changed;\r\n        let register_names = core.registerFile.abiNames;\r\n\r\n        return (\r\n            <div id=\"panel_registers\" className=\"panel panel_registers\">\r\n                <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\r\n                    <option value=\"0\">Hex</option>\r\n                    <option value=\"1\">Unsigned Integer</option>\r\n                    <option value=\"2\">Signed Integer</option>\r\n                    <option value=\"3\">Binary</option>\r\n                    <option value=\"4\">Float</option>\r\n                </Select>\r\n                <table cellSpacing=\"0\" cellPadding=\"0\">\r\n                    <thead>\r\n                        <tr><th>Reg</th><th>Value</th></tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            registers.map((register, i) => {\r\n                                let register_dpy = this.translateRegister(register);\r\n                                return (<tr key={i} className={this.getChangedRegisterClass(register_changed[i])}>\r\n                                    <td>\r\n                                        {register_names[i]}\r\n                                    </td>\r\n                                    <td data-info={register}>\r\n                                        {register_dpy}\r\n                                    </td>\r\n                                </tr>);\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n        tabs: state.tabs,\r\n        selectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nexport default connect(stateToProps)(PanelRegisters);","import React, { Component } from 'react'\r\nimport Select from '../modules/select'\r\nimport {padNumber} from './numberttransform'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass PanelMachineCode extends Component {\r\n    static display_name = \"machine code\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register_type: 0,\r\n        }\r\n    }\r\n\r\n    handleType = (event) => {\r\n        this.setState({register_type: parseInt(event.target.value, 10)});\r\n    };\r\n\r\n    translateRegister = (input) => {\r\n        switch(this.state.register_type) {\r\n            default:\r\n            case 0: // Hex\r\n                return padNumber((input >>> 0).toString(16), 2);\r\n            case 1: // uint\r\n                return padNumber((input >>> 0).toString(10), 3);\r\n            case 2: // octal\r\n                return padNumber((input >>> 0).toString(8), 3);\r\n            case 3: // bin\r\n                return padNumber((input >>> 0).toString(2), 8);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let tabs = this.props.tabs;\r\n        if (tabs.length === 0)\r\n            return <div></div>;\r\n            \r\n        let machinecode = tabs[this.props.selectedtab].machine_code;\r\n        let empty = machinecode.length === 0;\r\n        return (\r\n            <div id=\"panel_machine_code\" className=\"panel panel_machine_code\">\r\n                {empty && <span className=\"panel_empty\">Machine Code Empty</span>}\r\n                {!empty && <Select onChange={this.handleType} icon=\"images/icons/input_type.svg\" placeholder=\"Display Type\" defaultValue=\"0\">\r\n                    <option value=\"0\">Hex</option>\r\n                    <option value=\"1\">Decimal</option>\r\n                    <option value=\"2\">Octal</option>\r\n                    <option value=\"3\">Binary</option>\r\n                </Select>}\r\n                \r\n                {!empty && machinecode.map((byte, i) => {\r\n                    let val = this.translateRegister(byte);\r\n                    return <span key={i}>{val} </span>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProps = state => {\r\n\treturn {\r\n        tabs: state.tabs,\r\n        selectedtab: state.selectedtab\r\n\t};\r\n};\r\n\r\nexport default connect(stateToProps)(PanelMachineCode);","import React, { Component } from 'react';\r\nimport TextEditor from \"./sections/texteditor.js\";\r\nimport Navigation from \"./sections/navigation.js\";\r\nimport PanelContainer from \"./sections/panelcontainer.js\";\r\nimport PanelMemory from \"./sections/panelmemory.js\";\r\nimport PanelConsole from \"./sections/panelconsole.js\";\r\nimport PanelLog from \"./sections/panellog.js\";\r\nimport Help from './sections/help';\r\nimport About from './sections/about';\r\nimport Settings from './sections/settings';\r\nimport PanelSettings from './sections/panelsettings';\r\nimport PanelConversion from './sections/panelconversion';\r\nimport PanelRegisters from './sections/panelregisters';\r\n//import CoreContext from './coreContext';\r\nimport PanelMachineCode from './sections/panelmachinecode';\r\nimport OakJS from './backend.js';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Translate, withLocalize } from \"react-localize-redux\";\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport enTranslations from \"./translations/en.json\";\r\n\r\nimport { selectTab, addTab, updateTab, setProjectSettings, setSettingsVisible, setHelpVisible, setAboutVisible } from \"./actions\"\r\n\r\nconst SimulatingStatus = {\r\n\tStopped:\t0,\r\n\tStep:\t\t1,\r\n\tPlay:\t\t2\r\n};\r\n\r\nconst REGISTER_UNASSIGNED = 0;\r\nconst REGISTER_ASSIGNED = 1;\r\nconst REGISTER_NEWASSIGNED = 2;\r\n\r\nconst CONSOLE_INPUT_NONE= 0;\r\nconst CONSOLE_INPUT_NUM = 1;\r\nconst CONSOLE_INPUT_STR = 2;\r\n\r\nconst MessageType = {\r\n\tLog: 0,\r\n\tInput: 1,\r\n\tOutput: 2,\r\n\tSuccess: 3,\r\n\tWarning: 4,\r\n\tError: 5,\r\n};\r\n\r\nclass App extends Component {\r\n\tvirtual_os;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.props.initialize({\r\n\t\t\tlanguages: [\r\n\t\t\t  { name: \"English\", code: \"en\" }\r\n\t\t\t],\r\n\t\t\toptions: { renderToStaticMarkup }\r\n\t\t});\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tpanel_x: 256,\r\n\t\t\tpanel_y: 256\r\n\t\t};\r\n\t\t\r\n\t\tthis.component_input = React.createRef();\r\n\r\n\t\twindow.addEventListener(\"keyup\", this.handleKeyPress);\r\n\t\t\r\n\t\tthis.props.addTranslationForLanguage(enTranslations, 'en');\r\n\r\n\t\tthis.virtual_os = new OakJS.VirtualOS(); // The virtual OS handles ecalls. It takes a bunch of callbacks: output Int, output String, etcetera...\r\n\t\tthis.virtual_os.inputInt = () => {\r\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\r\n\t\t\tif (tab) {\r\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_NUM;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.virtual_os.inputString = () => {\r\n\t\t\tlet tab = this.props.tabs[this.props.selectedtab];\r\n\t\t\tif (tab) {\r\n\t\t\t\ttab.console_input_type = CONSOLE_INPUT_STR;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tthis.virtual_os.outputInt = (number) => {\r\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + number);\r\n\t\t};\r\n\r\n\t\tthis.virtual_os.outputString = (string) => {\r\n\t\t\tthis.addConsoleMessage(MessageType.Output, \">> \" + string);\r\n\t\t};\r\n\r\n\t\tthis.virtual_os.handleHalt = () => {\r\n\t\t\tlet current_tab = this.props.selectedtab;\r\n\t\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\t\tif (!tab)\r\n\t\t\t\treturn;\r\n\r\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\t\r\n\t\t\tthis.addConsoleMessage(MessageType.Success, \" == SIMULATION COMPLETED == \");\r\n\r\n\t\t\tthis.props.updateTab(current_tab, tab);\r\n\t\t};\r\n\t\t\r\n\t\tthis.addTabDefault();\r\n\t}\r\n\r\n\thandleKeyPress = (event) => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tif (tab && tab.console_input_type !== CONSOLE_INPUT_NONE) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet input = tab.console_input;\r\n\t\t\tlet cursor = tab.cursor_pos;\r\n\r\n\t\t\tif (event.key === \"Enter\") {\r\n\t\t\t\tthis.continueAfterConsole(input);\r\n\t\t\t\ttab.console_input = \"\";\r\n\t\t\t}\r\n\t\t\telse if (event.which === 8) {\r\n\t\t\t\tif (cursor > 0) {\r\n\t\t\t\t\tlet val = input.slice(0, cursor - 1) + input.slice(cursor);\r\n\t\t\t\t\t\r\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\r\n\t\t\t\t\ttab.console_input = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (event.keyCode === 46) {\r\n\t\t\t\tif (cursor < input.length) {\r\n\t\t\t\t\tlet val = input.slice(0, cursor) + input.slice(cursor + 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\ttab.cursor_pos = cursor - 1;\r\n\t\t\t\t\ttab.console_input = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (event.keyCode === 37) {\r\n\t\t\t\tcursor = (cursor <= 0) ? 0 : cursor - 1;\r\n\t\t\t\ttab.cursor_pos = cursor;\r\n\t\t\t}\r\n\t\t\telse if (event.keyCode === 39) {\r\n\t\t\t\tlet l = tab.console_input.length;\r\n\t\t\t\tcursor = (cursor >= l) ? l : cursor + 1;\r\n\t\t\t\ttab.cursor_pos = l;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet out = event.key;\r\n\t\t\t\t\r\n\t\t\t\tconst keycode = event.keyCode;\r\n\t\t\t\tconst isNum = tab.console_input_type === CONSOLE_INPUT_NUM;\r\n\t\t\t\t\r\n\t\t\t\tvar valid = \r\n\t\t\t\t(keycode > 47 && keycode < 58)   || // number keys\r\n\t\t\t\t(!isNum && (keycode === 32 || keycode === 13   || // spacebar & return key(s) (if you want to allow carriage returns)\r\n\t\t\t\t(keycode > 64 && keycode < 91)   || // letter keys\r\n\t\t\t\t(keycode > 95 && keycode < 112)  || // numpad keys\r\n\t\t\t\t(keycode > 185 && keycode < 193) || // ;=,-./` (in order)\r\n\t\t\t\t(keycode > 218 && keycode < 223)));\r\n\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tout = input.slice(0, cursor) + out + input.slice(cursor);\r\n\t\t\t\t\ttab.console_input = out;\r\n\t\t\t\t\ttab.cursor_pos =  cursor + 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.updateTab(current_tab, tab);\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\taddConsoleMessage = (msg_type, data) => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tabs = this.props.tabs;\r\n\t\tlet tab = tabs[current_tab];\r\n\t\t\r\n\t\tlet className;\r\n\t\tif (msg_type === MessageType.Error)\r\n\t\t\tclassName = \"console_error\";\r\n\t\telse if (msg_type === MessageType.Warning)\r\n\t\t\tclassName = \"console_warning\";\r\n\t\telse if (msg_type === MessageType.Success)\r\n\t\t\tclassName = \"console_success\";\r\n\t\telse if (msg_type === MessageType.Output)\r\n\t\t\tclassName = \"console_output\";\r\n\t\telse if (msg_type === MessageType.Input)\r\n\t\t\tclassName = \"console_input\";\r\n\t\telse\r\n\t\t\tclassName = \"console_log\";\r\n\t\t\r\n\t\ttab.console.push(<div className={className}>{data}</div>);\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\r\n\tcontinueAfterConsole = (input) => {\r\n\t\tlet selected = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[selected];\r\n\r\n\t\tlet core = tab.core;\r\n\r\n\t\tif (tab.console_input_type === CONSOLE_INPUT_NUM) {\r\n\t\t\tinput = parseInt(input, 10);\r\n\t\t\tthis.virtual_os.continueInputInt(core, input);\r\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\r\n\t\t} else if (tab.console_input_type === CONSOLE_INPUT_STR) {\r\n\t\t\tthis.virtual_os.continueInputString(core, input);\r\n\t\t\tthis.addConsoleMessage(MessageType.Log, \"<< \" + input);\r\n\t\t}\r\n\r\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\r\n\r\n\t\tthis.checkUpdatedTabs();\r\n\t\tthis.props.updateTab(selected, tab);\r\n\t}\r\n\r\n\tcheckUpdatedTabs = () => {\r\n\t\tlet tab = this.props.tabs[this.props.selectedtab];\r\n\r\n\t\tvar mod_reg = tab.core.registerFile.getModifiedRegisters();\r\n\t\t\r\n\t\tfor(let i = 0; i < tab.register_changed.length; ++i) {\r\n\t\t\tif (mod_reg[i])\r\n\t\t\t\ttab.register_changed[i] = REGISTER_NEWASSIGNED;\r\n\t\t\telse if (tab.register_changed[i] ===  REGISTER_NEWASSIGNED)\r\n\t\t\t\ttab.register_changed[i] = REGISTER_ASSIGNED;\r\n\t\t}\r\n\t}\r\n\r\n\taddTabFull = (name, code, machine_code, mem_size, isa, get_example_code) => {\r\n\t\tlet selected = this.props.tabs.length;\r\n\t\t\r\n\t\tlet core = OakJS.CoreFactory.getCore(isa, mem_size, this.virtual_os, []);\r\n\r\n\t\tlet new_tab = {\r\n\t\t\tname: name,\r\n\t\t\tcontent: get_example_code ? core.instructionSet.exampleCode : code,\r\n\t\t\tlog: [],\r\n\t\t\tconsole: [],\r\n\t\t\tmachine_code: machine_code,\r\n\t\t\tcore: core,\r\n\t\t\tregister_changed: [],\r\n\t\t\trunningStatus: SimulatingStatus.Stopped, \r\n\t\t\tinstruction_set: isa,\r\n\t\t\tconsole_input: \"\",\r\n\t\t\tconsole_input_type: CONSOLE_INPUT_NONE,\r\n\t\t\tcursor_pos: 0\r\n\t\t};\r\n\r\n\t\tnew_tab.register_changed = Array.from({ length: core.registerFile.physicalFile.length }, () => REGISTER_UNASSIGNED);\r\n\t\t\r\n\t\t// TODO: Send to Project Settings\r\n\t\tthis.props.setProjectSettings(name, mem_size, isa);\r\n\t\t\r\n\t\tthis.props.addTab(new_tab);\r\n\t\tthis.props.selectTab(selected);\r\n\t}\r\n\r\n\taddTab = (name, code, machine_code) => {\r\n\t\tthis.addTabFull(name, code, machine_code, 4096, this.getDefaultISA(), false);\r\n\t}\r\n\r\n\taddTabDefault = () => {\r\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, this.getDefaultISA(), true);\r\n\t}\r\n\r\n\taddTabDefaultRISCV = () => {\r\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"RISCV\", true);\r\n\t}\r\n\r\n\taddTabDefaultMIPS = () => {\r\n\t\tthis.addTabFull(\"New Tab\", \"\", [], 4096, \"MIPS\", true);\r\n\t}\r\n\r\n\tgetDefaultISA = () => {\r\n\t\treturn OakJS.CoreFactory.getCoreList()[0];\r\n\t}\r\n\r\n\thandleUpload = (event) => {\r\n\t\tlet files = this.component_input.current.files;\r\n\t\tif (files.length <= 0) return;\r\n\r\n\t\tlet file = files[0];\r\n\t\tif (this.is_upload_bin) {\r\n\t\t\tlet name = file.name;\r\n\t\t\tlet blob = file.slice(0, file.size);\r\n\t\t\tlet fr = new FileReader();\r\n\t\t\tlet me = this;\r\n\t\t\tfr.addEventListener(\"load\", function ()\r\n\t\t\t{\r\n\t\t\t\tvar bytes = new Uint8Array(this.result);\r\n\t\t\t\tme.addTab(name, \"\", Array.from(bytes));\r\n\t\t\t});\r\n\t\t\tfr.readAsArrayBuffer(blob);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet name = file.name;\r\n\t\t\tlet blob = file.slice(0, file.size);\r\n\t\t\tlet fr = new FileReader();\r\n\t\t\tlet me = this;\r\n\t\t\tfr.addEventListener(\"load\", function ()\r\n\t\t\t{\r\n\t\t\t\tlet res = this.result;\r\n\t\t\t\t\r\n\t\t\t\tme.addTab(name, res, []);\r\n\t\t\t});\r\n\t\t\tfr.readAsText(blob);\r\n\t\t}\r\n\t}\r\n\r\n\thandleLoadAsm = () => {\r\n\t\tthis.is_upload_bin = false;\r\n\t\tthis.component_input.current.click();\r\n\t}\r\n\r\n\thandleLoadBin = () => {\r\n\t\tthis.is_upload_bin = true;\r\n\t\tthis.component_input.current.click();\r\n\t}\r\n\r\n\thandleDownloadAsm = () => {\r\n\t\tconst current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tvar data = tab.content;\r\n\t\tif (data.length === 0)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tvar el = document.createElement(\"a\");\r\n\t\tvar blob = new Blob([data],\r\n\t\t{\r\n\t\t\ttype: \"text/plain\"\r\n\t\t});\r\n\t\tvar blobLink = URL.createObjectURL(blob);\r\n\t\tvar name = tab.name + \".s\";\r\n\t\tel.setAttribute(\"href\", blobLink);\r\n\t\tel.setAttribute(\"download\", name);\r\n\t\tel.style.display = \"none\";\r\n\t\tdocument.body.appendChild(el);\r\n\t\tel.click();\r\n\t\tdocument.body.removeChild(el);\r\n\t}\r\n\t\r\n\tdownloadBin = () => {\r\n\t\tconst current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tvar data = tab.machine_code;\r\n\t\tvar byteArray = new Uint8Array(data);\r\n\t\tvar blob = new Blob([byteArray],\r\n\t\t{\r\n\t\t\ttype: \"application/octet-stream\"\r\n\t\t});\r\n\t\tvar blobLink = URL.createObjectURL(blob);\r\n\t\tvar element = document.createElement(\"a\");\r\n\t\tvar name = tab.name + \".bin\";\r\n\t\telement.setAttribute(\"href\", blobLink);\r\n\t\telement.setAttribute(\"download\", name);\r\n\t\telement.style.display = \"none\";\r\n\t\tdocument.body.appendChild(element);\r\n\t\telement.click();\r\n\t\tdocument.body.removeChild(element);\r\n\t}\r\n\t\r\n\tdownloadRam = () =>{\r\n\t\tconst current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tvar data = tab.core.memory;\r\n\t\tvar byteArray = new Uint8Array(data);\r\n\t\tvar blob = new Blob([byteArray],\r\n\t\t{\r\n\t\t\ttype: \"application/octet-stream\"\r\n\t\t});\r\n\t\tvar blobLink = URL.createObjectURL(blob);\r\n\t\tvar element = document.createElement(\"a\");\r\n\t\tvar name = tab.name + \".ram\";\r\n\t\telement.setAttribute(\"href\", blobLink);\r\n\t\telement.setAttribute(\"download\", name);\r\n\t\telement.style.display = \"none\";\r\n\t\tdocument.body.appendChild(element);\r\n\t\telement.click();\r\n\t\tdocument.body.removeChild(element)\r\n\t}\r\n\r\n\tresetUI = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tabs = this.props.tabs;\r\n\t\tlet tab = tabs[current_tab];\r\n\t\ttab.log = [];\r\n\t\ttab.console = [];\r\n\t\ttab.register_changed = Array.from({ length: tab.register_changed.length }, () => REGISTER_UNASSIGNED);\r\n\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\r\n\t\ttab.console_input = \"\";\r\n\t\ttab.console_input_type = CONSOLE_INPUT_NONE;\r\n\t\ttab.cursor_pos = 0;\r\n\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\r\n\treset = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tabs = this.props.tabs;\r\n\t\tlet tab = tabs[current_tab];\r\n\r\n\t\ttab.core.reset();\r\n\t\tthis.resetUI();\r\n\t}\r\n\r\n\tuiSimulate = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\r\n\t\t\treturn;\r\n\r\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\r\n\t\t\tthis.uiAssemble();\r\n\r\n\t\tlet core =  tab.core;\r\n\r\n\t\ttab.runningStatus = SimulatingStatus.Play;\r\n\r\n\t\twhile (true) {\r\n\t\t\tlet fetch = core.fetch();\r\n\t\t\tif (fetch !== null) {\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\r\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\r\n\t\t\t\r\n\t\t\tif (decode === null) {\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, \"decode.failure\");\r\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttab.log.push(decode);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tlet execute = core.execute();\r\n\t\t\tif (execute !== null) {\r\n\t\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\r\n\t\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\r\n\t\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.checkUpdatedTabs();\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\r\n\tuiStepByStep = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tif (tab.console_input_type !== CONSOLE_INPUT_NONE)\r\n\t\t\treturn;\r\n\r\n\t\tif (tab.runningStatus === SimulatingStatus.Stopped)\r\n\t\t\tthis.uiAssemble();\r\n\r\n\t\tlet core = tab.core;\r\n\r\n\t\ttab.runningStatus = SimulatingStatus.Step;\r\n\r\n\t\tlet fetch = core.fetch();\r\n\t\tif (fetch !== null) {\r\n\t\t\tthis.addConsoleMessage(MessageType.Error, fetch);\r\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\tthis.props.updateTab(current_tab, tab);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\tlet decode = core.decode(); // Decode has the decoded instruction on success\r\n\t\t\r\n\t\tif (decode === null) {\r\n\t\t\tthis.addConsoleMessage(MessageType.Error, \"decode.failure\");\r\n\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\tthis.props.updateTab(current_tab, tab);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttab.log.push(decode);\r\n\t\t}\r\n\t\r\n\t\tlet execute = core.execute();\r\n\t\tif (execute !== null) {\r\n\t\t\tif (execute !== 'HALT' && execute !== 'WAIT') { // If HALT, then an environment call has been executed.\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, execute);\r\n\t\t\t\ttab.runningStatus = SimulatingStatus.Stopped;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.checkUpdatedTabs();\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\t\r\n\tuiAssemble = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\t\tvar val = tab.content;\r\n\t\tif (val === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar core = tab.core;\r\n\t\tthis.reset();\r\n\t\tlet assembler = new OakJS.Assembler(core.instructionSet, OakJS.Endianness.little);\r\n\t\t\r\n\t\tlet lines = OakJS.Line.arrayFromFile(val);\r\n\t\t\r\n\t\tlet passZero = assembler.assemble(lines, 0); // Assembler Pass 0. Returns Line array with errored lines, which are in line.invalidReason\r\n\t\tif (passZero.length !== 0) {\r\n\t\t\tfor (let i in passZero) {\r\n\t\t\t\tlet line = passZero[i];\r\n\t\t\t\tconsole.log(line.number, line.invalidReason);\r\n\t\t\t\treturn;\r\n\t\t\t\t//process.exit(65);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet pass = null;\r\n\t\tlet passCounter = 1;\r\n\t\tdo { // Subsequent assembler passes. Typically one pass is needed, but when there's a lot of variance in ISA word sizes, another pass might be needed.\r\n\t\t\tpass = assembler.assemble(lines, passCounter);\r\n\t\t\tif (pass.length !== 0) {\r\n\t\t\t\tfor (let i in passZero) {\r\n\t\t\t\t\tlet line = passZero[i];\r\n\t\t\t\t\tconsole.log(line.number, line.invalidReason);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t//process.exit(65);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpassCounter += 1;\r\n\t\t} while (pass === null);\r\n\r\n\t\tlet machineCode = lines.map(line=> line.machineCode).reduce((a, b)=> a.concat(b), []); // Get machine code from lines\r\n\t\tcore.memset(0, machineCode); // memset\r\n\r\n\t\tthis.checkUpdatedTabs();\r\n\r\n\t\tlet error = false; //output.errorMessage===null;\r\n\t\tif (!error) {\r\n\t\t\ttab.machine_code = machineCode;\r\n\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete:</b> Assembly succeeded.</span>);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error:</b> Assembler failed.</span>);\r\n\t\t}\r\n\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\t}\r\n\r\n\thandleSettingsChange = () => {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tif (!tab)\r\n\t\t\treturn;\r\n\r\n\t\tlet file_name = this.props.project_settings.file_name;\r\n\t\tlet isa_type = this.props.project_settings.isa;\r\n\t\tlet memory_size = this.props.project_settings.memory_size;\r\n\r\n\t\ttab.name = file_name;\r\n\r\n\t\tlet diff_isa = isa_type !== tab.instruction_set;\r\n\t\tlet diff_mem = memory_size !== tab.core.memorySize;\r\n\r\n\t\tlet new_isa_found = false;\r\n\r\n\t\tif (diff_isa || diff_mem) {\r\n\t\t\tlet instruction_sets = OakJS.CoreFactory.ISAs;\r\n\t\t\tif (instruction_sets[isa_type]) {\r\n\t\t\t\tnew_isa_found = true;\r\n\t\t\t\ttab.core = OakJS.CoreFactory.getCore(isa_type, memory_size, this.virtual_os, []);\r\n\t\t\t\ttab.instruction_set = isa_type;\r\n\t\t\t\tthis.resetUI();\r\n\t\t\t}\r\n\r\n\t\t\tif (!new_isa_found) {\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Error, <span><b>Error: </b>Could not find ISA {isa_type}.</span>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.props.updateTab(current_tab, tab);\r\n\r\n\t\tif (new_isa_found) {\r\n\t\t\tif (diff_isa)\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed ISA to {isa_type}.</span>);\r\n\r\n\t\t\tif (diff_mem)\r\n\t\t\t\tthis.addConsoleMessage(MessageType.Success, <span><b>Complete: </b>Successfully changed memory size to {memory_size}.</span>);\r\n\t\t}\r\n\t}\r\n\r\n\thandleStartDragX = (event) => {\r\n\t\twindow.addEventListener(\"mousemove\", this.handleDragX);\r\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragX);\r\n\t}\r\n\r\n\thandleX = (event) => {\r\n\t\tlet x = event.pageX;\r\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\t\tx = w - x;\r\n\r\n\t\tif (x < 200) {\r\n\t\t\tx = 200;\r\n\t\t}\r\n\t\telse if (x > w - 200) {\r\n\t\t\tx = w - 200;\r\n\t\t}\r\n\r\n\t\tthis.setState({panel_x: x});\r\n\t}\r\n\r\n\thandleX = (event) => {\r\n\t\tlet x = event.pageX;\r\n\t\tlet w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\t\tx = w - x;\r\n\r\n\t\tif (x < 150) {\r\n\t\t\tx = 150;\r\n\t\t}\r\n\t\telse if (x > w - 200) {\r\n\t\t\tx = w - 200;\r\n\t\t}\r\n\r\n\t\tthis.setState({panel_x: x});\r\n\t}\r\n\r\n\thandleY = (event) => {\r\n\t\tlet y = event.pageY + 20;\r\n\t\tlet h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\t\ty =  h - y;\r\n\t\t\r\n\t\tif (y < 50) {\r\n\t\t\ty = 50;\r\n\t\t}\r\n\t\telse if (y > h - 50) {\r\n\t\t\ty = h - 50;\r\n\t\t}\r\n\r\n\t\tthis.setState({panel_y: y});\r\n\t}\r\n\r\n\thandleDragX = (event) => {\r\n\t\tthis.handleX(event);\r\n\t}\r\n\r\n\thandleStopDragX = (event) => {\r\n\t\tthis.handleX(event);\r\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragX);\r\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragX);\r\n\t}\r\n\r\n\thandleStartDragY = (event) => {\r\n\t\twindow.addEventListener(\"mousemove\", this.handleDragY);\r\n\t\twindow.addEventListener(\"mouseup\", this.handleStopDragY);\r\n\t}\r\n\r\n\thandleDragY = (event) => {\r\n\t\tthis.handleY(event);\r\n\t}\r\n\r\n\thandleStopDragY = (event) => {\r\n\t\tthis.handleY(event);\r\n\t\twindow.removeEventListener(\"mousemove\", this.handleDragY);\r\n\t\twindow.removeEventListener(\"mouseup\", this.handleStopDragY);\r\n\t}\r\n\r\n\tshowSettings = () => {\r\n\t\tthis.props.setSettingsVisible(true);\r\n\t}\r\n\r\n\tshowHelp = () => {\r\n\t\tthis.props.setHelpVisible(true);\r\n\t}\r\n\r\n\tshowAbout =  () => {\r\n\t\talert(1);\r\n\t\tthis.props.setAboutVisible(true);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet current_tab = this.props.selectedtab;\r\n\t\tlet tab = this.props.tabs[current_tab];\r\n\r\n\t\tlet has_tabs = this.props.tabs.length > 0;\r\n\t\tlet show_input = false;\r\n\t\t\r\n\t\tif (tab)\r\n\t\t\tshow_input = tab.console_input_type !== CONSOLE_INPUT_NONE;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<About />\r\n\t\t\t\t<Help />\r\n\t\t\t\t<Settings\r\n\t\t\t\t\tcanhandleinput={!show_input}\r\n\t\t\t\t\tfn_new={this.addTabDefault}\r\n\t\t\t\t\tfn_load={this.handleLoadAsm}\r\n\t\t\t\t\tfn_save={this.handleDownloadAsm}\r\n\t\t\t\t\tfn_ass={this.uiAssemble}\r\n\t\t\t\t\tfn_sim={this.uiSimulate}\r\n\t\t\t\t\tfn_step={this.uiStepByStep} />\r\n\t\t\t\t<Navigation assemble={this.uiAssemble} simulate={this.uiSimulate} stepbystep={this.uiStepByStep} downloadRam={this.downloadRam} downloadBin={this.downloadBin} handleAddTabRiscv={this.addTabDefaultRISCV} handleAddTabMips={this.addTabDefaultMIPS} handleLoadAsm={this.handleLoadAsm} handleLoadBin={this.handleLoadBin} handleDownloadAsm={this.handleDownloadAsm} />\r\n\t\t\t\t{!has_tabs && <div className=\"no_tabs\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2><Translate id=\"welcome.title\">Welcome to Oak.js</Translate></h2>\r\n\t\t\t\t\t\t<p><Translate id=\"welcome.subtitle\">Oak.js is an online javascript IDE, Assembler, Disassembler, and Simulator for assembly languages such as RISC-V and MIPS.</Translate></p>\r\n\t\t\t\t\t\t<button className=\"button\" onClick={this.addTabDefault}><Translate id=\"menus.add_tab\">Add a Tab</Translate></button>\r\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadAsm}><Translate id=\"menus.load_assembly\">Load Assembly</Translate></button>\r\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleLoadBin}><Translate id=\"menus.load_binary\">Load Binary</Translate></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{has_tabs && <div className=\"grid\" style={{gridTemplateColumns: `auto ${this.state.panel_x}px`, gridTemplateRows: `auto calc(${this.state.panel_y}px)`}}>\r\n\t\t\t\t\t<TextEditor is_disabled={show_input} addTab={this.addTabDefault} />\r\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragY} className=\"panel_bottom\">\r\n\t\t\t\t\t\t<PanelConsole show_input={show_input} input={tab.console_input} />\r\n\t\t\t\t\t\t<PanelMachineCode />\r\n\t\t\t\t\t\t<PanelMemory />\r\n\t\t\t\t\t\t<PanelLog />\r\n\t\t\t\t\t</PanelContainer>\r\n\t\t\t\t\t<PanelContainer handleStartDrag={this.handleStartDragX} className=\"panel_side\">\r\n\t\t\t\t\t\t<PanelSettings submitChanges={this.handleSettingsChange} />\r\n\t\t\t\t\t\t<PanelRegisters />\r\n\t\t\t\t\t\t<PanelConversion />\r\n\t\t\t\t\t</PanelContainer>\r\n\t\t\t\t</div>}\r\n\t\t\t\t<input type=\"file\" onChange={this.handleUpload} ref={this.component_input} />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst appStateToProps = state => {\r\n\treturn {\r\n\t\ttabs: state.tabs,\r\n\t\tselectedtab: state.selectedtab,\r\n\t\tproject_settings: state.project_settings\r\n\t};\r\n};\r\n\r\nconst appDispatchToProps = (dispatch, ownProps) => ({\r\n\taddTab: (tab) => dispatch(addTab(tab)),\r\n\tupdateTab: (index, tab) => dispatch(updateTab(index, tab)),\r\n\tselectTab: (id) => dispatch(selectTab(id)),\r\n\tsetProjectSettings: (n, s, i) => dispatch(setProjectSettings(n, s, i)),\r\n\tsetHelpVisible: (visible) => dispatch(setHelpVisible(visible)),\r\n\tsetAboutVisible: (visible) => dispatch(setAboutVisible(visible)),\r\n\tsetSettingsVisible: (visible) => dispatch(setSettingsVisible(visible))\r\n});\r\n\r\nexport default withLocalize(\r\n\tconnect(appStateToProps,\r\n\t\t\tappDispatchToProps\r\n\t)(App));","const tabReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TAB':\r\n            return [\r\n                ...state,\r\n                action.tab\r\n            ];\r\n        case 'UPDATE_TAB': {\r\n            return state.map((t, index) => {\r\n                if (index === action.index) {\r\n                    return Object.assign({}, t, action.tab);\r\n                }\r\n              \r\n              return t;\r\n            });\r\n        }\r\n        case 'DELETE_TAB':\r\n            return [\r\n                ...state.slice(0, action.id),\r\n                ...state.slice(action.id + 1)\r\n            ];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default tabReducer;","const selectedTabReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SELECT_TAB':\r\n            return action.id;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default selectedTabReducer;","const globalSettingsReducer = (state = {}, action) => {\r\n    return state;\r\n}\r\n  \r\nexport default globalSettingsReducer;","const projectSettingsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_PROJECT_SETTINGS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default projectSettingsReducer;","const selectedTabReducer = (state = {\r\n    settings: false,\r\n    help: false\r\n}, action) => {\r\n    switch (action.type) {\r\n        case 'SET_HELP_VISIBLE':\r\n            return {\r\n                ...state,\r\n                help: action.state\r\n            };\r\n        case 'SET_ABOUT_VISIBLE':\r\n            return {\r\n                ...state,\r\n                about: action.state\r\n            };\r\n        case 'SET_SETTINGS_VISIBLE':\r\n            return {\r\n                ...state,\r\n                settings: action.state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n  \r\nexport default selectedTabReducer;","import { combineReducers } from 'redux';\r\nimport tabs from './tab';\r\nimport selectedtab from './selectedtab';\r\nimport global_settings from './globalsettings';\r\nimport project_settings from './projectsettings';\r\nimport panel_visibility from './setvisibility';\r\nimport { localizeReducer } from \"react-localize-redux\";\r\n\r\nexport default combineReducers({\r\n    tabs,\r\n    selectedtab,\r\n    global_settings,\r\n    project_settings,\r\n    panel_visibility,\r\n    localize: localizeReducer\r\n});","// React Imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// App Imports\r\nimport App from './app';\r\n\r\n// Redux Store Imports\r\nimport allReducers from './reducers'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { LocalizeProvider } from 'react-localize-redux';\r\n\r\n// Create a store...\r\nconst store = createStore(\r\n    // ... with the list of all reducers\r\n    allReducers,\r\n    {},\r\n    // ...connext it to the dev tools\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\n// Render the app with an attached memory store to the element #root\r\nReactDOM.render(\r\n    <LocalizeProvider store={store}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </LocalizeProvider>,\r\n    \r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}